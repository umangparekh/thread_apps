###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.1.7746/W32 for ARM        28/Sep/2015  14:43:34
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\Thread-1.0.1\app\thread\plugin\scan-debug\scan-debug.c
#    Command line =  
#        C:\SiliconLabs\Thread-1.0.1\app\thread\plugin\scan-debug\scan-debug.c
#        -D APP_BTL -D CORTEXM3 -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM3588 -D
#        PHY_EM3XX -D "BOARD_HEADER=\"thread-board.h\"" -D
#        "CONFIGURATION_HEADER=\"thread-configuration.h\"" -D
#        "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D
#        "__SOURCEFILE__=\"scan-debug.c\"" -D BOARD_DEV0680ETM -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        EMBER_STACK_IP -D EMBER_RIP_STACK -D HAVE_TLS_JPAKE -D
#        DEBUG_LEVEL=FULL_DEBUG -D
#        "APPLICATION_TOKEN_HEADER=\"thread-token.h\"" -lC
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\build\lst\
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\build\obj\
#        --debug --endian=little --cpu=Cortex-M3 --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\Thread-1.0.1\app\thread\plugin\scan-debug\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\app\util\
#        -I C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\stack\
#        -I C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\hal\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\hal\..\
#        -Ohz --use_c++_inline
#    List file    =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\build\lst\scan-debug.lst
#    Object file  =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\build\obj\scan-debug.o
#
###############################################################################

C:\SiliconLabs\Thread-1.0.1\app\thread\plugin\scan-debug\scan-debug.c
      1          // Copyright 2015 Silicon Laboratories, Inc.
      2          
      3          #include PLATFORM_HEADER
      4          #include CONFIGURATION_HEADER
      5          #include EMBER_AF_API_STACK
      6          #include EMBER_AF_API_HAL
      7          #ifdef EMBER_AF_API_DEBUG_PRINT
      8            #include EMBER_AF_API_DEBUG_PRINT
      9          #endif
     10          
     11          #ifndef ALIAS
     12            #define ALIAS(x) x
     13          #endif
     14          

   \                                 In section .text, align 2, keep-with-next
     15          void ALIAS(emberActiveScanHandler)(const EmberMacBeaconData *beaconData)
     16          {
   \                     emberActiveScanHandler: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
   \   00000004   0x4604             MOV      R4,R0
     17            uint8_t networkId[EMBER_NETWORK_ID_SIZE + 1] = {0};
   \   00000006   0xA800             ADD      R0,SP,#+0
   \   00000008   0x2114             MOVS     R1,#+20
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
     18          
     19            MEMCOPY(networkId, beaconData->networkId, EMBER_NETWORK_ID_SIZE);
   \   0000000E   0x2210             MOVS     R2,#+16
   \   00000010   0x4621             MOV      R1,R4
   \   00000012   0xA800             ADD      R0,SP,#+0
   \   00000014   0x.... 0x....      BL       halCommonMemMove
     20            emberAfCorePrintln("network id: %s", networkId);
   \   00000018   0xAA00             ADD      R2,SP,#+0
   \   0000001A   0x.... 0x....      ADR.W    R1,?_0
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0x.... 0x....      BL       emberAfPrintln
     21          
     22            emberAfCorePrint("extended pan id: ");
   \   00000024   0x.... 0x....      ADR.W    R1,?_1
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0x.... 0x....      BL       emberAfPrint
     23            emberAfCoreDebugExec(emberAfPrintExtendedPanId(beaconData->extendedPanId));
   \   0000002E   0x2001             MOVS     R0,#+1
   \   00000030   0x.... 0x....      BL       emberAfPrintEnabled
   \   00000034   0xB118             CBZ.N    R0,??emberActiveScanHandler_0
   \   00000036   0xF104 0x0010      ADD      R0,R4,#+16
   \   0000003A   0x.... 0x....      BL       emberAfPrintExtendedPanId
     24            emberAfCorePrintln("");
   \                     ??emberActiveScanHandler_0: (+1)
   \   0000003E   0x....             ADR.N    R5,??DataTable20  ;; ""
   \   00000040   0x.... 0x....      BL       ?Subroutine2
     25          
     26            emberAfCorePrint("long id: ");
   \                     ??CrossCallReturnLabel_11: (+1)
   \   00000044   0x.... 0x....      ADR.W    R1,?_3
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0x.... 0x....      BL       emberAfPrint
     27            emberAfCoreDebugExec(
     28              emberAfPrintBigEndianEui64((const EmberEui64 *)beaconData->longId);
     29            );
   \   0000004E   0x2001             MOVS     R0,#+1
   \   00000050   0x.... 0x....      BL       emberAfPrintEnabled
   \   00000054   0xB118             CBZ.N    R0,??emberActiveScanHandler_1
   \   00000056   0xF104 0x0018      ADD      R0,R4,#+24
   \   0000005A   0x.... 0x....      BL       emberAfPrintBigEndianEui64
     30            emberAfCorePrintln("");
   \                     ??emberActiveScanHandler_1: (+1)
   \   0000005E   0x.... 0x....      BL       ?Subroutine2
     31          
     32            emberAfCorePrintln("pan id: 0x%2x", beaconData->panId);
   \                     ??CrossCallReturnLabel_10: (+1)
   \   00000062   0x8C22             LDRH     R2,[R4, #+32]
   \   00000064   0x.... 0x....      ADR.W    R1,?_4
   \   00000068   0x.... 0x....      BL       ?Subroutine1
     33            emberAfCorePrintln("protocol id: %u", beaconData->protocolId);
   \                     ??CrossCallReturnLabel_8: (+1)
   \   0000006C   0xF104 0x0620      ADD      R6,R4,#+32
   \   00000070   0x.... 0x....      ADR.W    R1,?_5
   \   00000074   0x78B2             LDRB     R2,[R6, #+2]
   \   00000076   0x.... 0x....      BL       ?Subroutine1
     34            emberAfCorePrintln("channel: %u", beaconData->channel);
   \                     ??CrossCallReturnLabel_7: (+1)
   \   0000007A   0x78F2             LDRB     R2,[R6, #+3]
   \   0000007C   0x.... 0x....      ADR.W    R1,?_6
   \   00000080   0x.... 0x....      BL       ?Subroutine1
     35            emberAfCorePrintln("allowing join: %s",
     36                               (beaconData->allowingJoin ? "true" : "false"));
   \                     ??CrossCallReturnLabel_6: (+1)
   \   00000084   0x7930             LDRB     R0,[R6, #+4]
   \   00000086   0x.... 0x....      ADR.W    R1,?_7
   \   0000008A   0x2800             CMP      R0,#+0
   \   0000008C   0xBF14             ITE      NE 
   \   0000008E   0x.... 0x....      ADRNE.W  R2,?_8
   \   00000092   0x.... 0x....      ADREQ.W  R2,?_9
   \   00000096   0x.... 0x....      BL       ?Subroutine1
     37            emberAfCorePrintln("lqi: %u", beaconData->lqi);
   \                     ??CrossCallReturnLabel_5: (+1)
   \   0000009A   0x7972             LDRB     R2,[R6, #+5]
   \   0000009C   0x.... 0x....      ADR.W    R1,?_10
   \   000000A0   0x.... 0x....      BL       ?Subroutine1
     38            emberAfCorePrintln("rssi: %d dBm", beaconData->rssi);
   \                     ??CrossCallReturnLabel_4: (+1)
   \   000000A4   0xF996 0x2006      LDRSB    R2,[R6, #+6]
   \   000000A8   0x.... 0x....      ADR.W    R1,?_11
   \   000000AC   0x.... 0x....      BL       ?Subroutine1
     39            emberAfCorePrintln("version: %u", beaconData->version);
   \                     ??CrossCallReturnLabel_3: (+1)
   \   000000B0   0x79F2             LDRB     R2,[R6, #+7]
   \   000000B2   0x.... 0x....      ADR.W    R1,?_12
   \   000000B6   0x.... 0x....      BL       ?Subroutine1
     40            emberAfCorePrintln("short id: 0x%2x", beaconData->shortId);
   \                     ??CrossCallReturnLabel_2: (+1)
   \   000000BA   0x8932             LDRH     R2,[R6, #+8]
   \   000000BC   0x.... 0x....      ADR.W    R1,?_13
   \   000000C0   0x.... 0x....      BL       ?Subroutine1
     41            emberAfCorePrintln("steering data length: %u", beaconData->steeringDataLength);
   \                     ??CrossCallReturnLabel_1: (+1)
   \   000000C4   0x7EB2             LDRB     R2,[R6, #+26]
   \   000000C6   0x.... 0x....      ADR.W    R1,?_14
   \   000000CA   0x.... 0x....      BL       ?Subroutine1
     42            emberAfCorePrint("steering data: ");
   \                     ??CrossCallReturnLabel_0: (+1)
   \   000000CE   0x.... 0x....      ADR.W    R1,?_15
   \   000000D2   0x2001             MOVS     R0,#+1
   \   000000D4   0x.... 0x....      BL       emberAfPrint
     43            emberAfCorePrintBuffer(beaconData->steeringData,
     44                                   beaconData->steeringDataLength,
     45                                   true);
   \   000000D8   0x7EB2             LDRB     R2,[R6, #+26]
   \   000000DA   0x2301             MOVS     R3,#+1
   \   000000DC   0xF104 0x012A      ADD      R1,R4,#+42
   \   000000E0   0x2001             MOVS     R0,#+1
   \   000000E2   0x.... 0x....      BL       emberAfPrintBuffer
     46            emberAfCorePrintln("");
   \   000000E6   0x.... 0x....      BL       ?Subroutine2
     47          }
   \                     ??CrossCallReturnLabel_9: (+1)
   \   000000EA   0xB006             ADD      SP,SP,#+24
   \   000000EC   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \   00000000   0x4629             MOV      R1,R5
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      B.W      emberAfPrintln

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x.... 0x....      B.W      emberAfPrintln

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_19:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     48          

   \                                 In section .text, align 2, keep-with-next
     49          void ALIAS(emberEnergyScanHandler)(uint8_t channel, int8_t maxRssiValue)
     50          {
     51            emberAfCorePrintln("channel %u rssi: %d dBm", channel, maxRssiValue);
   \                     emberEnergyScanHandler: (+1)
   \   00000000   0x460B             MOV      R3,R1
   \   00000002   0x4602             MOV      R2,R0
   \   00000004   0x.... 0x....      ADR.W    R1,?_16
   \   00000008   0x....             B.N      ?Subroutine0
     52          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x.... 0x....      B.W      emberAfPrintln
     53          

   \                                 In section .text, align 2, keep-with-next
     54          void ALIAS(emberScanReturn)(EmberStatus status)
     55          {
     56            emberAfCorePrintln("%p 0x%x", "scan", status);
   \                     emberScanReturn: (+1)
   \   00000000   0x4603             MOV      R3,R0
   \   00000002   0x.... 0x....      ADR.W    R2,?_18
   \   00000006   0x.... 0x....      ADR.W    R1,?_17
   \   0000000A                      REQUIRE ?Subroutine0
   \   0000000A                      ;; // Fall through to label ?Subroutine0
     57          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .rodata, align 1, keep-with-next
   \                     ?_2:
   \   00000000   0x00               DC8 ""

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x6E 0x65          DC8 "network id: %s"
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x69 0x64    
   \              0x3A 0x20    
   \              0x25 0x73    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x65 0x78          DC8 "extended pan id: "
   \              0x74 0x65    
   \              0x6E 0x64    
   \              0x65 0x64    
   \              0x20 0x70    
   \              0x61 0x6E    
   \              0x20 0x69    
   \              0x64 0x3A    
   \              0x20 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x6C 0x6F          DC8 "long id: "
   \              0x6E 0x67    
   \              0x20 0x69    
   \              0x64 0x3A    
   \              0x20 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x70 0x61          DC8 "pan id: 0x%2x"
   \              0x6E 0x20    
   \              0x69 0x64    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x70 0x72          DC8 "protocol id: %u"
   \              0x6F 0x74    
   \              0x6F 0x63    
   \              0x6F 0x6C    
   \              0x20 0x69    
   \              0x64 0x3A    
   \              0x20 0x25    
   \              0x75 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x63 0x68          DC8 "channel: %u"
   \              0x61 0x6E    
   \              0x6E 0x65    
   \              0x6C 0x3A    
   \              0x20 0x25    
   \              0x75 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x61 0x6C          DC8 "allowing join: %s"
   \              0x6C 0x6F    
   \              0x77 0x69    
   \              0x6E 0x67    
   \              0x20 0x6A    
   \              0x6F 0x69    
   \              0x6E 0x3A    
   \              0x20 0x25    
   \              0x73 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x74 0x72          DC8 "true"
   \              0x75 0x65    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x66 0x61          DC8 "false"
   \              0x6C 0x73    
   \              0x65 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x6C 0x71          DC8 "lqi: %u"
   \              0x69 0x3A    
   \              0x20 0x25    
   \              0x75 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x72 0x73          DC8 "rssi: %d dBm"
   \              0x73 0x69    
   \              0x3A 0x20    
   \              0x25 0x64    
   \              0x20 0x64    
   \              0x42 0x6D    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x76 0x65          DC8 "version: %u"
   \              0x72 0x73    
   \              0x69 0x6F    
   \              0x6E 0x3A    
   \              0x20 0x25    
   \              0x75 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x73 0x68          DC8 "short id: 0x%2x"
   \              0x6F 0x72    
   \              0x74 0x20    
   \              0x69 0x64    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_14:
   \   00000000   0x73 0x74          DC8 "steering data length: %u"
   \              0x65 0x65    
   \              0x72 0x69    
   \              0x6E 0x67    
   \              0x20 0x64    
   \              0x61 0x74    
   \              0x61 0x20    
   \              0x6C 0x65    
   \              0x6E 0x67    
   \              0x74 0x68    
   \              0x3A 0x20    
   \              0x25 0x75    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_15:
   \   00000000   0x73 0x74          DC8 "steering data: "
   \              0x65 0x65    
   \              0x72 0x69    
   \              0x6E 0x67    
   \              0x20 0x64    
   \              0x61 0x74    
   \              0x61 0x3A    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_16:
   \   00000000   0x63 0x68          DC8 "channel %u rssi: %d dBm"
   \              0x61 0x6E    
   \              0x6E 0x65    
   \              0x6C 0x20    
   \              0x25 0x75    
   \              0x20 0x72    
   \              0x73 0x73    
   \              0x69 0x3A    
   \              0x20 0x25    
   \              0x64 0x20    
   \              0x64 0x42    
   \              0x6D 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_17:
   \   00000000   0x25 0x70          DC8 "%p 0x%x"
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_18:
   \   00000000   0x73 0x63          DC8 "scan"
   \              0x61 0x6E    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      40   emberActiveScanHandler
        40   -> __aeabi_memclr4
        40   -> emberAfPrint
        40   -> emberAfPrintBigEndianEui64
        40   -> emberAfPrintBuffer
        40   -> emberAfPrintEnabled
        40   -> emberAfPrintExtendedPanId
        40   -> emberAfPrintln
        40   -> halCommonMemMove
       0   emberEnergyScanHandler
         0   -> emberAfPrintln
       0   emberScanReturn
         0   -> emberAfPrintln


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable20
       6  ?Subroutine0
       6  ?Subroutine1
       8  ?Subroutine2
      16  ?_0
      20  ?_1
       8  ?_10
      16  ?_11
      12  ?_12
      16  ?_13
      28  ?_14
      16  ?_15
      24  ?_16
       8  ?_17
       8  ?_18
      20  ?_19
       1  ?_2
      12  ?_3
      16  ?_4
      16  ?_5
      12  ?_6
      20  ?_7
       8  ?_8
       8  ?_9
     238  emberActiveScanHandler
      10  emberEnergyScanHandler
      10  emberScanReturn

 
  21 bytes in section .rodata
 546 bytes in section .text
 
 546 bytes of CODE  memory
  21 bytes of CONST memory

Errors: none
Warnings: none
