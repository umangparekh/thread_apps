###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.1.7746/W32 for ARM        28/Sep/2015  14:43:37
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  C:\SiliconLabs\Thread-1.0.1\app\util\bootload\tftp\tftp.c
#    Command line =  
#        C:\SiliconLabs\Thread-1.0.1\app\util\bootload\tftp\tftp.c -D APP_BTL
#        -D CORTEXM3 -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM3588 -D PHY_EM3XX -D
#        "BOARD_HEADER=\"thread-board.h\"" -D
#        "CONFIGURATION_HEADER=\"thread-configuration.h\"" -D
#        "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D
#        "__SOURCEFILE__=\"tftp.c\"" -D BOARD_DEV0680ETM -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        EMBER_STACK_IP -D EMBER_RIP_STACK -D HAVE_TLS_JPAKE -D
#        DEBUG_LEVEL=FULL_DEBUG -D
#        "APPLICATION_TOKEN_HEADER=\"thread-token.h\"" -lC
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\build\lst\
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\build\obj\
#        --debug --endian=little --cpu=Cortex-M3 --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\Thread-1.0.1\app\util\bootload\tftp\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\app\util\
#        -I C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\stack\
#        -I C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\hal\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\hal\..\
#        -Ohz --use_c++_inline
#    List file    =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\build\lst\tftp.lst
#    Object file  =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\build\obj\tftp.o
#
###############################################################################

C:\SiliconLabs\Thread-1.0.1\app\util\bootload\tftp\tftp.c
      1          // File: tftp.c
      2          //
      3          // Description: TFTP Bootloader headers and defines
      4          //
      5          // Copyright 2013 by Silicon Laboratories. All rights reserved.             *80*
      6          
      7          #include PLATFORM_HEADER
      8          #include "stack/include/ember.h"
      9          #include "stack/core/log.h"
     10          #include "hal/hal.h"
     11          #include "app/util/serial/serial.h"
     12          #include "app/util/bootload/tftp/tftp.h"
     13          
     14          #include <stdlib.h>
     15          
     16          uint16_t emTftpRemoteTid = 0xFFFF;
     17          uint16_t emTftpLocalTid = 0xFFFF;

   \                                 In section .bss, align 2
     18          uint16_t emTftpBlockNumber = 0;
   \                     emTftpBlockNumber:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
     19          EmberIpv6Address emTftpRemoteIp = {0};
   \                     emTftpRemoteIp:
   \   00000000                      DS8 16

   \                                 In section .data, align 2
   \                     emTftpRemoteTid:
   \   00000000   0xFFFF             DC16 65535
   \                     emTftpLocalTid:
   \   00000002   0xFFFF             DC16 65535
     20          uint16_t emTftpBlockSize = TFTP_MAX_BLOCK_SIZE;
   \                     emTftpBlockSize:
   \   00000004   0x0200             DC16 512

   \                                 In section .bss, align 1
     21          bool emTftpScripting = false;
   \                     emTftpScripting:
   \   00000000                      DS8 1
     22          

   \                                 In section .text, align 2, keep-with-next
     23          void emReallyResetTftp(void)
     24          {
     25            emTftpLocalTid = 0xFFFF;
   \                     emReallyResetTftp: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable6_1
     26            emTftpRemoteTid = 0xFFFF;
     27            emTftpBlockNumber = 0;
   \   00000002   0x....             LDR.N    R2,??DataTable6_2
   \   00000004   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000008   0x8041             STRH     R1,[R0, #+2]
   \   0000000A   0x8001             STRH     R1,[R0, #+0]
   \   0000000C   0x2100             MOVS     R1,#+0
   \   0000000E   0x8011             STRH     R1,[R2, #+0]
     28            emTftpBlockSize = TFTP_MAX_BLOCK_SIZE;
   \   00000010   0xF44F 0x7100      MOV      R1,#+512
   \   00000014   0x8081             STRH     R1,[R0, #+4]
     29          }
   \   00000016   0x4770             BX       LR               ;; return
     30          

   \                                 In section .text, align 2, keep-with-next
     31          void emTftpListen(bool randomizeTid)
     32          {
   \                     emTftpListen: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0xB085             SUB      SP,SP,#+20
     33            if (randomizeTid) {
   \   00000006   0x....             LDR.N    R5,??DataTable6_1
   \   00000008   0xD003             BEQ.N    ??CrossCallReturnLabel_0
     34              emTftpLocalTid = rand() % 0xFFFF;
   \   0000000A   0x.... 0x....      BL       rand
   \   0000000E   0x.... 0x....      BL       ?Subroutine0
     35            }
     36          
     37            uint8_t maxTries = 15;
     38            uint8_t i = 0;
   \                     ??CrossCallReturnLabel_0: (+1)
   \   00000012   0x2600             MOVS     R6,#+0
     39            EmberIpv6Address localAddress = {0};
   \   00000014   0xA800             ADD      R0,SP,#+0
   \   00000016   0x2110             MOVS     R1,#+16
   \   00000018   0x.... 0x....      BL       __aeabi_memclr4
     40            assert(emberGetLocalIpAddress(0, &localAddress));
   \   0000001C   0x.... 0x....      ADR.W    R7,?_0
   \   00000020   0xA900             ADD      R1,SP,#+0
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x.... 0x....      BL       emberGetLocalIpAddress
   \   00000028   0xB918             CBNZ.N   R0,??emTftpListen_0
   \   0000002A   0x2128             MOVS     R1,#+40
   \   0000002C   0x4638             MOV      R0,R7
   \   0000002E   0x.... 0x....      BL       halInternalAssertFailed
     41          
     42            if (! emTftpScripting) {
   \                     ??emTftpListen_0: (+1)
   \   00000032   0x....             LDR.N    R0,??DataTable6_3
   \   00000034   0x7800             LDRB     R0,[R0, #+0]
   \   00000036   0xB9C8             CBNZ.N   R0,??emTftpListen_1
   \   00000038   0xE00C             B.N      ??CrossCallReturnLabel_1
     43              while (emberUdpListen(emTftpLocalTid, localAddress.bytes) != EMBER_SUCCESS) {
     44                assert(randomizeTid
     45                       && ++i < maxTries);
   \                     ??emTftpListen_2: (+1)
   \   0000003A   0xB11C             CBZ.N    R4,??emTftpListen_3
   \   0000003C   0x1C76             ADDS     R6,R6,#+1
   \   0000003E   0xB2F6             UXTB     R6,R6
   \   00000040   0x2E0F             CMP      R6,#+15
   \   00000042   0xD303             BCC.N    ??emTftpListen_4
   \                     ??emTftpListen_3: (+1)
   \   00000044   0x212D             MOVS     R1,#+45
   \   00000046   0x4638             MOV      R0,R7
   \   00000048   0x.... 0x....      BL       halInternalAssertFailed
     46                emTftpLocalTid = rand() % 0xFFFF;
   \                     ??emTftpListen_4: (+1)
   \   0000004C   0x.... 0x....      BL       rand
   \   00000050   0x.... 0x....      BL       ?Subroutine0
     47              }
   \                     ??CrossCallReturnLabel_1: (+1)
   \   00000054   0xA900             ADD      R1,SP,#+0
   \   00000056   0x8868             LDRH     R0,[R5, #+2]
   \   00000058   0x.... 0x....      BL       emberUdpListen
   \   0000005C   0x2800             CMP      R0,#+0
   \   0000005E   0xD1EC             BNE.N    ??emTftpListen_2
     48          
     49              emLogLine(BOOTLOAD, "TFTP Listening on port %u", emTftpLocalTid);
   \   00000060   0x886A             LDRH     R2,[R5, #+2]
   \   00000062   0x.... 0x....      ADR.W    R1,?_1
   \   00000066   0x2017             MOVS     R0,#+23
   \   00000068   0x.... 0x....      BL       emReallyLogLine
     50            }
     51          
     52            emTftpListenStatusHandler(emTftpLocalTid, &localAddress);
   \                     ??emTftpListen_1: (+1)
   \   0000006C   0x8868             LDRH     R0,[R5, #+2]
   \   0000006E   0xA900             ADD      R1,SP,#+0
   \   00000070   0x.... 0x....      BL       emTftpListenStatusHandler
     53          }
   \   00000074   0xB005             ADD      SP,SP,#+20
   \   00000076   0xBDF0             POP      {R4-R7,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000004   0xFB90 0xF1F1      SDIV     R1,R0,R1
   \   00000008   0xEBC1 0x4101      RSB      R1,R1,R1, LSL #+16
   \   0000000C   0x1A40             SUBS     R0,R0,R1
   \   0000000E   0x8068             STRH     R0,[R5, #+2]
   \   00000010   0x4770             BX       LR

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     54          

   \                                 In section .text, align 2, keep-with-next
     55          void quitCommand(void)
     56          {
     57            emberSerialPrintfLine(APP_SERIAL, "Bye");
   \                     quitCommand: (+1)
   \   00000000   0x....             ADR.N    R1,??DataTable6  ;; "Bye"
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      BL       emberSerialPrintfLine
     58            exit(0);
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       exit
   \   0000000E   0xBF00             Nop      
     59          }
     60          

   \                                 In section .text, align 2, keep-with-next
     61          void chooseInterfaceCommand(void)
     62          {
     63          #ifdef UNIX_HOST
     64            emTftpReallyChooseInterface((emberCommandArgumentCount() == 1
     65                                         ? emberUnsignedCommandArgument(0)
     66                                         : 0xFF),
     67                                        NULL);
     68          #endif
     69          }
   \                     chooseInterfaceCommand: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x42 0x79          DC8      "Bye"
   \              0x65 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     emTftpRemoteTid

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     emTftpBlockNumber

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     emTftpScripting

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x42 0x79          DC8 "Bye"
   \              0x65 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x74 0x66          DC8 "tftp.c"
   \              0x74 0x70    
   \              0x2E 0x63    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x54 0x46          DC8 "TFTP Listening on port %u"
   \              0x54 0x50    
   \              0x20 0x4C    
   \              0x69 0x73    
   \              0x74 0x65    
   \              0x6E 0x69    
   \              0x6E 0x67    
   \              0x20 0x6F    
   \              0x6E 0x20    
   \              0x70 0x6F    
   \              0x72 0x74    
   \              0x20 0x25    
   \              0x75 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   chooseInterfaceCommand
       0   emReallyResetTftp
      40   emTftpListen
        40   -> __aeabi_memclr4
        40   -> emReallyLogLine
        40   -> emTftpListenStatusHandler
        40   -> emberGetLocalIpAddress
        40   -> emberUdpListen
        40   -> halInternalAssertFailed
        40   -> rand
       0   quitCommand
         0   -> emberSerialPrintfLine
         0   -> exit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable6_3
      18  ?Subroutine0
       8  ?_0
      28  ?_1
       4  ?_2
      16  ?_3
       2  chooseInterfaceCommand
      24  emReallyResetTftp
       2  emTftpBlockNumber
     120  emTftpListen
      16  emTftpRemoteIp
       6  emTftpRemoteTid
          emTftpLocalTid
          emTftpBlockSize
       1  emTftpScripting
      16  quitCommand

 
  19 bytes in section .bss
   6 bytes in section .data
  20 bytes in section .rodata
 232 bytes in section .text
 
 232 bytes of CODE  memory
  20 bytes of CONST memory
  25 bytes of DATA  memory

Errors: none
Warnings: none
