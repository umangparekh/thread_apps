###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.1.7746/W32 for ARM        28/Sep/2015  14:43:38
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\thread-bookkeeping.c
#    Command line =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\thread-bookkeeping.c
#        -D APP_BTL -D CORTEXM3 -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM3588 -D
#        PHY_EM3XX -D "BOARD_HEADER=\"thread-board.h\"" -D
#        "CONFIGURATION_HEADER=\"thread-configuration.h\"" -D
#        "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D
#        "__SOURCEFILE__=\"thread-bookkeeping.c\"" -D BOARD_DEV0680ETM -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        EMBER_STACK_IP -D EMBER_RIP_STACK -D HAVE_TLS_JPAKE -D
#        DEBUG_LEVEL=FULL_DEBUG -D
#        "APPLICATION_TOKEN_HEADER=\"thread-token.h\"" -lC
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\build\lst\
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\build\obj\
#        --debug --endian=little --cpu=Cortex-M3 --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\app\util\
#        -I C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\stack\
#        -I C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\hal\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\hal\..\
#        -Ohz --use_c++_inline
#    List file    =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\build\lst\thread-bookkeeping.lst
#    Object file  =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\build\obj\thread-bookkeeping.o
#
###############################################################################

C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\thread-bookkeeping.c
      1          // This file is generated by Ember Desktop.  Please do not edit manually.
      2          //
      3          //
      4          
      5          #include PLATFORM_HEADER
      6          #include CONFIGURATION_HEADER
      7          #include EMBER_AF_API_EMBER_TYPES
      8          
      9          // OkToSleep function declarations.
     10          bool emberAfPluginIdleSleepOkToSleepCallback(uint32_t durationMs);
     11          

   \                                 In section .text, align 2, keep-with-next
     12          bool emberAfOkToSleep(uint32_t durationMs)
     13          {
     14            return emberAfPluginIdleSleepOkToSleepCallback(durationMs);
   \                     emberAfOkToSleep: (+1)
   \   00000000   0x.... 0x....      B.W      emberAfPluginIdleSleepOkToSleepCallback
     15          }
     16          
     17          // WakeUp function declarations.
     18          void emberAfPluginIdleSleepWakeUpCallback(uint32_t durationMs);
     19          

   \                                 In section .text, align 2, keep-with-next
     20          void emberAfPluginIdleSleepWakeUp(uint32_t durationMs)
     21          {
     22            emberAfPluginIdleSleepWakeUpCallback(durationMs);
   \                     emberAfPluginIdleSleepWakeUp: (+1)
   \   00000000   0x.... 0x....      B.W      emberAfPluginIdleSleepWakeUpCallback
     23          }
     24          
     25          // OkToIdle function declarations.
     26          bool emberAfPluginIdleSleepOkToIdleCallback(uint32_t durationMs);
     27          

   \                                 In section .text, align 2, keep-with-next
     28          bool emberAfOkToIdle(uint32_t durationMs)
     29          {
     30            return emberAfPluginIdleSleepOkToIdleCallback(durationMs);
   \                     emberAfOkToIdle: (+1)
   \   00000000   0x.... 0x....      B.W      emberAfPluginIdleSleepOkToIdleCallback
     31          }
     32          
     33          // Active function declarations.
     34          void emberAfPluginIdleSleepActiveCallback(uint32_t durationMs);
     35          

   \                                 In section .text, align 2, keep-with-next
     36          void emberAfPluginIdleSleepActive(uint32_t durationMs)
     37          {
     38            emberAfPluginIdleSleepActiveCallback(durationMs);
   \                     emberAfPluginIdleSleepActive: (+1)
   \   00000000   0x.... 0x....      B.W      emberAfPluginIdleSleepActiveCallback
     39          }
     40          
     41          // Main function declarations.
     42          void emberAfMainCallback(MAIN_FUNCTION_PARAMETERS);
     43          

   \                                 In section .text, align 2, keep-with-next
     44          void emberAfMain(MAIN_FUNCTION_PARAMETERS)
     45          {
     46            emberAfMainCallback(MAIN_FUNCTION_ARGUMENTS);
   \                     emberAfMain: (+1)
   \   00000000   0x.... 0x....      B.W      emberAfMainCallback
     47          }
     48          
     49          // Init function declarations.
     50          void emberAfInitCallback(void);
     51          void emberCommandReaderInit(void);
     52          void emberAfTftpBootloaderInit(void);
     53          

   \                                 In section .text, align 2, keep-with-next
     54          void emberAfInit(void)
     55          {
   \                     emberAfInit: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     56            emberAfInitCallback();
   \   00000002   0x.... 0x....      BL       emberAfInitCallback
     57            emberCommandReaderInit();
   \   00000006   0x.... 0x....      BL       emberCommandReaderInit
     58            emberAfTftpBootloaderInit();
   \   0000000A   0xE8BD 0x4001      POP      {R0,LR}
   \   0000000E   0x.... 0x....      B.W      emberAfTftpBootloaderInit
     59          }
     60          
     61          // Tick function declarations.
     62          void emberTick(void);
     63          void emberAfTickCallback(void);
     64          void emberAfPluginCliTickCallback(void);
     65          void emberAfPluginHeartbeatTickCallback(void);
     66          void emberAfPluginIdleSleepTickCallback(void);
     67          void emberSerialBufferTick(void);
     68          

   \                                 In section .text, align 2, keep-with-next
     69          void emberAfTick(void)
     70          {
   \                     emberAfTick: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     71            emberTick();
   \   00000002   0x.... 0x....      BL       emberTick
     72            emberAfTickCallback();
   \   00000006   0x.... 0x....      BL       emberAfTickCallback
     73            emberAfPluginCliTickCallback();
   \   0000000A   0x.... 0x....      BL       emberAfPluginCliTickCallback
     74            emberAfPluginHeartbeatTickCallback();
   \   0000000E   0x.... 0x....      BL       emberAfPluginHeartbeatTickCallback
     75            emberAfPluginIdleSleepTickCallback();
   \   00000012   0x.... 0x....      BL       emberAfPluginIdleSleepTickCallback
     76            emberSerialBufferTick();
   \   00000016   0xE8BD 0x4001      POP      {R0,LR}
   \   0000001A   0x.... 0x....      B.W      emberSerialBufferTick
     77          }
     78          
     79          // MarkApplicationBuffers function declarations.
     80          void emberAfMarkApplicationBuffersCallback(void);
     81          

   \                                 In section .text, align 2, keep-with-next
     82          void emberMarkApplicationBuffers(void)
     83          {
     84            emberAfMarkApplicationBuffersCallback();
   \                     emberMarkApplicationBuffers: (+1)
   \   00000000   0x.... 0x....      B.W      emberAfMarkApplicationBuffersCallback
     85          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   emberAfInit
         8   -> emberAfInitCallback
         0   -> emberAfTftpBootloaderInit
         8   -> emberCommandReaderInit
       0   emberAfMain
         0   -> emberAfMainCallback
       0   emberAfOkToIdle
         0   -> emberAfPluginIdleSleepOkToIdleCallback
       0   emberAfOkToSleep
         0   -> emberAfPluginIdleSleepOkToSleepCallback
       0   emberAfPluginIdleSleepActive
         0   -> emberAfPluginIdleSleepActiveCallback
       0   emberAfPluginIdleSleepWakeUp
         0   -> emberAfPluginIdleSleepWakeUpCallback
       8   emberAfTick
         8   -> emberAfPluginCliTickCallback
         8   -> emberAfPluginHeartbeatTickCallback
         8   -> emberAfPluginIdleSleepTickCallback
         8   -> emberAfTickCallback
         0   -> emberSerialBufferTick
         8   -> emberTick
       0   emberMarkApplicationBuffers
         0   -> emberAfMarkApplicationBuffersCallback


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      18  emberAfInit
       4  emberAfMain
       4  emberAfOkToIdle
       4  emberAfOkToSleep
       4  emberAfPluginIdleSleepActive
       4  emberAfPluginIdleSleepWakeUp
      30  emberAfTick
       4  emberMarkApplicationBuffers

 
 72 bytes in section .text
 
 72 bytes of CODE memory

Errors: none
Warnings: none
