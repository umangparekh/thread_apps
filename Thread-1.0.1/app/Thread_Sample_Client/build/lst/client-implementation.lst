###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.1.7746/W32 for ARM        28/Sep/2015  14:43:25
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\client-implementation.c
#    Command line =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\client-implementation.c
#        -D APP_BTL -D CORTEXM3 -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM3588 -D
#        PHY_EM3XX -D "BOARD_HEADER=\"thread-board.h\"" -D
#        "CONFIGURATION_HEADER=\"thread-configuration.h\"" -D
#        "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D
#        "__SOURCEFILE__=\"client-implementation.c\"" -D BOARD_DEV0680ETM -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        EMBER_STACK_IP -D EMBER_RIP_STACK -D HAVE_TLS_JPAKE -D
#        DEBUG_LEVEL=FULL_DEBUG -D
#        "APPLICATION_TOKEN_HEADER=\"thread-token.h\"" -lC
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\build\lst\
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\build\obj\
#        --debug --endian=little --cpu=Cortex-M3 --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\app\util\
#        -I C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\stack\
#        -I C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\hal\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\..\..\hal\..\
#        -Ohz --use_c++_inline
#    List file    =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\build\lst\client-implementation.lst
#    Object file  =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\build\obj\client-implementation.o
#
###############################################################################

C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Client\client-implementation.c
      1          // Copyright 2015 Silicon Laboratories, Inc.
      2          
      3          #include PLATFORM_HEADER
      4          #include CONFIGURATION_HEADER
      5          #include EMBER_AF_API_STACK
      6          #include EMBER_AF_API_HAL
      7          #include EMBER_AF_API_COMMAND_INTERPRETER2
      8          #ifdef EMBER_AF_API_DEBUG_PRINT
      9            #include EMBER_AF_API_DEBUG_PRINT
     10          #endif
     11          #include EMBER_AF_API_TFTP
     12          #include EMBER_AF_API_TFTP_BOOTLOADER
     13          
     14          #define ALIAS(x) x##Alias
     15          #include "app/thread/plugin/udp-debug/udp-debug.c"

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberUdpHandlerAlias(uint8_t const *, uint8_t const *, uint16_t, uint16_t, uint8_t const *, uint16_t)
   \                     emberUdpHandlerAlias: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
   \   00000008   0x461F             MOV      R7,R3
   \   0000000A   0x.... 0x....      ADR.W    R1,?_0
   \   0000000E   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_13: (+1)
   \   00000012   0x....             ADR.N    R1,??DataTable51  ;; " s="
   \   00000014   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_12: (+1)
   \   00000018   0x.... 0x....      BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_18: (+1)
   \   0000001C   0xB110             CBZ.N    R0,??emberUdpHandlerAlias_0
   \   0000001E   0x4628             MOV      R0,R5
   \   00000020   0x.... 0x....      BL       emberAfPrintIpv6Address
   \                     ??emberUdpHandlerAlias_0: (+1)
   \   00000024   0x....             ADR.N    R1,??DataTable51_1  ;; " d="
   \   00000026   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_11: (+1)
   \   0000002A   0x.... 0x....      BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_17: (+1)
   \   0000002E   0xB110             CBZ.N    R0,??emberUdpHandlerAlias_1
   \   00000030   0x4620             MOV      R0,R4
   \   00000032   0x.... 0x....      BL       emberAfPrintIpv6Address
   \                     ??emberUdpHandlerAlias_1: (+1)
   \   00000036   0x4632             MOV      R2,R6
   \   00000038   0x.... 0x....      ADR.W    R1,?_3
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0x.... 0x....      BL       emberAfPrint
   \   00000042   0x463A             MOV      R2,R7
   \   00000044   0x.... 0x....      ADR.W    R1,?_4
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0x.... 0x....      BL       emberAfPrint
   \   0000004E   0x....             ADR.N    R1,??DataTable51_2  ;; 0x20, 0x5B, 0x00, 0x00
   \   00000050   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_10: (+1)
   \   00000054   0x9A07             LDR      R2,[SP, #+28]
   \   00000056   0x9906             LDR      R1,[SP, #+24]
   \   00000058   0x2300             MOVS     R3,#+0
   \   0000005A   0x2001             MOVS     R0,#+1
   \   0000005C   0x.... 0x....      BL       emberAfPrintBuffer
   \   00000060   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   00000064   0x....             ADR.N    R1,??DataTable52  ;; "]"
   \   00000066   0x2001             MOVS     R0,#+1
   \   00000068   0x.... 0x....      B.W      emberAfPrintln

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x.... 0x....      B.W      emberAfPrintEnabled

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x.... 0x....      B.W      emberAfPrint
     16          
     17          // WARNING: This sample application generates a human-readable (i.e., ASCII)
     18          // join key based on a simple hash of the EUI64 of the node.  This method is
     19          // used because it provides a predictable yet reasonably unique key suitable
     20          // for a development kit node.  Real devices MUST NOT use join keys that are
     21          // based on the EUI64.  Random join keys MUST be used for real devices, with
     22          // the keys typically programmed during product manufacturing and printed on
     23          // the devices themselves for access by the user.
     24          
     25          // The client/server sample applications use a fixed network id to simplify
     26          // the join process.

   \                                 In section .text, align 4, keep-with-next
     27          static const uint8_t networkId[EMBER_NETWORK_ID_SIZE] = "client/server";
   \                     networkId:
   \   00000000   0x63 0x6C          DC8 "client/server"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x2F 0x73    
   \              0x65 0x72    
   \              0x76 0x65    
   \              0x72 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0
     28          
     29          static void resumeNetwork(void);
     30          static void joinNetwork(void);
     31          static void getJoinKey(uint8_t *joinKey, uint8_t *joinKeyLength);
     32          static void attachToNetwork(void);
     33          static void waitForServerAdvertisement(void);
     34          static void attachToServer(const EmberIpv6Address *newServer);
     35          static void reportDataToServer(void);
     36          static void detachFromServer(void);
     37          static void resetNetworkState(void);
     38          
     39          static EmberIpv6Address server;
     40          static uint8_t failedReports;
     41          #define REPORT_FAILURE_LIMIT 3
     42          #define WAIT_PERIOD_MS   (30 * MILLISECOND_TICKS_PER_SECOND)
     43          #define REPORT_PERIOD_MS (10 * MILLISECOND_TICKS_PER_SECOND)
     44          

   \                                 In section .text, align 4, keep-with-next
     45          static const uint8_t clientReportUri[] = "client/report";
   \                     clientReportUri:
   \   00000000   0x63 0x6C          DC8 "client/report"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x2F 0x72    
   \              0x65 0x70    
   \              0x6F 0x72    
   \              0x74 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
     46          static const uint8_t serverAdvertiseUri[] = "server/advertise";
   \                     serverAdvertiseUri:
   \   00000000   0x73 0x65          DC8 "server/advertise"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x2F 0x61    
   \              0x64 0x76    
   \              0x65 0x72    
   \              0x74 0x69    
   \              0x73 0x65    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .bss, align 4
   \                     failedReports:
   \   00000000                      DS8 1
   \   00000001                      DS8 1
   \   00000002                      DS8 2
     47          
     48          enum {
     49            INITIAL                       = 0,
     50            RESUME_NETWORK                = 1,
     51            JOIN_NETWORK                  = 2,
     52            ATTACH_TO_NETWORK             = 3,
     53            WAIT_FOR_SERVER_ADVERTISEMENT = 4,
     54            REPORT_DATA_TO_SERVER         = 5,
     55            WAIT_FOR_DATA_CONFIRMATION    = 6,
     56            RESET_NETWORK_STATE           = 7,
     57          };
     58          static uint8_t state = INITIAL;
     59          EmberEventControl stateEventControl;
   \                     stateEventControl:
   \   00000004                      DS8 8
   \   0000000C                      DS8 16
     60          static void setNextStateWithDelay(uint8_t nextState, uint32_t delayMs);
     61          #define setNextState(nextState)       setNextStateWithDelay((nextState), 0)
     62          #define repeatState()                 setNextStateWithDelay(state, 0)
     63          #define repeatStateWithDelay(delayMs) setNextStateWithDelay(state, (delayMs))
     64          

   \                                 In section .text, align 2, keep-with-next
     65          void emberAfInitCallback(void)
     66          {
   \                     emberAfInitCallback: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     67            // This callback is called after the stack has been initialized.  It is our
     68            // opporunity to do initialization, like resuming the network or joining a
     69            // new network.
     70          
     71            emberEventControlSetInactive(stateEventControl);
   \   00000002   0x.... 0x....      LDR.W    R4,??DataTable61_1
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x7120             STRB     R0,[R4, #+4]
     72          
     73            switch (emberNetworkStatus()) {
   \   0000000A   0x.... 0x....      BL       emberNetworkStatus
   \   0000000E   0xB130             CBZ.N    R0,??emberAfInitCallback_0
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xD00A             BEQ.N    ??emberAfInitCallback_1
   \   00000014   0xD306             BCC.N    ??emberAfInitCallback_2
   \   00000016   0x2804             CMP      R0,#+4
   \   00000018   0xD00C             BEQ.N    ??emberAfInitCallback_3
   \   0000001A   0xD308             BCC.N    ??emberAfInitCallback_4
   \   0000001C   0xE00F             B.N      ??emberAfInitCallback_5
     74            case EMBER_NO_NETWORK:
     75              setNextState(JOIN_NETWORK);
   \                     ??emberAfInitCallback_0: (+1)
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x2002             MOVS     R0,#+2
   \   00000022   0xE009             B.N      ??emberAfInitCallback_6
     76              break;
     77            case EMBER_SAVED_NETWORK:
     78              setNextState(RESUME_NETWORK);
   \                     ??emberAfInitCallback_2: (+1)
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0xE006             B.N      ??emberAfInitCallback_6
     79              break;
     80            case EMBER_JOINING_NETWORK:
     81              state = JOIN_NETWORK;
   \                     ??emberAfInitCallback_1: (+1)
   \   0000002A   0x7060             STRB     R0,[R4, #+1]
     82              break;
   \   0000002C   0xBD10             POP      {R4,PC}
     83            case EMBER_JOINED_NETWORK:
     84              setNextState(WAIT_FOR_SERVER_ADVERTISEMENT);
   \                     ??emberAfInitCallback_4: (+1)
   \   0000002E   0x2100             MOVS     R1,#+0
   \   00000030   0x2004             MOVS     R0,#+4
   \   00000032   0xE001             B.N      ??emberAfInitCallback_6
     85              break;
     86            case EMBER_JOINED_NETWORK_NO_PARENT:
     87              setNextState(ATTACH_TO_NETWORK);
   \                     ??emberAfInitCallback_3: (+1)
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0x2003             MOVS     R0,#+3
   \                     ??emberAfInitCallback_6: (+1)
   \   00000038   0xE8BD 0x4010      POP      {R4,LR}
   \   0000003C   0x....             B.N      setNextStateWithDelay
     88              break;
     89            default:
     90              assert(false);
   \                     ??emberAfInitCallback_5: (+1)
   \   0000003E   0xE8BD 0x4010      POP      {R4,LR}
   \   00000042   0x215A             MOVS     R1,#+90
   \   00000044   0x.... 0x....      ADR.W    R0,?_7
   \   00000048   0x.... 0x....      B.W      halInternalAssertFailed
     91            }
     92          }
     93          
     94          static void resumeNetwork(void)
     95          {

   \                                 In section .rodata, align 4, keep-with-next
     96            EmberNetworkParameters parameters = {{0}};
   \                     ?_32:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000040   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
     97            uint8_t networkId[EMBER_NETWORK_ID_SIZE + 1] = {0};
   \                     ?_33:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     98          
     99            assert(state == RESUME_NETWORK);
    100          
    101            emberGetNetworkParameters(&parameters);
    102            MEMCOPY(networkId, parameters.networkId, EMBER_NETWORK_ID_SIZE);
    103          
    104            emberAfCorePrintln("Resuming operation on network \"%s\"", networkId);
    105          
    106            emberResumeNetwork();
    107          }
    108          

   \                                 In section .text, align 2, keep-with-next
    109          void emberResumeNetworkReturn(EmberStatus status)
    110          {
   \                     emberResumeNetworkReturn: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x.... 0x....      BL       ?Subroutine5
    111            // If resuming succeeds, we can proceed to waiting for a server
    112            // advertisement.  If not, we need to join a network first.  See the note
    113            // below about resuming sometimes being reported via a join status.
    114          
    115            assert(state == RESUME_NETWORK);
   \                     ??CrossCallReturnLabel_26: (+1)
   \   00000006   0x2801             CMP      R0,#+1
   \   00000008   0xB09A             SUB      SP,SP,#+104
   \   0000000A   0xD002             BEQ.N    ??CrossCallReturnLabel_25
   \   0000000C   0x2173             MOVS     R1,#+115
   \   0000000E   0x.... 0x....      BL       ?Subroutine4
    116          
    117            if (status == EMBER_SUCCESS) {
   \                     ??CrossCallReturnLabel_25: (+1)
   \   00000012   0xB984             CBNZ.N   R4,??emberResumeNetworkReturn_0
    118              EmberNetworkParameters parameters = {{0}};
   \   00000014   0x.... 0x....      BL       ?Subroutine8
    119              uint8_t networkId[EMBER_NETWORK_ID_SIZE + 1] = {0};
   \                     ??CrossCallReturnLabel_40: (+1)
   \   00000018   0x.... 0x....      BL       ?Subroutine6
    120              emberGetNetworkParameters(&parameters);
   \                     ??CrossCallReturnLabel_30: (+1)
   \   0000001C   0x.... 0x....      BL       ?Subroutine9
    121              MEMCOPY(networkId, parameters.networkId, EMBER_NETWORK_ID_SIZE);
   \                     ??CrossCallReturnLabel_48: (+1)
   \   00000020   0x.... 0x....      BL       ?Subroutine7
    122              emberAfCorePrintln("Resumed operation on network \"%s\"", networkId);
   \                     ??CrossCallReturnLabel_39: (+1)
   \   00000024   0xAA00             ADD      R2,SP,#+0
   \   00000026   0x.... 0x....      ADR.W    R1,?_9
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x.... 0x....      BL       emberAfPrintln
    123              setNextState(WAIT_FOR_SERVER_ADVERTISEMENT);
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x2004             MOVS     R0,#+4
   \   00000034   0xE016             B.N      ??emberResumeNetworkReturn_1
    124            } else if (status == EMBER_ATTACH_FAILED
    125                       && emberNetworkStatus() == EMBER_JOINED_NETWORK_NO_PARENT) {
   \                     ??emberResumeNetworkReturn_0: (+1)
   \   00000036   0x2CC2             CMP      R4,#+194
   \   00000038   0xD10A             BNE.N    ??emberResumeNetworkReturn_2
   \   0000003A   0x.... 0x....      BL       emberNetworkStatus
   \   0000003E   0x2804             CMP      R0,#+4
   \   00000040   0xD108             BNE.N    ??emberResumeNetworkReturn_3
    126              emberAfCorePrintln("ERR: No connection to network");
   \   00000042   0x.... 0x....      ADR.W    R1,?_10
   \   00000046   0x.... 0x....      BL       ??Subroutine1_0
    127              setNextState(ATTACH_TO_NETWORK);
   \                     ??CrossCallReturnLabel_4: (+1)
   \   0000004A   0x2100             MOVS     R1,#+0
   \   0000004C   0x2003             MOVS     R0,#+3
   \   0000004E   0xE009             B.N      ??emberResumeNetworkReturn_1
    128            } else if (status != EMBER_RESUME_FAILED_NEW_NETWORK) {
   \                     ??emberResumeNetworkReturn_2: (+1)
   \   00000050   0x2CC4             CMP      R4,#+196
   \   00000052   0xD009             BEQ.N    ??emberResumeNetworkReturn_4
    129              emberAfCorePrintln("ERR: Resuming failed: 0x%x", status);
   \                     ??emberResumeNetworkReturn_3: (+1)
   \   00000054   0x4622             MOV      R2,R4
   \   00000056   0x.... 0x....      ADR.W    R1,?_11
   \   0000005A   0x2001             MOVS     R0,#+1
   \   0000005C   0x.... 0x....      BL       emberAfPrintln
    130              setNextState(JOIN_NETWORK);
   \   00000060   0x2100             MOVS     R1,#+0
   \   00000062   0x2002             MOVS     R0,#+2
   \                     ??emberResumeNetworkReturn_1: (+1)
   \   00000064   0x.... 0x....      BL       setNextStateWithDelay
    131            }
    132          }
   \                     ??emberResumeNetworkReturn_4: (+1)
   \   00000068   0xB01A             ADD      SP,SP,#+104
   \   0000006A   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine5: (+1)
   \   00000000   0x4604             MOV      R4,R0
   \                     ??Subroutine5_0: (+1)
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable61_1
   \   00000006   0x7840             LDRB     R0,[R0, #+1]
   \   00000008   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine8: (+1)
   \   00000000   0xA805             ADD      R0,SP,#+20
   \   00000002   0x2150             MOVS     R1,#+80
   \   00000004   0x.... 0x....      B.W      __aeabi_memclr4

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine9: (+1)
   \   00000000   0xA805             ADD      R0,SP,#+20
   \   00000002   0x.... 0x....      B.W      emberGetNetworkParameters

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine7: (+1)
   \   00000000   0x2210             MOVS     R2,#+16
   \   00000002   0xA905             ADD      R1,SP,#+20
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x.... 0x....      B.W      halCommonMemMove

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine6: (+1)
   \   00000000   0xA800             ADD      R0,SP,#+0
   \   00000002   0x2114             MOVS     R1,#+20
   \   00000004   0x.... 0x....      B.W      __aeabi_memclr4

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4: (+1)
   \   00000000   0x.... 0x....      ADR.W    R0,?_7
   \   00000004   0x.... 0x....      B.W      halInternalAssertFailed

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0x....             ADR.N    R1,??DataTable61  ;; ""
   \                     ??Subroutine1_0: (+1)
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      B.W      emberAfPrintln

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_34:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000040   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_35:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    133          

   \                                 In section .text, align 2, keep-with-next
    134          static void joinNetwork(void)
    135          {
   \                     joinNetwork: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB099             SUB      SP,SP,#+100
    136            // When joining a network, we look for one specifically with our network id.
    137            // The commissioner must have our join key for this to succeed.
    138          
    139            EmberNetworkParameters parameters = {{0}};
   \   00000004   0x.... 0x....      BL       ?Subroutine8
    140            uint8_t joinKey[EMBER_ENCRYPTION_KEY_SIZE + 1] = {0};
   \                     ??CrossCallReturnLabel_41: (+1)
   \   00000008   0x.... 0x....      BL       ?Subroutine6
    141          
    142            assert(state == JOIN_NETWORK);
   \                     ??CrossCallReturnLabel_31: (+1)
   \   0000000C   0x.... 0x....      BL       ??Subroutine5_0
   \                     ??CrossCallReturnLabel_28: (+1)
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xD002             BEQ.N    ??CrossCallReturnLabel_24
   \   00000014   0x218E             MOVS     R1,#+142
   \   00000016   0x.... 0x....      BL       ?Subroutine4
    143          
    144            MEMCOPY(parameters.networkId, networkId, sizeof(networkId));
   \                     ??CrossCallReturnLabel_24: (+1)
   \   0000001A   0x.... 0x....      ADR.W    R4,networkId
   \   0000001E   0x2210             MOVS     R2,#+16
   \   00000020   0x4621             MOV      R1,R4
   \   00000022   0xA805             ADD      R0,SP,#+20
   \   00000024   0x.... 0x....      BL       halCommonMemMove
    145            parameters.nodeType = EMBER_ROUTER;
   \   00000028   0x2002             MOVS     R0,#+2
   \   0000002A   0xF88D 0x003F      STRB     R0,[SP, #+63]
    146            parameters.radioTxPower = 3;
   \   0000002E   0x2003             MOVS     R0,#+3
   \   00000030   0xF88D 0x0040      STRB     R0,[SP, #+64]
    147            getJoinKey(joinKey, &parameters.joinKeyLength);
   \   00000034   0x.... 0x....      BL       emberEui64
   \   00000038   0x2100             MOVS     R1,#+0
   \   0000003A   0xF88D 0x1061      STRB     R1,[SP, #+97]
   \   0000003E   0xA900             ADD      R1,SP,#+0
   \                     ??joinNetwork_0: (+1)
   \   00000040   0xF89D 0x2061      LDRB     R2,[SP, #+97]
   \   00000044   0x5C13             LDRB     R3,[R2, R0]
   \   00000046   0xF003 0x050F      AND      R5,R3,#0xF
   \   0000004A   0xEB05 0x1313      ADD      R3,R5,R3, LSR #+4
   \   0000004E   0x5453             STRB     R3,[R2, R1]
   \   00000050   0xF89D 0x2061      LDRB     R2,[SP, #+97]
   \   00000054   0x5C53             LDRB     R3,[R2, R1]
   \   00000056   0x2B0A             CMP      R3,#+10
   \   00000058   0xBFB4             ITE      LT 
   \   0000005A   0x2530             MOVLT    R5,#+48
   \   0000005C   0x2537             MOVGE    R5,#+55
   \   0000005E   0x18EB             ADDS     R3,R5,R3
   \   00000060   0x5453             STRB     R3,[R2, R1]
   \   00000062   0xF89D 0x2061      LDRB     R2,[SP, #+97]
   \   00000066   0x1C52             ADDS     R2,R2,#+1
   \   00000068   0xF88D 0x2061      STRB     R2,[SP, #+97]
   \   0000006C   0xB2D2             UXTB     R2,R2
   \   0000006E   0x2A08             CMP      R2,#+8
   \   00000070   0xDBE6             BLT.N    ??joinNetwork_0
    148            MEMCOPY(parameters.joinKey, joinKey, parameters.joinKeyLength);
   \   00000072   0xF10D 0x0051      ADD      R0,SP,#+81
   \   00000076   0x.... 0x....      BL       halCommonMemMove
    149          
    150            emberAfCorePrintln("Searching for network \"%s\" using join key \"%s\"",
    151                               networkId,
    152                               joinKey);
   \   0000007A   0xAB00             ADD      R3,SP,#+0
   \   0000007C   0x4622             MOV      R2,R4
   \   0000007E   0x.... 0x....      ADR.W    R1,?_12
   \   00000082   0x2001             MOVS     R0,#+1
   \   00000084   0x.... 0x....      BL       emberAfPrintln
    153          
    154            emberJoinNetwork(&parameters,
    155                             (EMBER_NETWORK_ID_OPTION
    156                              | EMBER_NODE_TYPE_OPTION
    157                              | EMBER_TX_POWER_OPTION
    158                              | EMBER_JOIN_KEY_OPTION),
    159                             EMBER_ALL_802_15_4_CHANNELS_MASK);
   \   00000088   0x.... 0x....      LDR.W    R2,??DataTable61_2  ;; 0x7fff800
   \   0000008C   0xF240 0x1131      MOVW     R1,#+305
   \   00000090   0xA805             ADD      R0,SP,#+20
   \   00000092   0x.... 0x....      BL       emberJoinNetwork
    160          }
   \   00000096   0xB019             ADD      SP,SP,#+100
   \   00000098   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_36:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000040   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_37:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    161          
    162          static void getJoinKey(uint8_t *joinKey, uint8_t *joinKeyLength)
    163          {
    164            // Using a join key generated from the EUI64 of the node is a security risk,
    165            // but is useful for demonstration purposes.  See the warning above.
    166          
    167            const EmberEui64 *eui64;
    168          
    169            eui64 = emberEui64();
    170            for (*joinKeyLength = 0; *joinKeyLength < EUI64_SIZE; (*joinKeyLength)++) {
    171              joinKey[*joinKeyLength] = ((eui64->bytes[*joinKeyLength] & 0x0F)
    172                                         + (eui64->bytes[*joinKeyLength] >> 4));
    173              joinKey[*joinKeyLength] += (joinKey[*joinKeyLength] < 10 ? '0' : 'A' - 10);
    174            }
    175          }
    176          

   \                                 In section .text, align 2, keep-with-next
    177          void emberJoinNetworkReturn(EmberStatus status)
    178          {
   \                     emberJoinNetworkReturn: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    179            // After joining, we can proceed to waiting for a server advertisement.  If
    180            // joining fails, we simply try again.  Note that emberJoinNetworkReturn is
    181            // also a generic stack status handler, and is called at various times
    182            // throughout the lifetime of the network.  In particular, it notifies us if
    183            // we have lost our connection to the network, in which case we will try to
    184            // rejoin.
    185          
    186            if (state == RESUME_NETWORK) {
   \   00000002   0x.... 0x....      LDR.W    R4,??DataTable61_1
   \   00000006   0x7861             LDRB     R1,[R4, #+1]
   \   00000008   0x2901             CMP      R1,#+1
   \   0000000A   0xB09A             SUB      SP,SP,#+104
   \   0000000C   0xD102             BNE.N    ??emberJoinNetworkReturn_0
    187              emberResumeNetworkReturn(status);
   \   0000000E   0x.... 0x....      BL       emberResumeNetworkReturn
   \   00000012   0xE039             B.N      ??emberJoinNetworkReturn_1
    188            } else if (state == JOIN_NETWORK || state == ATTACH_TO_NETWORK) {
   \                     ??emberJoinNetworkReturn_0: (+1)
   \   00000014   0x2902             CMP      R1,#+2
   \   00000016   0xBF18             IT       NE 
   \   00000018   0x2903             CMPNE    R1,#+3
   \   0000001A   0x4603             MOV      R3,R0
   \   0000001C   0xD126             BNE.N    ??emberJoinNetworkReturn_2
    189              if (status == EMBER_SUCCESS) {
   \   0000001E   0xB9B8             CBNZ.N   R0,??emberJoinNetworkReturn_3
    190                EmberNetworkParameters parameters = {{0}};
   \   00000020   0x.... 0x....      BL       ?Subroutine8
    191                uint8_t networkId[EMBER_NETWORK_ID_SIZE + 1] = {0};
   \                     ??CrossCallReturnLabel_42: (+1)
   \   00000024   0x.... 0x....      BL       ?Subroutine6
    192                emberGetNetworkParameters(&parameters);
   \                     ??CrossCallReturnLabel_32: (+1)
   \   00000028   0x.... 0x....      BL       ?Subroutine9
    193                MEMCOPY(networkId, parameters.networkId, EMBER_NETWORK_ID_SIZE);
   \                     ??CrossCallReturnLabel_47: (+1)
   \   0000002C   0x.... 0x....      BL       ?Subroutine7
    194                emberAfCorePrintln("%s network \"%s\"",
    195                                   (state == JOIN_NETWORK ? "Joined" : "Rejoined"),
    196                                   networkId);
   \                     ??CrossCallReturnLabel_38: (+1)
   \   00000030   0x7860             LDRB     R0,[R4, #+1]
   \   00000032   0x.... 0x....      ADR.W    R1,?_13
   \   00000036   0x2802             CMP      R0,#+2
   \   00000038   0xBF0C             ITE      EQ 
   \   0000003A   0x.... 0x....      ADREQ.W  R2,?_14
   \   0000003E   0x.... 0x....      ADRNE.W  R2,?_15
   \   00000042   0xAB00             ADD      R3,SP,#+0
   \   00000044   0x2001             MOVS     R0,#+1
   \   00000046   0x.... 0x....      BL       emberAfPrintln
    197                setNextState(WAIT_FOR_SERVER_ADVERTISEMENT);
   \   0000004A   0x2100             MOVS     R1,#+0
   \   0000004C   0x2004             MOVS     R0,#+4
   \   0000004E   0xE019             B.N      ??emberJoinNetworkReturn_4
    198              } else {
    199                emberAfCorePrintln("ERR: %s failed: 0x%x",
    200                                   (state == JOIN_NETWORK ? "Joining" : "Rejoining"),
    201                                   status);
   \                     ??emberJoinNetworkReturn_3: (+1)
   \   00000050   0x2902             CMP      R1,#+2
   \   00000052   0xBF0C             ITE      EQ 
   \   00000054   0x.... 0x....      ADREQ.W  R2,?_17
   \   00000058   0x.... 0x....      ADRNE.W  R2,?_18
   \   0000005C   0x.... 0x....      ADR.W    R1,?_16
   \   00000060   0x2001             MOVS     R0,#+1
   \   00000062   0x.... 0x....      BL       emberAfPrintln
    202                repeatState();
   \   00000066   0x7860             LDRB     R0,[R4, #+1]
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0xE00B             B.N      ??emberJoinNetworkReturn_4
    203              }
    204            } else if (status == EMBER_ATTACH_FAILED
    205                       && emberNetworkStatus() == EMBER_JOINED_NETWORK_NO_PARENT) {
   \                     ??emberJoinNetworkReturn_2: (+1)
   \   0000006C   0x2BC2             CMP      R3,#+194
   \   0000006E   0xD10B             BNE.N    ??emberJoinNetworkReturn_1
   \   00000070   0x.... 0x....      BL       emberNetworkStatus
   \   00000074   0x2804             CMP      R0,#+4
   \   00000076   0xD107             BNE.N    ??emberJoinNetworkReturn_1
    206              emberAfCorePrintln("ERR: Lost connection to network");
   \   00000078   0x.... 0x....      ADR.W    R1,?_19
   \   0000007C   0x.... 0x....      BL       ??Subroutine1_0
    207              setNextState(ATTACH_TO_NETWORK);
   \                     ??CrossCallReturnLabel_3: (+1)
   \   00000080   0x2100             MOVS     R1,#+0
   \   00000082   0x2003             MOVS     R0,#+3
   \                     ??emberJoinNetworkReturn_4: (+1)
   \   00000084   0x.... 0x....      BL       setNextStateWithDelay
    208            }
    209          }
   \                     ??emberJoinNetworkReturn_1: (+1)
   \   00000088   0xB01A             ADD      SP,SP,#+104
   \   0000008A   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_38:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000040   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_39:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    210          
    211          static void attachToNetwork(void)
    212          {
    213            assert(state == ATTACH_TO_NETWORK);
    214            emberAttachToNetwork();
    215          }
    216          

   \                                 In section .text, align 2, keep-with-next
    217          void emberAttachToNetworkReturn(EmberStatus status)
    218          {
   \                     emberAttachToNetworkReturn: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x.... 0x....      BL       ?Subroutine5
    219            // This return indicates whether the stack is going to attempt to attach.
    220            // If so, the result is reported later in the form of a join.  If we cannot
    221            // even attempt to attach, we just give up and reset out network state, which
    222            // will trigger a fresh join attempt.
    223          
    224            assert(state == ATTACH_TO_NETWORK);
   \                     ??CrossCallReturnLabel_27: (+1)
   \   00000006   0x2803             CMP      R0,#+3
   \   00000008   0xB09A             SUB      SP,SP,#+104
   \   0000000A   0xD002             BEQ.N    ??CrossCallReturnLabel_23
   \   0000000C   0x21E0             MOVS     R1,#+224
   \   0000000E   0x.... 0x....      BL       ?Subroutine4
    225          
    226            if (status == EMBER_SUCCESS) {
   \                     ??CrossCallReturnLabel_23: (+1)
   \   00000012   0xB974             CBNZ.N   R4,??emberAttachToNetworkReturn_0
    227              EmberNetworkParameters parameters = {{0}};
   \   00000014   0x.... 0x....      BL       ?Subroutine8
    228              uint8_t networkId[EMBER_NETWORK_ID_SIZE + 1] = {0};
   \                     ??CrossCallReturnLabel_43: (+1)
   \   00000018   0x.... 0x....      BL       ?Subroutine6
    229              emberGetNetworkParameters(&parameters);
   \                     ??CrossCallReturnLabel_33: (+1)
   \   0000001C   0x.... 0x....      BL       ?Subroutine9
    230              MEMCOPY(networkId, parameters.networkId, EMBER_NETWORK_ID_SIZE);
   \                     ??CrossCallReturnLabel_46: (+1)
   \   00000020   0x.... 0x....      BL       ?Subroutine7
    231              emberAfCorePrintln("Rejoining network \"%s\"", networkId);
   \                     ??CrossCallReturnLabel_37: (+1)
   \   00000024   0xAA00             ADD      R2,SP,#+0
   \   00000026   0x.... 0x....      ADR.W    R1,?_20
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x.... 0x....      BL       emberAfPrintln
   \   00000030   0xE009             B.N      ??emberAttachToNetworkReturn_1
    232            } else {
    233              emberAfCorePrintln("ERR: Unable to rejoin: 0x%x", status);
   \                     ??emberAttachToNetworkReturn_0: (+1)
   \   00000032   0x4622             MOV      R2,R4
   \   00000034   0x.... 0x....      ADR.W    R1,?_21
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0x.... 0x....      BL       emberAfPrintln
    234              setNextState(RESET_NETWORK_STATE);
   \   0000003E   0x2100             MOVS     R1,#+0
   \   00000040   0x2007             MOVS     R0,#+7
   \   00000042   0x.... 0x....      BL       setNextStateWithDelay
    235            }
    236          }
   \                     ??emberAttachToNetworkReturn_1: (+1)
   \   00000046   0xB01A             ADD      SP,SP,#+104
   \   00000048   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_40:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000040   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_41:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    237          
    238          static void waitForServerAdvertisement(void)
    239          {
    240            // Once on the network, we wait for a server to advertise itself.  We
    241            // periodically print a message while waiting to prove we are alive.
    242          
    243            assert(state == WAIT_FOR_SERVER_ADVERTISEMENT);
    244          
    245            emberAfCorePrintln("Waiting for an advertisement from a server");
    246          
    247            repeatStateWithDelay(WAIT_PERIOD_MS);
    248          }
    249          

   \                                 In section .text, align 2, keep-with-next
    250          void emberCoapMessageHandler(const EmberIpv6Address *source,
    251                                       EmberCoapCode code,
    252                                       const uint8_t *token,
    253                                       uint8_t tokenLength,
    254                                       const uint8_t *uriPath,
    255                                       uint16_t uriPathLength,
    256                                       const uint8_t *payload,
    257                                       uint16_t payloadLength)
    258          {
   \                     emberCoapMessageHandler: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0xB085             SUB      SP,SP,#+20
    259            // Advertisements from servers are sent as CoAP POST requests to the
    260            // "server/advertise" URI.  When we receive an advertisement, we attach to
    261            // the that sent it and beginning sending reports.
    262          
    263            if (emberCoapIsRequest(code)) {
   \   00000008   0x4628             MOV      R0,R5
   \   0000000A   0x.... 0x....      BL       emberCoapIsRequest
   \   0000000E   0xB318             CBZ.N    R0,??emberCoapMessageHandler_0
    264              EmberCoapCode responseCode;
    265              uint8_t convertedUri[sizeof(serverAdvertiseUri)] = {0};
   \   00000010   0x.... 0x....      BL       ?Subroutine6
    266          
    267              if (code != EMBER_COAP_CODE_POST) {
   \                     ??CrossCallReturnLabel_34: (+1)
   \   00000014   0x2D02             CMP      R5,#+2
   \   00000016   0xBF18             IT       NE 
   \   00000018   0x2085             MOVNE    R0,#+133
    268                responseCode = EMBER_COAP_CODE_405_METHOD_NOT_ALLOWED;
   \   0000001A   0xD119             BNE.N    ??emberCoapMessageHandler_1
    269              } else if (!emberCoapConvertUri(uriPath,
    270                                              uriPathLength,
    271                                              convertedUri,
    272                                              sizeof(convertedUri))
    273                         || strncmp((const char *)convertedUri,
    274                                    (const char *)serverAdvertiseUri,
    275                                    sizeof(serverAdvertiseUri)) != 0) {
   \   0000001C   0x9909             LDR      R1,[SP, #+36]
   \   0000001E   0x9808             LDR      R0,[SP, #+32]
   \   00000020   0x2311             MOVS     R3,#+17
   \   00000022   0xAA00             ADD      R2,SP,#+0
   \   00000024   0x.... 0x....      BL       emberCoapDecodeUri
   \   00000028   0xB130             CBZ.N    R0,??emberCoapMessageHandler_2
   \   0000002A   0x2211             MOVS     R2,#+17
   \   0000002C   0x.... 0x....      ADR.W    R1,serverAdvertiseUri
   \   00000030   0xA800             ADD      R0,SP,#+0
   \   00000032   0x.... 0x....      BL       strncmp
   \   00000036   0xB108             CBZ.N    R0,??emberCoapMessageHandler_3
    276                responseCode = EMBER_COAP_CODE_404_NOT_FOUND;
   \                     ??emberCoapMessageHandler_2: (+1)
   \   00000038   0x2084             MOVS     R0,#+132
   \   0000003A   0xE009             B.N      ??emberCoapMessageHandler_1
    277              } else if (state != WAIT_FOR_SERVER_ADVERTISEMENT) {
   \                     ??emberCoapMessageHandler_3: (+1)
   \   0000003C   0x.... 0x....      BL       ??Subroutine5_0
   \                     ??CrossCallReturnLabel_29: (+1)
   \   00000040   0x2804             CMP      R0,#+4
   \   00000042   0xBF18             IT       NE 
   \   00000044   0x20A3             MOVNE    R0,#+163
    278                responseCode = EMBER_COAP_CODE_503_SERVICE_UNAVAILABLE;
   \   00000046   0xD103             BNE.N    ??emberCoapMessageHandler_1
    279              } else {
    280                attachToServer(source);
   \   00000048   0x4620             MOV      R0,R4
   \   0000004A   0x.... 0x....      BL       attachToServer
    281                responseCode = EMBER_COAP_CODE_204_CHANGED;
   \   0000004E   0x2044             MOVS     R0,#+68
    282              }
    283          
    284              emberCoapRespond(responseCode,
    285                               NULL, // payload
    286                               0);   // payload length
   \                     ??emberCoapMessageHandler_1: (+1)
   \   00000050   0x2200             MOVS     R2,#+0
   \   00000052   0x2100             MOVS     R1,#+0
   \   00000054   0x.... 0x....      BL       emberCoapRespond
    287            }
    288          }
   \                     ??emberCoapMessageHandler_0: (+1)
   \   00000058   0xB005             ADD      SP,SP,#+20
   \   0000005A   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_42:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    289          

   \                                 In section .text, align 2, keep-with-next
    290          static void attachToServer(const EmberIpv6Address *newServer)
    291          {
   \                     attachToServer: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    292            // We attach to a server in response to an advertisement (or a CLI command).
    293            // Once we have a server, we begin reporting periodically.  We start from a
    294            // clean state with regard to failed reports.
    295          
    296            assert(state == WAIT_FOR_SERVER_ADVERTISEMENT);
   \   00000002   0x....             LDR.N    R5,??DataTable61_1
   \   00000004   0x4604             MOV      R4,R0
   \   00000006   0x7868             LDRB     R0,[R5, #+1]
   \   00000008   0x2804             CMP      R0,#+4
   \   0000000A   0xD003             BEQ.N    ??CrossCallReturnLabel_22
   \   0000000C   0xF44F 0x7194      MOV      R1,#+296
   \   00000010   0x.... 0x....      BL       ?Subroutine4
    297          
    298            MEMCOPY(&server, newServer, sizeof(EmberIpv6Address));
   \                     ??CrossCallReturnLabel_22: (+1)
   \   00000014   0x2210             MOVS     R2,#+16
   \   00000016   0x4621             MOV      R1,R4
   \   00000018   0xF105 0x000C      ADD      R0,R5,#+12
   \   0000001C   0x.... 0x....      BL       halCommonMemMove
    299            failedReports = 0;
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x7028             STRB     R0,[R5, #+0]
    300          
    301            emberAfCorePrint("Attached to server at ");
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0x.... 0x....      ADR.W    R1,?_23
   \   0000002A   0x.... 0x....      BL       emberAfPrint
    302            emberAfCoreDebugExec(emberAfPrintIpv6Address(newServer));
   \   0000002E   0x.... 0x....      BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_16: (+1)
   \   00000032   0xB110             CBZ.N    R0,??attachToServer_0
   \   00000034   0x4620             MOV      R0,R4
   \   00000036   0x.... 0x....      BL       emberAfPrintIpv6Address
    303            emberAfCorePrintln("");
   \                     ??attachToServer_0: (+1)
   \   0000003A   0x.... 0x....      BL       ?Subroutine1
    304          
    305            setNextState(REPORT_DATA_TO_SERVER);
   \                     ??CrossCallReturnLabel_7: (+1)
   \   0000003E   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \   00000042   0x2100             MOVS     R1,#+0
   \   00000044                      REQUIRE ?Subroutine0
   \   00000044                      ;; // Fall through to label ?Subroutine0
    306          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x2005             MOVS     R0,#+5
   \   00000002   0x....             B.N      setNextStateWithDelay
    307          
    308          // attach <server>

   \                                 In section .text, align 2, keep-with-next
    309          void attachCommand(void)
    310          {
    311            // If we are waiting for a server, we can manually attach to one using a CLI
    312            // command.
    313          
    314            if (state == WAIT_FOR_SERVER_ADVERTISEMENT) {
   \                     attachCommand: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable61_1
   \   00000002   0x7840             LDRB     R0,[R0, #+1]
   \   00000004   0x2804             CMP      R0,#+4
   \   00000006   0xD000             BEQ.N    ??attachCommand_0
   \   00000008   0x4770             BX       LR
    315              EmberIpv6Address newServer = {{0}};
   \                     ??attachCommand_0: (+1)
   \   0000000A   0xB500             PUSH     {LR}
   \   0000000C   0xB085             SUB      SP,SP,#+20
   \   0000000E   0xA800             ADD      R0,SP,#+0
   \   00000010   0x2110             MOVS     R1,#+16
   \   00000012   0x.... 0x....      BL       __aeabi_memclr4
    316              if (emberGetIpArgument(0, newServer.bytes)) {
   \   00000016   0xA900             ADD      R1,SP,#+0
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      BL       emberGetIpArgument
   \   0000001E   0xB118             CBZ.N    R0,??attachCommand_1
    317                attachToServer(&newServer);
   \   00000020   0xA800             ADD      R0,SP,#+0
   \   00000022   0x.... 0x....      BL       attachToServer
   \   00000026   0xE003             B.N      ??CrossCallReturnLabel_2
    318              } else {
    319                emberAfCorePrintln("ERR: Invalid ip");
   \                     ??attachCommand_1: (+1)
   \   00000028   0x.... 0x....      ADR.W    R1,?_25
   \   0000002C   0x.... 0x....      BL       ??Subroutine1_0
    320              }
    321            }
    322          }
   \                     ??CrossCallReturnLabel_2: (+1)
   \   00000030   0xB005             ADD      SP,SP,#+20
   \   00000032   0xBD00             POP      {PC}             ;; return

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_43:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    323          

   \                                 In section .text, align 2, keep-with-next
    324          static void processServerDataAck(EmberCoapStatus status,
    325                                           EmberCoapMessage *coap,
    326                                           void *appData,
    327                                           uint16_t appDatalength)
    328          {
   \                     processServerDataAck: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    329            // We track the success or failure of reports so that we can determine when
    330            // we have lost the server.  A series of consecutive failures is the trigger
    331            // to detach from the current server and find a new one.  Any successfully-
    332            // transmitted report clears past failures.
    333          
    334            if (state == WAIT_FOR_DATA_CONFIRMATION) {
   \   00000002   0x....             LDR.N    R4,??DataTable61_1
   \   00000004   0x7861             LDRB     R1,[R4, #+1]
   \   00000006   0x2906             CMP      R1,#+6
   \   00000008   0xD11B             BNE.N    ??processServerDataAck_0
    335              if (status == EMBER_COAP_MESSAGE_ACKED
    336                  || status == EMBER_COAP_MESSAGE_RESPONSE) {
   \   0000000A   0x2802             CMP      R0,#+2
   \   0000000C   0xBF18             IT       NE 
   \   0000000E   0x2804             CMPNE    R0,#+4
   \   00000010   0xD102             BNE.N    ??processServerDataAck_1
    337                failedReports = 0;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x7020             STRB     R0,[R4, #+0]
   \   00000016   0xE00C             B.N      ??processServerDataAck_2
    338              } else {
    339                failedReports++;
   \                     ??processServerDataAck_1: (+1)
   \   00000018   0x7820             LDRB     R0,[R4, #+0]
    340                emberAfCorePrintln("ERR: Report timed out - failure %u of %u",
    341                                   failedReports,
    342                                   REPORT_FAILURE_LIMIT);
   \   0000001A   0x.... 0x....      ADR.W    R1,?_26
   \   0000001E   0x1C42             ADDS     R2,R0,#+1
   \   00000020   0x7022             STRB     R2,[R4, #+0]
   \   00000022   0x2303             MOVS     R3,#+3
   \   00000024   0xB2D2             UXTB     R2,R2
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0x.... 0x....      BL       emberAfPrintln
    343              }
    344              if (failedReports < REPORT_FAILURE_LIMIT) {
   \   0000002C   0x7820             LDRB     R0,[R4, #+0]
   \   0000002E   0x2803             CMP      R0,#+3
   \   00000030   0xDA04             BGE.N    ??processServerDataAck_3
    345                setNextStateWithDelay(REPORT_DATA_TO_SERVER, REPORT_PERIOD_MS);
   \                     ??processServerDataAck_2: (+1)
   \   00000032   0xE8BD 0x4010      POP      {R4,LR}
   \   00000036   0xF44F 0x5120      MOV      R1,#+10240
   \   0000003A   0x....             B.N      ?Subroutine0
    346              } else {
    347                detachFromServer();
   \                     ??processServerDataAck_3: (+1)
   \   0000003C   0xE8BD 0x4010      POP      {R4,LR}
   \   00000040   0x....             B.N      detachFromServer
    348              }
    349            }
    350          }
   \                     ??processServerDataAck_0: (+1)
   \   00000042   0xBD10             POP      {R4,PC}          ;; return
    351          

   \                                 In section .text, align 2, keep-with-next
    352          static void reportDataToServer(void)
    353          {
   \                     reportDataToServer: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
    354            // We peridocally send data to the server.  The data is the temperature,
    355            // measured in 10^-3 degrees Celsius.  The success or failure of the reports
    356            // is tracked so we can determine if the server has disappeared and we should
    357            // find a new one.
    358          
    359            EmberStatus status;
    360            uint16_t value;
    361            int16_t volts;
    362            int32_t data;
    363          
    364            assert(state == REPORT_DATA_TO_SERVER);
   \   00000002   0x....             LDR.N    R4,??DataTable61_1
   \   00000004   0x7860             LDRB     R0,[R4, #+1]
   \   00000006   0x2805             CMP      R0,#+5
   \   00000008   0xB085             SUB      SP,SP,#+20
   \   0000000A   0xD003             BEQ.N    ??CrossCallReturnLabel_21
   \   0000000C   0xF44F 0x71B6      MOV      R1,#+364
   \   00000010   0x.... 0x....      BL       ?Subroutine4
    365          
    366            halStartAdcConversion(ADC_USER_APP,
    367                                  ADC_REF_INT,
    368                                  TEMP_SENSOR_ADC_CHANNEL,
    369                                  ADC_CONVERSION_TIME_US_256);
   \                     ??CrossCallReturnLabel_21: (+1)
   \   00000014   0x2303             MOVS     R3,#+3
   \   00000016   0x2209             MOVS     R2,#+9
   \   00000018   0x212A             MOVS     R1,#+42
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x.... 0x....      BL       halStartAdcConversion
    370            halReadAdcBlocking(ADC_USER_APP, &value);
   \   00000020   0xA903             ADD      R1,SP,#+12
   \   00000022   0x2001             MOVS     R0,#+1
   \   00000024   0x.... 0x....      BL       halReadAdcBlocking
    371            volts = halConvertValueToVolts(value / TEMP_SENSOR_SCALE_FACTOR);
    372            data = (1591887L - (171 * (int32_t)volts)) / 10;
   \   00000028   0xF8BD 0x000C      LDRH     R0,[SP, #+12]
   \   0000002C   0x....             LDR.N    R5,??DataTable61_3  ;; 0x184a4f
   \   0000002E   0x.... 0x....      BL       halConvertValueToVolts
   \   00000032   0x21AB             MOVS     R1,#+171
   \   00000034   0xFB01 0x5010      MLS      R0,R1,R0,R5
   \   00000038   0x210A             MOVS     R1,#+10
   \   0000003A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000003E   0x9002             STR      R0,[SP, #+8]
    373          
    374            emberAfCorePrint("Reporting %ld to server at ", data);
   \   00000040   0x4602             MOV      R2,R0
   \   00000042   0x.... 0x....      ADR.W    R1,?_27
   \   00000046   0x2001             MOVS     R0,#+1
   \   00000048   0x.... 0x....      BL       emberAfPrint
    375            emberAfCoreDebugExec(emberAfPrintIpv6Address(&server));
   \   0000004C   0x.... 0x....      BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_15: (+1)
   \   00000050   0xB118             CBZ.N    R0,??reportDataToServer_0
   \   00000052   0xF104 0x000C      ADD      R0,R4,#+12
   \   00000056   0x.... 0x....      BL       emberAfPrintIpv6Address
    376            emberAfCorePrintln("");
   \                     ??reportDataToServer_0: (+1)
   \   0000005A   0x.... 0x....      BL       ?Subroutine1
    377          
    378            // Convert from host-order to network-order before sending so the data can be
    379            // reliably reconstructed by the server.
    380            data = HTONL(data);
   \                     ??CrossCallReturnLabel_6: (+1)
   \   0000005E   0x9802             LDR      R0,[SP, #+8]
    381          
    382            status = emberCoapPost(&server,
    383                                   clientReportUri,
    384                                   (const uint8_t *)&data,
    385                                   sizeof(data),
    386                                   processServerDataAck);
   \   00000060   0x.... 0x....      ADR.W    R2,clientReportUri
   \   00000064   0xBA00             REV      R0,R0
   \   00000066   0x9002             STR      R0,[SP, #+8]
   \   00000068   0xAB02             ADD      R3,SP,#+8
   \   0000006A   0x....             LDR.N    R0,??DataTable61_4
   \   0000006C   0x9001             STR      R0,[SP, #+4]
   \   0000006E   0xF104 0x010C      ADD      R1,R4,#+12
   \   00000072   0x2004             MOVS     R0,#+4
   \   00000074   0x9000             STR      R0,[SP, #+0]
   \   00000076   0x2002             MOVS     R0,#+2
   \   00000078   0x.... 0x....      BL       emberCoapSendUri
    387            if (status == EMBER_SUCCESS) {
   \   0000007C   0xB910             CBNZ.N   R0,??reportDataToServer_1
    388              setNextState(WAIT_FOR_DATA_CONFIRMATION);
   \   0000007E   0x2100             MOVS     R1,#+0
   \   00000080   0x2006             MOVS     R0,#+6
   \   00000082   0xE008             B.N      ??reportDataToServer_2
    389            } else {
    390              emberAfCorePrintln("ERR: Reporting failed: 0x%x", status);
   \                     ??reportDataToServer_1: (+1)
   \   00000084   0x4602             MOV      R2,R0
   \   00000086   0x.... 0x....      ADR.W    R1,?_28
   \   0000008A   0x2001             MOVS     R0,#+1
   \   0000008C   0x.... 0x....      BL       emberAfPrintln
    391              repeatStateWithDelay(REPORT_PERIOD_MS);
   \   00000090   0x7860             LDRB     R0,[R4, #+1]
   \   00000092   0xF44F 0x5120      MOV      R1,#+10240
   \                     ??reportDataToServer_2: (+1)
   \   00000096   0x.... 0x....      BL       setNextStateWithDelay
    392            }
    393          }
   \   0000009A   0xB005             ADD      SP,SP,#+20
   \   0000009C   0xBD30             POP      {R4,R5,PC}       ;; return
    394          
    395          // report

   \                                 In section .text, align 2, keep-with-next
    396          void reportCommand(void)
    397          {
    398            // If we have a server and are reporting data, we can manually send a new
    399            // report using a CLI command.
    400          
    401            if (state == REPORT_DATA_TO_SERVER) {
   \                     reportCommand: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable61_1
   \   00000002   0x7840             LDRB     R0,[R0, #+1]
   \   00000004   0x2805             CMP      R0,#+5
   \   00000006   0xBF08             IT       EQ 
   \   00000008   0x.... 0x....      BEQ.W    reportDataToServer
    402              reportDataToServer();
    403            }
    404          }
   \   0000000C   0x4770             BX       LR               ;; return
    405          

   \                                 In section .text, align 2, keep-with-next
    406          static void detachFromServer(void)
    407          {
   \                     detachFromServer: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    408            // We detach from a server in response to failed reports (or a CLI command).
    409            // Once we detach, we wait for a new server to advertise itself.
    410          
    411            assert(state == REPORT_DATA_TO_SERVER
    412                   || state == WAIT_FOR_DATA_CONFIRMATION);
   \   00000002   0x....             LDR.N    R4,??DataTable61_1
   \   00000004   0x7860             LDRB     R0,[R4, #+1]
   \   00000006   0x2805             CMP      R0,#+5
   \   00000008   0xBF18             IT       NE 
   \   0000000A   0x2806             CMPNE    R0,#+6
   \   0000000C   0xD003             BEQ.N    ??CrossCallReturnLabel_20
   \   0000000E   0xF44F 0x71CE      MOV      R1,#+412
   \   00000012   0x.... 0x....      BL       ?Subroutine4
    413          
    414            emberAfCorePrint("Detached from server at ");
   \                     ??CrossCallReturnLabel_20: (+1)
   \   00000016   0x.... 0x....      ADR.W    R1,?_29
   \   0000001A   0x.... 0x....      BL       ?Subroutine2
    415            emberAfCoreDebugExec(emberAfPrintIpv6Address(&server));
   \                     ??CrossCallReturnLabel_9: (+1)
   \   0000001E   0x.... 0x....      BL       ?Subroutine3
   \                     ??CrossCallReturnLabel_14: (+1)
   \   00000022   0xB118             CBZ.N    R0,??detachFromServer_0
   \   00000024   0xF104 0x000C      ADD      R0,R4,#+12
   \   00000028   0x.... 0x....      BL       emberAfPrintIpv6Address
    416            emberAfCorePrintln("");
   \                     ??detachFromServer_0: (+1)
   \   0000002C   0x.... 0x....      BL       ?Subroutine1
    417          
    418            setNextState(WAIT_FOR_SERVER_ADVERTISEMENT);
   \                     ??CrossCallReturnLabel_5: (+1)
   \   00000030   0xE8BD 0x4010      POP      {R4,LR}
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0x2004             MOVS     R0,#+4
   \   00000038   0x....             B.N      setNextStateWithDelay
    419          }
    420          
    421          // detach

   \                                 In section .text, align 2, keep-with-next
    422          void detachCommand(void)
    423          {
   \                     detachCommand: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable61_1
   \   00000002   0x7840             LDRB     R0,[R0, #+1]
   \   00000004   0x2805             CMP      R0,#+5
   \   00000006   0xBF14             ITE      NE 
   \   00000008   0x2806             CMPNE    R0,#+6
   \   0000000A   0x.... 0x....      BEQ.W    detachFromServer
    424            // If we have a server and are reporting data, we can manually detach and try
    425            // to find a new server by using a CLI command.
    426          
    427            if (state == REPORT_DATA_TO_SERVER
    428                || state == WAIT_FOR_DATA_CONFIRMATION) {
    429              detachFromServer();
    430            }
    431          }
   \   0000000E   0x4770             BX       LR               ;; return
    432          
    433          static void resetNetworkState(void)
    434          {
    435            emberAfCorePrintln("Resetting network state");
    436            emberResetNetworkState();
    437          }
    438          

   \                                 In section .text, align 2, keep-with-next
    439          void emberResetNetworkStateReturn(EmberStatus status)
    440          {
   \                     emberResetNetworkStateReturn: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    441            // If we ever leave the network, we go right back to joining again.  This
    442            // could be triggered by an external CLI command.
    443          
    444            if (status == EMBER_SUCCESS) {
   \   00000002   0xB940             CBNZ.N   R0,??emberResetNetworkStateReturn_0
    445              emberAfCorePrintln("Reset network state");
   \   00000004   0x.... 0x....      ADR.W    R1,?_31
   \   00000008   0x.... 0x....      BL       ??Subroutine1_0
    446              setNextState(JOIN_NETWORK);
   \                     ??CrossCallReturnLabel_1: (+1)
   \   0000000C   0xE8BD 0x4004      POP      {R2,LR}
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x2002             MOVS     R0,#+2
   \   00000014   0x....             B.N      setNextStateWithDelay
    447            }
    448          }
   \                     ??emberResetNetworkStateReturn_0: (+1)
   \   00000016   0xBD01             POP      {R0,PC}          ;; return
    449          

   \                                 In section .text, align 2, keep-with-next
    450          void emberUdpHandler(const uint8_t *destination,
    451                               const uint8_t *source,
    452                               uint16_t localPort,
    453                               uint16_t remotePort,
    454                               const uint8_t *payload,
    455                               uint16_t payloadLength)
    456          {
   \                     emberUdpHandler: (+1)
   \   00000000   0xB57C             PUSH     {R2-R6,LR}
    457            // UDP packets for TFTP bootloading are passed through.  Everything else is
    458            // simply logged and ignored.
    459          
    460            if (localPort == emTftpLocalTid) {
   \   00000002   0x....             LDR.N    R6,??DataTable61_5
   \   00000004   0x9D06             LDR      R5,[SP, #+24]
   \   00000006   0x8836             LDRH     R6,[R6, #+0]
   \   00000008   0x460C             MOV      R4,R1
   \   0000000A   0x4619             MOV      R1,R3
   \   0000000C   0x9B07             LDR      R3,[SP, #+28]
   \   0000000E   0x42B2             CMP      R2,R6
   \   00000010   0xD106             BNE.N    ??emberUdpHandler_0
    461              emProcessTftpPacket(source, remotePort, payload, payloadLength);
   \   00000012   0x462A             MOV      R2,R5
   \   00000014   0x4620             MOV      R0,R4
   \   00000016   0xB002             ADD      SP,SP,#+8
   \   00000018   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000001C   0x.... 0x....      B.W      emProcessTftpPacket
    462            } else if (localPort == TFTP_BOOTLOADER_PORT) {
   \                     ??emberUdpHandler_0: (+1)
   \   00000020   0x2A44             CMP      R2,#+68
   \   00000022   0xD107             BNE.N    ??emberUdpHandler_1
    463              emProcessTftpBootloaderPacket(source, payload, payloadLength);
   \   00000024   0x4629             MOV      R1,R5
   \   00000026   0x4620             MOV      R0,R4
   \   00000028   0xB002             ADD      SP,SP,#+8
   \   0000002A   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000002E   0x461A             MOV      R2,R3
   \   00000030   0x.... 0x....      B.W      emProcessTftpBootloaderPacket
    464            } else {
    465              ALIAS(emberUdpHandler)(destination,
    466                                     source,
    467                                     localPort,
    468                                     remotePort,
    469                                     payload,
    470                                     payloadLength);
   \                     ??emberUdpHandler_1: (+1)
   \   00000034   0x9301             STR      R3,[SP, #+4]
   \   00000036   0x9500             STR      R5,[SP, #+0]
   \   00000038   0x460B             MOV      R3,R1
   \   0000003A   0x4621             MOV      R1,R4
   \   0000003C   0x.... 0x....      BL       emberUdpHandlerAlias
    471            }
    472          }
   \   00000040   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    473          

   \                                 In section .text, align 2, keep-with-next
    474          bool emberVerifyBootloadRequest(const TftpBootloaderBootloadRequest *request)
    475          {
    476            // A real implementation should verify a bootload request to ensure it is
    477            // valid.  This sample application simply accepts any request.
    478          
    479            return true;
   \                     emberVerifyBootloadRequest: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x4770             BX       LR               ;; return
    480          }
    481          

   \                                 In section .text, align 4, keep-with-next
    482          void stateEventHandler(void)
    483          {
   \                     stateEventHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    484            emberEventControlSetInactive(stateEventControl);
   \   00000002   0x....             LDR.N    R4,??DataTable61_1
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x7120             STRB     R0,[R4, #+4]
   \   00000008   0xB09A             SUB      SP,SP,#+104
    485          
    486            switch (state) {
   \   0000000A   0x7860             LDRB     R0,[R4, #+1]
   \   0000000C   0x1E40             SUBS     R0,R0,#+1
   \   0000000E   0x2806             CMP      R0,#+6
   \   00000010   0xD830             BHI.N    ??stateEventHandler_1
   \   00000012   0xE8DF 0xF000      TBB      [PC, R0]
   \                     ??stateEventHandler_0:
   \   00000016   0x04 0x15          DC8      0x4,0x15,0x18,0x1B
   \              0x18 0x1B    
   \   0000001A   0x25 0x33          DC8      0x25,0x33,0x28,0x0
   \              0x28 0x00    
    487            case RESUME_NETWORK:
    488              resumeNetwork();
   \                     ??stateEventHandler_2: (+1)
   \   0000001E   0x.... 0x....      BL       ?Subroutine8
   \                     ??CrossCallReturnLabel_44: (+1)
   \   00000022   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_35: (+1)
   \   00000026   0x.... 0x....      BL       ?Subroutine9
   \                     ??CrossCallReturnLabel_45: (+1)
   \   0000002A   0x.... 0x....      BL       ?Subroutine7
   \                     ??CrossCallReturnLabel_36: (+1)
   \   0000002E   0xAA00             ADD      R2,SP,#+0
   \   00000030   0x.... 0x....      ADR.W    R1,?_8
   \   00000034   0x2001             MOVS     R0,#+1
   \   00000036   0x.... 0x....      BL       emberAfPrintln
   \   0000003A   0x.... 0x....      BL       emberResumeNetwork
    489              break;
   \   0000003E   0xE01D             B.N      ??CrossCallReturnLabel_19
    490            case JOIN_NETWORK:
    491              joinNetwork();
   \                     ??stateEventHandler_3: (+1)
   \   00000040   0x.... 0x....      BL       joinNetwork
    492              break;
   \   00000044   0xE01A             B.N      ??CrossCallReturnLabel_19
   \                     ??stateEventHandler_4: (+1)
   \   00000046   0x.... 0x....      BL       emberAttachToNetwork
    493            case ATTACH_TO_NETWORK:
    494              attachToNetwork();
    495              break;
   \   0000004A   0xE017             B.N      ??CrossCallReturnLabel_19
   \                     ??stateEventHandler_5: (+1)
   \   0000004C   0x.... 0x....      ADR.W    R1,?_22
   \   00000050   0x.... 0x....      BL       ??Subroutine1_0
   \                     ??CrossCallReturnLabel_8: (+1)
   \   00000054   0x7860             LDRB     R0,[R4, #+1]
   \   00000056   0xF44F 0x41F0      MOV      R1,#+30720
   \   0000005A   0x.... 0x....      BL       setNextStateWithDelay
    496            case WAIT_FOR_SERVER_ADVERTISEMENT:
    497              waitForServerAdvertisement();
    498              break;
   \   0000005E   0xE00D             B.N      ??CrossCallReturnLabel_19
    499            case REPORT_DATA_TO_SERVER:
    500              reportDataToServer();
   \                     ??stateEventHandler_6: (+1)
   \   00000060   0x.... 0x....      BL       reportDataToServer
    501              break;
   \   00000064   0xE00A             B.N      ??CrossCallReturnLabel_19
    502            case WAIT_FOR_DATA_CONFIRMATION:
    503              break;
    504            case RESET_NETWORK_STATE:
    505              resetNetworkState();
   \                     ??stateEventHandler_7: (+1)
   \   00000066   0x.... 0x....      ADR.W    R1,?_30
   \   0000006A   0x.... 0x....      BL       ??Subroutine1_0
   \                     ??CrossCallReturnLabel_0: (+1)
   \   0000006E   0x.... 0x....      BL       emberResetNetworkState
    506              break;
   \   00000072   0xE003             B.N      ??CrossCallReturnLabel_19
    507            default:
    508              assert(false);
   \                     ??stateEventHandler_1: (+1)
   \   00000074   0xF44F 0x71FE      MOV      R1,#+508
   \   00000078   0x.... 0x....      BL       ?Subroutine4
    509            }
    510          }
   \                     ??CrossCallReturnLabel_19: (+1)
   \   0000007C   0xB01A             ADD      SP,SP,#+104
   \   0000007E   0xBD10             POP      {R4,PC}          ;; return
    511          

   \                                 In section .text, align 2, keep-with-next
    512          static void setNextStateWithDelay(uint8_t nextState, uint32_t delayMs)
    513          {
    514            state = nextState;
   \                     setNextStateWithDelay: (+1)
   \   00000000   0x....             LDR.N    R2,??DataTable61_1
   \   00000002   0x7050             STRB     R0,[R2, #+1]
    515            emberEventControlSetDelayMS(stateEventControl, delayMs);
   \   00000004   0x1D10             ADDS     R0,R2,#+4
   \   00000006   0x.... 0x....      B.W      emEventControlSetDelayMS
    516          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51:
   \   00000000   0x20 0x73          DC8      " s="
   \              0x3D 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_1:
   \   00000000   0x20 0x64          DC8      " d="
   \              0x3D 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable51_2:
   \   00000000   0x20 0x5B          DC8      0x20, 0x5B, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable52:
   \   00000000   0x5D 0x00          DC8      "]",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_1:
   \   00000000   0x........         DC32     failedReports

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_2:
   \   00000000   0x07FFF800         DC32     0x7fff800

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_3:
   \   00000000   0x00184A4F         DC32     0x184a4f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_4:
   \   00000000   0x........         DC32     processServerDataAck

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable61_5:
   \   00000000   0x........         DC32     emTftpLocalTid

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x20 0x73          DC8 " s="
   \              0x3D 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x20 0x64          DC8 " d="
   \              0x3D 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x20 0x5B          DC8 " ["
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x55 0x44          DC8 "UDP RX:"
   \              0x50 0x20    
   \              0x52 0x58    
   \              0x3A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x20 0x6C          DC8 " l=%u"
   \              0x3D 0x25    
   \              0x75 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x20 0x72          DC8 " r=%u"
   \              0x3D 0x25    
   \              0x75 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     ?_6:
   \   00000000   0x5D 0x00          DC8 "]"

   \                                 In section .rodata, align 1, keep-with-next
   \                     ?_24:
   \   00000000   0x00               DC8 ""

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x63 0x6C          DC8 "client-implementation.c"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x2D 0x69    
   \              0x6D 0x70    
   \              0x6C 0x65    
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x2E    
   \              0x63 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x52 0x65          DC8 "Resuming operation on network \"%s\""
   \              0x73 0x75    
   \              0x6D 0x69    
   \              0x6E 0x67    
   \              0x20 0x6F    
   \              0x70 0x65    
   \              0x72 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x6F    
   \              0x6E 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x52 0x65          DC8 "Resumed operation on network \"%s\""
   \              0x73 0x75    
   \              0x6D 0x65    
   \              0x64 0x20    
   \              0x6F 0x70    
   \              0x65 0x72    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x6F 0x6E    
   \              0x20 0x6E    
   \              0x65 0x74    
   \              0x77 0x6F    
   \              0x72 0x6B    
   \              0x20 0x22    
   \              0x25 0x73    
   \              0x22 0x00    
   \   00000022   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x45 0x52          DC8 "ERR: No connection to network"
   \              0x52 0x3A    
   \              0x20 0x4E    
   \              0x6F 0x20    
   \              0x63 0x6F    
   \              0x6E 0x6E    
   \              0x65 0x63    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x45 0x52          DC8 "ERR: Resuming failed: 0x%x"
   \              0x52 0x3A    
   \              0x20 0x52    
   \              0x65 0x73    
   \              0x75 0x6D    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x66 0x61    
   \              0x69 0x6C    
   \              0x65 0x64    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x53 0x65          DC8 "Searching for network \"%s\" using join key \"%s\""
   \              0x61 0x72    
   \              0x63 0x68    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x66 0x6F    
   \              0x72 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x20 0x75    
   \              0x73 0x69    
   \              0x6E 0x67    
   \              0x20 0x6A    
   \              0x6F 0x69    
   \              0x6E 0x20    
   \              0x6B 0x65    
   \              0x79 0x20    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x00         
   \   0000002F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x25 0x73          DC8 "%s network \"%s\""
   \              0x20 0x6E    
   \              0x65 0x74    
   \              0x77 0x6F    
   \              0x72 0x6B    
   \              0x20 0x22    
   \              0x25 0x73    
   \              0x22 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_14:
   \   00000000   0x4A 0x6F          DC8 "Joined"
   \              0x69 0x6E    
   \              0x65 0x64    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_15:
   \   00000000   0x52 0x65          DC8 "Rejoined"
   \              0x6A 0x6F    
   \              0x69 0x6E    
   \              0x65 0x64    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_16:
   \   00000000   0x45 0x52          DC8 "ERR: %s failed: 0x%x"
   \              0x52 0x3A    
   \              0x20 0x25    
   \              0x73 0x20    
   \              0x66 0x61    
   \              0x69 0x6C    
   \              0x65 0x64    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_17:
   \   00000000   0x4A 0x6F          DC8 "Joining"
   \              0x69 0x6E    
   \              0x69 0x6E    
   \              0x67 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_18:
   \   00000000   0x52 0x65          DC8 "Rejoining"
   \              0x6A 0x6F    
   \              0x69 0x6E    
   \              0x69 0x6E    
   \              0x67 0x00    
   \   0000000A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_19:
   \   00000000   0x45 0x52          DC8 "ERR: Lost connection to network"
   \              0x52 0x3A    
   \              0x20 0x4C    
   \              0x6F 0x73    
   \              0x74 0x20    
   \              0x63 0x6F    
   \              0x6E 0x6E    
   \              0x65 0x63    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_20:
   \   00000000   0x52 0x65          DC8 "Rejoining network \"%s\""
   \              0x6A 0x6F    
   \              0x69 0x6E    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_21:
   \   00000000   0x45 0x52          DC8 "ERR: Unable to rejoin: 0x%x"
   \              0x52 0x3A    
   \              0x20 0x55    
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x74 0x6F    
   \              0x20 0x72    
   \              0x65 0x6A    
   \              0x6F 0x69    
   \              0x6E 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_22:
   \   00000000   0x57 0x61          DC8 "Waiting for an advertisement from a server"
   \              0x69 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x66 0x6F    
   \              0x72 0x20    
   \              0x61 0x6E    
   \              0x20 0x61    
   \              0x64 0x76    
   \              0x65 0x72    
   \              0x74 0x69    
   \              0x73 0x65    
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x20 0x66    
   \              0x72 0x6F    
   \              0x6D 0x20    
   \              0x61 0x20    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x00         
   \   0000002B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_23:
   \   00000000   0x41 0x74          DC8 "Attached to server at "
   \              0x74 0x61    
   \              0x63 0x68    
   \              0x65 0x64    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x61    
   \              0x74 0x20    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_25:
   \   00000000   0x45 0x52          DC8 "ERR: Invalid ip"
   \              0x52 0x3A    
   \              0x20 0x49    
   \              0x6E 0x76    
   \              0x61 0x6C    
   \              0x69 0x64    
   \              0x20 0x69    
   \              0x70 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_26:
   \   00000000   0x45 0x52          DC8 "ERR: Report timed out - failure %u of %u"
   \              0x52 0x3A    
   \              0x20 0x52    
   \              0x65 0x70    
   \              0x6F 0x72    
   \              0x74 0x20    
   \              0x74 0x69    
   \              0x6D 0x65    
   \              0x64 0x20    
   \              0x6F 0x75    
   \              0x74 0x20    
   \              0x2D 0x20    
   \              0x66 0x61    
   \              0x69 0x6C    
   \              0x75 0x72    
   \              0x65 0x20    
   \              0x25 0x75    
   \              0x20 0x6F    
   \              0x66 0x20    
   \              0x25 0x75    
   \              0x00         
   \   00000029   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_27:
   \   00000000   0x52 0x65          DC8 "Reporting %ld to server at "
   \              0x70 0x6F    
   \              0x72 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x25 0x6C    
   \              0x64 0x20    
   \              0x74 0x6F    
   \              0x20 0x73    
   \              0x65 0x72    
   \              0x76 0x65    
   \              0x72 0x20    
   \              0x61 0x74    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_28:
   \   00000000   0x45 0x52          DC8 "ERR: Reporting failed: 0x%x"
   \              0x52 0x3A    
   \              0x20 0x52    
   \              0x65 0x70    
   \              0x6F 0x72    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x20 0x66    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_29:
   \   00000000   0x44 0x65          DC8 "Detached from server at "
   \              0x74 0x61    
   \              0x63 0x68    
   \              0x65 0x64    
   \              0x20 0x66    
   \              0x72 0x6F    
   \              0x6D 0x20    
   \              0x73 0x65    
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x20 0x61    
   \              0x74 0x20    
   \              0x00         
   \   00000019   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_30:
   \   00000000   0x52 0x65          DC8 "Resetting network state"
   \              0x73 0x65    
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_31:
   \   00000000   0x52 0x65          DC8 "Reset network state"
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   attachCommand
        24   -> __aeabi_memclr4
        24   -> attachToServer
        24   -> emberAfPrintln
        24   -> emberGetIpArgument
      16   attachToServer
        16   -> emberAfPrint
        16   -> emberAfPrintEnabled
        16   -> emberAfPrintIpv6Address
        16   -> emberAfPrintln
        16   -> halCommonMemMove
        16   -> halInternalAssertFailed
         0   -> setNextStateWithDelay
       0   detachCommand
       8   detachFromServer
         8   -> emberAfPrint
         8   -> emberAfPrintEnabled
         8   -> emberAfPrintIpv6Address
         8   -> emberAfPrintln
         8   -> halInternalAssertFailed
         0   -> setNextStateWithDelay
       8   emberAfInitCallback
         8   -> emberNetworkStatus
         0   -> halInternalAssertFailed
         0   -> setNextStateWithDelay
     112   emberAttachToNetworkReturn
       112   -> __aeabi_memclr4
       112   -> emberAfPrintln
       112   -> emberGetNetworkParameters
       112   -> halCommonMemMove
       112   -> halInternalAssertFailed
       112   -> setNextStateWithDelay
      32   emberCoapMessageHandler
        32   -> __aeabi_memclr4
        32   -> attachToServer
        32   -> emberCoapDecodeUri
        32   -> emberCoapIsRequest
        32   -> emberCoapRespond
        32   -> strncmp
     112   emberJoinNetworkReturn
       112   -> __aeabi_memclr4
       112   -> emberAfPrintln
       112   -> emberGetNetworkParameters
       112   -> emberNetworkStatus
       112   -> emberResumeNetworkReturn
       112   -> halCommonMemMove
       112   -> setNextStateWithDelay
       8   emberResetNetworkStateReturn
         8   -> emberAfPrintln
         0   -> setNextStateWithDelay
     112   emberResumeNetworkReturn
       112   -> __aeabi_memclr4
       112   -> emberAfPrintln
       112   -> emberGetNetworkParameters
       112   -> emberNetworkStatus
       112   -> halCommonMemMove
       112   -> halInternalAssertFailed
       112   -> setNextStateWithDelay
      24   emberUdpHandler
         0   -> emProcessTftpBootloaderPacket
         0   -> emProcessTftpPacket
        24   -> emberUdpHandlerAlias
      24   emberUdpHandlerAlias
        24   -> emberAfPrint
        24   -> emberAfPrintBuffer
        24   -> emberAfPrintEnabled
        24   -> emberAfPrintIpv6Address
         0   -> emberAfPrintln
       0   emberVerifyBootloadRequest
     112   joinNetwork
       112   -> __aeabi_memclr4
       112   -> emberAfPrintln
       112   -> emberEui64
       112   -> emberJoinNetwork
       112   -> halCommonMemMove
       112   -> halInternalAssertFailed
       8   processServerDataAck
         0   -> detachFromServer
         8   -> emberAfPrintln
         0   -> setNextStateWithDelay
       0   reportCommand
      32   reportDataToServer
        32   -> emberAfPrint
        32   -> emberAfPrintEnabled
        32   -> emberAfPrintIpv6Address
        32   -> emberAfPrintln
        32   -> emberCoapSendUri
        32   -> halConvertValueToVolts
        32   -> halInternalAssertFailed
        32   -> halReadAdcBlocking
        32   -> halStartAdcConversion
        32   -> setNextStateWithDelay
       0   setNextStateWithDelay
         0   -> emEventControlSetDelayMS
     112   stateEventHandler
       112   -> __aeabi_memclr4
       112   -> emberAfPrintln
       112   -> emberAttachToNetwork
       112   -> emberGetNetworkParameters
       112   -> emberResetNetworkState
       112   -> emberResumeNetwork
       112   -> halCommonMemMove
       112   -> halInternalAssertFailed
       112   -> joinNetwork
       112   -> reportDataToServer
       112   -> setNextStateWithDelay


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable51
       4  ??DataTable51_1
       4  ??DataTable51_2
       4  ??DataTable52
       4  ??DataTable61
       4  ??DataTable61_1
       4  ??DataTable61_2
       4  ??DataTable61_3
       4  ??DataTable61_4
       4  ??DataTable61_5
       4  ?Subroutine0
       8  ?Subroutine1
       6  ?Subroutine2
       6  ?Subroutine3
       8  ?Subroutine4
      10  ?Subroutine5
       8  ?Subroutine6
      10  ?Subroutine7
       8  ?Subroutine8
       6  ?Subroutine9
       8  ?_0
       4  ?_1
      32  ?_10
      28  ?_11
      48  ?_12
      16  ?_13
       8  ?_14
      12  ?_15
      24  ?_16
       8  ?_17
      12  ?_18
      32  ?_19
       4  ?_2
      24  ?_20
      28  ?_21
      44  ?_22
      24  ?_23
       1  ?_24
      16  ?_25
      44  ?_26
      28  ?_27
      28  ?_28
      28  ?_29
       8  ?_3
      24  ?_30
      20  ?_31
      80  ?_32
      20  ?_33
      80  ?_34
      20  ?_35
      80  ?_36
      20  ?_37
      80  ?_38
      20  ?_39
       8  ?_4
      80  ?_40
      20  ?_41
      20  ?_42
      16  ?_43
       4  ?_5
       2  ?_6
      24  ?_7
      36  ?_8
      36  ?_9
      52  attachCommand
      68  attachToServer
      16  clientReportUri
      16  detachCommand
      58  detachFromServer
      76  emberAfInitCallback
      74  emberAttachToNetworkReturn
      92  emberCoapMessageHandler
     140  emberJoinNetworkReturn
      24  emberResetNetworkStateReturn
     108  emberResumeNetworkReturn
      66  emberUdpHandler
     108  emberUdpHandlerAlias
       4  emberVerifyBootloadRequest
      28  failedReports
          state
          stateEventControl
          server
     154  joinNetwork
      16  networkId
      68  processServerDataAck
      14  reportCommand
     158  reportDataToServer
      20  serverAdvertiseUri
      10  setNextStateWithDelay
     128  stateEventHandler

 
    28 bytes in section .bss
   551 bytes in section .rodata
 2 232 bytes in section .text
 
 2 232 bytes of CODE  memory
   551 bytes of CONST memory
    28 bytes of DATA  memory

Errors: none
Warnings: none
