###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.1.7746/W32 for ARM        28/Sep/2015  13:29:32
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\server-implementation.c
#    Command line =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\server-implementation.c
#        -D APP_BTL -D CORTEXM3 -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM3588 -D
#        PHY_EM3XX -D "BOARD_HEADER=\"thread-board.h\"" -D
#        "CONFIGURATION_HEADER=\"thread-configuration.h\"" -D
#        "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D
#        "__SOURCEFILE__=\"server-implementation.c\"" -D BOARD_DEV0680ETM -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        EMBER_STACK_IP -D EMBER_RIP_STACK -D HAVE_TLS_JPAKE -D
#        DEBUG_LEVEL=FULL_DEBUG -D
#        "APPLICATION_TOKEN_HEADER=\"thread-token.h\"" -lC
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\build\lst\
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\build\obj\
#        --debug --endian=little --cpu=Cortex-M3 --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\..\..\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\..\..\app\util\
#        -I C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\..\..\stack\
#        -I C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\..\..\hal\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\..\..\hal\..\
#        -Ohz --use_c++_inline
#    List file    =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\build\lst\server-implementation.lst
#    Object file  =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\build\obj\server-implementation.o
#
###############################################################################

C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\server-implementation.c
      1          // Copyright 2015 Silicon Laboratories, Inc.
      2          
      3          #include PLATFORM_HEADER
      4          #include CONFIGURATION_HEADER
      5          #include EMBER_AF_API_STACK
      6          #include EMBER_AF_API_HAL
      7          #include EMBER_AF_API_COMMAND_INTERPRETER2
      8          #ifdef EMBER_AF_API_DEBUG_PRINT
      9            #include EMBER_AF_API_DEBUG_PRINT
     10          #endif
     11          #include EMBER_AF_API_TFTP
     12          #include EMBER_AF_API_TFTP_BOOTLOADER
     13          
     14          #define ALIAS(x) x##Alias
     15          #include "app/thread/plugin/udp-debug/udp-debug.c"

   \                                 In section .text, align 2, keep-with-next
   \   __interwork __softfp void emberUdpHandlerAlias(uint8_t const *, uint8_t const *, uint16_t, uint16_t, uint8_t const *, uint16_t)
   \                     emberUdpHandlerAlias: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0x4616             MOV      R6,R2
   \   00000008   0x461F             MOV      R7,R3
   \   0000000A   0x.... 0x....      ADR.W    R1,?_0
   \   0000000E   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_8: (+1)
   \   00000012   0x....             ADR.N    R1,??DataTable57  ;; " s="
   \   00000014   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_7: (+1)
   \   00000018   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_35: (+1)
   \   0000001C   0xB110             CBZ.N    R0,??emberUdpHandlerAlias_0
   \   0000001E   0x4628             MOV      R0,R5
   \   00000020   0x.... 0x....      BL       emberAfPrintIpv6Address
   \                     ??emberUdpHandlerAlias_0: (+1)
   \   00000024   0x....             ADR.N    R1,??DataTable57_1  ;; " d="
   \   00000026   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_6: (+1)
   \   0000002A   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_34: (+1)
   \   0000002E   0xB110             CBZ.N    R0,??emberUdpHandlerAlias_1
   \   00000030   0x4620             MOV      R0,R4
   \   00000032   0x.... 0x....      BL       emberAfPrintIpv6Address
   \                     ??emberUdpHandlerAlias_1: (+1)
   \   00000036   0x4632             MOV      R2,R6
   \   00000038   0x.... 0x....      ADR.W    R1,?_3
   \   0000003C   0x.... 0x....      BL       ?Subroutine7
   \                     ??CrossCallReturnLabel_39: (+1)
   \   00000040   0x463A             MOV      R2,R7
   \   00000042   0x.... 0x....      ADR.W    R1,?_4
   \   00000046   0x.... 0x....      BL       ?Subroutine7
   \                     ??CrossCallReturnLabel_38: (+1)
   \   0000004A   0x....             ADR.N    R1,??DataTable57_2  ;; 0x20, 0x5B, 0x00, 0x00
   \   0000004C   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_5: (+1)
   \   00000050   0x9A07             LDR      R2,[SP, #+28]
   \   00000052   0x9906             LDR      R1,[SP, #+24]
   \   00000054   0x2300             MOVS     R3,#+0
   \   00000056   0x2001             MOVS     R0,#+1
   \   00000058   0x.... 0x....      BL       emberAfPrintBuffer
   \   0000005C   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   00000060   0x....             ADR.N    R1,??DataTable58  ;; "]"
   \   00000062                      REQUIRE ?Subroutine0
   \   00000062                      ;; // Fall through to label ?Subroutine0

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x.... 0x....      B.W      emberAfPrintln

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine7: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x.... 0x....      B.W      emberAfPrint

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x.... 0x....      B.W      emberAfPrint

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine6: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x.... 0x....      B.W      emberAfPrintEnabled
     16          
     17          // WARNING: By default, this sample application uses the well-know sensor/sink
     18          // network key as the master key.  This is done for demonstration purposes, so
     19          // that packets will decrypt automatically in Ember Desktop.  Using predefined
     20          // keys is a significant security risk.  Real devices MUST NOT used fixed keys
     21          // and MUST use random keys instead.  The stack automatically generates random
     22          // keys if emberSetSecurityParameters is not called prior to forming.
     23          //#define USE_RANDOM_MASTER_KEY
     24          #ifdef USE_RANDOM_MASTER_KEY
     25            #define SET_SECURITY_PARAMETERS_OR_FORM_NETWORK FORM_NETWORK
     26          #else

   \                                 In section .data, align 4
     27            static EmberKeyData masterKey = {
   \                     masterKey:
   \   00000000   0x65 0x6D          DC8 101, 109, 98, 101, 114, 32, 69, 77, 50, 53, 48, 32, 99, 104, 105
   \              0x62 0x65    
   \              0x72 0x20    
   \              0x45 0x4D    
   \              0x32 0x35    
   \              0x30 0x20    
   \              0x63 0x68    
   \              0x69         
   \   0000000F   0x70               DC8 112
     28              {0x65, 0x6D, 0x62, 0x65, 0x72, 0x20, 0x45, 0x4D,
     29               0x32, 0x35, 0x30, 0x20, 0x63, 0x68, 0x69, 0x70,}
     30            };
     31            #define SET_SECURITY_PARAMETERS_OR_FORM_NETWORK SET_SECURITY_PARAMETERS
     32          #endif
     33          
     34          // The client/server sample applications use a fixed network id to simplify
     35          // the join process.

   \                                 In section .text, align 4, keep-with-next
     36          static const uint8_t networkId[EMBER_NETWORK_ID_SIZE] = "client/server";
   \                     networkId:
   \   00000000   0x63 0x6C          DC8 "client/server"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x2F 0x73    
   \              0x65 0x72    
   \              0x76 0x65    
   \              0x72 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0
     37          

   \                                 In section .text, align 4, keep-with-next
     38          static const uint8_t commissionerId[] = "server";
   \                     commissionerId:
   \   00000000   0x73 0x65          DC8 "server"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x00         
   \   00000007   0x00               DC8 0
     39          
     40          static void resumeNetwork(void);
     41          #ifndef USE_RANDOM_MASTER_KEY
     42          static void setSecurityParameters(void);
     43          #endif
     44          static void formNetwork(void);
     45          static void attachToNetwork(void);
     46          static void getCommissioner(void);
     47          static void becomeCommissioner(void);
     48          static void advertise(void);
     49          static void resetNetworkState(void);
     50          
     51          #define ADVERTISEMENT_PERIOD_MS (60 * MILLISECOND_TICKS_PER_SECOND)

   \                                 In section .text, align 4, keep-with-next
     52          static const EmberIpv6Address allMeshNodes = {
   \                     allMeshNodes:
   \   00000000   0xFF 0x03          DC8 255, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x01    
     53            {0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     54             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,}
     55          };
     56          

   \                                 In section .text, align 4, keep-with-next
     57          static const uint8_t clientReportUri[] = "client/report";
   \                     clientReportUri:
   \   00000000   0x63 0x6C          DC8 "client/report"
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x2F 0x72    
   \              0x65 0x70    
   \              0x6F 0x72    
   \              0x74 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
     58          static const uint8_t serverAdvertiseUri[] = "server/advertise";
   \                     serverAdvertiseUri:
   \   00000000   0x73 0x65          DC8 "server/advertise"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x2F 0x61    
   \              0x64 0x76    
   \              0x65 0x72    
   \              0x74 0x69    
   \              0x73 0x65    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         
     59          
     60          enum {
     61            INITIAL                 = 0,
     62            RESUME_NETWORK          = 1,
     63            SET_SECURITY_PARAMETERS = 2,
     64            FORM_NETWORK            = 3,
     65            ATTACH_TO_NETWORK       = 4,
     66            GET_COMMISSIONER        = 5,
     67            BECOME_COMMISSIONER     = 6,
     68            ADVERTISE               = 7,
     69            RESET_NETWORK_STATE     = 8,
     70          };

   \                                 In section .bss, align 4
     71          static uint8_t state = INITIAL;
   \                     state:
   \   00000000                      DS8 1
   \   00000001                      DS8 3
     72          EmberEventControl stateEventControl;
   \                     stateEventControl:
   \   00000004                      DS8 8
     73          static void setNextStateWithDelay(uint8_t nextState, uint32_t delayMs);
     74          #define setNextState(nextState)       setNextStateWithDelay((nextState), 0)
     75          #define repeatStateWithDelay(delayMs) setNextStateWithDelay(state, (delayMs))
     76          

   \                                 In section .text, align 2, keep-with-next
     77          void emberAfInitCallback(void)
     78          {
   \                     emberAfInitCallback: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
     79            // This callback is called after the stack has been initialized.  It is our
     80            // opporunity to do initialization, like resuming the network or starting a
     81            // new one.
     82          
     83            emberEventControlSetInactive(stateEventControl);
   \   00000002   0x.... 0x....      LDR.W    R4,??DataTable65_2
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x7120             STRB     R0,[R4, #+4]
     84          
     85            switch (emberNetworkStatus()) {
   \   0000000A   0x.... 0x....      BL       emberNetworkStatus
   \   0000000E   0xB130             CBZ.N    R0,??emberAfInitCallback_0
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xD00A             BEQ.N    ??emberAfInitCallback_1
   \   00000014   0xD306             BCC.N    ??emberAfInitCallback_2
   \   00000016   0x2804             CMP      R0,#+4
   \   00000018   0xD00D             BEQ.N    ??emberAfInitCallback_3
   \   0000001A   0xD309             BCC.N    ??emberAfInitCallback_4
   \   0000001C   0xE00D             B.N      ??emberAfInitCallback_5
     86            case EMBER_NO_NETWORK:
     87              setNextState(SET_SECURITY_PARAMETERS_OR_FORM_NETWORK);
   \                     ??emberAfInitCallback_0: (+1)
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x2002             MOVS     R0,#+2
   \   00000022   0xE009             B.N      ??emberAfInitCallback_6
     88              break;
     89            case EMBER_SAVED_NETWORK:
     90              setNextState(RESUME_NETWORK);
   \                     ??emberAfInitCallback_2: (+1)
   \   00000024   0x2100             MOVS     R1,#+0
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0xE006             B.N      ??emberAfInitCallback_6
     91              break;
     92            case EMBER_JOINING_NETWORK:
     93              // TODO: What should happen in this case?
     94              state = RESUME_NETWORK;
   \                     ??emberAfInitCallback_1: (+1)
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x7020             STRB     R0,[R4, #+0]
     95              break;
   \   0000002E   0xBD10             POP      {R4,PC}
     96            case EMBER_JOINED_NETWORK:
     97              setNextState(GET_COMMISSIONER);
   \                     ??emberAfInitCallback_4: (+1)
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x2005             MOVS     R0,#+5
   \   00000034   0xE000             B.N      ??emberAfInitCallback_6
     98              break;
     99            case EMBER_JOINED_NETWORK_NO_PARENT:
    100              setNextState(ATTACH_TO_NETWORK);
   \                     ??emberAfInitCallback_3: (+1)
   \   00000036   0x2100             MOVS     R1,#+0
   \                     ??emberAfInitCallback_6: (+1)
   \   00000038   0x....             B.N      ?Subroutine1
    101              break;
    102            default:
    103              assert(false);
   \                     ??emberAfInitCallback_5: (+1)
   \   0000003A   0xE8BD 0x4010      POP      {R4,LR}
   \   0000003E   0x2167             MOVS     R1,#+103
   \   00000040   0x.... 0x....      ADR.W    R0,?_7
   \   00000044   0x.... 0x....      B.W      halInternalAssertFailed
    104            }
    105          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0xE8BD 0x4010      POP      {R4,LR}
   \   00000004   0x....             B.N      setNextStateWithDelay
    106          
    107          static void resumeNetwork(void)
    108          {

   \                                 In section .rodata, align 4, keep-with-next
    109            EmberNetworkParameters parameters = {{0}};
   \                     ?_38:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000040   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
    110            uint8_t networkId[EMBER_NETWORK_ID_SIZE + 1] = {0};
   \                     ?_39:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    111          
    112            assert(state == RESUME_NETWORK);
    113          
    114            emberGetNetworkParameters(&parameters);
    115            MEMCOPY(networkId, parameters.networkId, EMBER_NETWORK_ID_SIZE);
    116          
    117            emberAfCorePrintln("Resuming operation on network \"%s\"", networkId);
    118          
    119            emberResumeNetwork();
    120          }
    121          

   \                                 In section .text, align 2, keep-with-next
    122          void emberResumeNetworkReturn(EmberStatus status)
    123          {
   \                     emberResumeNetworkReturn: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x.... 0x....      BL       ?Subroutine3
    124            // If resuming succeeds, we can proceed to setting ourselves as the
    125            // commissioner.  If not, we need to form a new network, beginning with
    126            // setting our security parameters.  See the note below about resuming
    127            // sometimes being reported via a join status.
    128          
    129            assert(state == RESUME_NETWORK);
   \                     ??CrossCallReturnLabel_9: (+1)
   \   00000006   0x2801             CMP      R0,#+1
   \   00000008   0xB09A             SUB      SP,SP,#+104
   \   0000000A   0xD002             BEQ.N    ??CrossCallReturnLabel_50
   \   0000000C   0x2181             MOVS     R1,#+129
   \   0000000E   0x.... 0x....      BL       ?Subroutine9
    130          
    131            if (status == EMBER_SUCCESS) {
   \                     ??CrossCallReturnLabel_50: (+1)
   \   00000012   0xB984             CBNZ.N   R4,??emberResumeNetworkReturn_0
    132              EmberNetworkParameters parameters = {{0}};
   \   00000014   0x.... 0x....      BL       ?Subroutine11
    133              uint8_t networkId[EMBER_NETWORK_ID_SIZE + 1] = {0};
   \                     ??CrossCallReturnLabel_54: (+1)
   \   00000018   0x.... 0x....      BL       ?Subroutine12
    134              emberGetNetworkParameters(&parameters);
   \                     ??CrossCallReturnLabel_57: (+1)
   \   0000001C   0xA805             ADD      R0,SP,#+20
   \   0000001E   0x.... 0x....      BL       emberGetNetworkParameters
    135              MEMCOPY(networkId, parameters.networkId, EMBER_NETWORK_ID_SIZE);
   \   00000022   0x.... 0x....      BL       ?Subroutine10
    136              emberAfCorePrintln("Resumed operation on network \"%s\"", networkId);
   \                     ??CrossCallReturnLabel_53: (+1)
   \   00000026   0xAA00             ADD      R2,SP,#+0
   \   00000028   0x.... 0x....      ADR.W    R1,?_9
   \   0000002C   0x.... 0x....      BL       ?Subroutine8
    137              setNextState(GET_COMMISSIONER);
   \                     ??CrossCallReturnLabel_43: (+1)
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x2005             MOVS     R0,#+5
   \   00000034   0xE015             B.N      ??emberResumeNetworkReturn_1
    138            } else if (status == EMBER_ATTACH_FAILED
    139                       && emberNetworkStatus() == EMBER_JOINED_NETWORK_NO_PARENT) {
   \                     ??emberResumeNetworkReturn_0: (+1)
   \   00000036   0x2CC2             CMP      R4,#+194
   \   00000038   0xD10A             BNE.N    ??emberResumeNetworkReturn_2
   \   0000003A   0x.... 0x....      BL       emberNetworkStatus
   \   0000003E   0x2804             CMP      R0,#+4
   \   00000040   0xD108             BNE.N    ??emberResumeNetworkReturn_3
    140              emberAfCorePrintln("ERR: No connection to network");
   \   00000042   0x.... 0x....      ADR.W    R1,?_10
   \   00000046   0x.... 0x....      BL       ??Subroutine4_0
    141              setNextState(ATTACH_TO_NETWORK);
   \                     ??CrossCallReturnLabel_18: (+1)
   \   0000004A   0x2100             MOVS     R1,#+0
   \   0000004C   0x2004             MOVS     R0,#+4
   \   0000004E   0xE008             B.N      ??emberResumeNetworkReturn_1
    142            } else if (status != EMBER_RESUME_FAILED_NEW_NETWORK) {
   \                     ??emberResumeNetworkReturn_2: (+1)
   \   00000050   0x2CC4             CMP      R4,#+196
   \   00000052   0xD008             BEQ.N    ??emberResumeNetworkReturn_4
    143              emberAfCorePrintln("ERR: Resuming failed: 0x%x", status);
   \                     ??emberResumeNetworkReturn_3: (+1)
   \   00000054   0x4622             MOV      R2,R4
   \   00000056   0x.... 0x....      ADR.W    R1,?_11
   \   0000005A   0x.... 0x....      BL       ??Subroutine5_0
    144              setNextState(SET_SECURITY_PARAMETERS_OR_FORM_NETWORK);
   \                     ??CrossCallReturnLabel_27: (+1)
   \   0000005E   0x2100             MOVS     R1,#+0
   \   00000060   0x2002             MOVS     R0,#+2
   \                     ??emberResumeNetworkReturn_1: (+1)
   \   00000062   0x.... 0x....      BL       setNextStateWithDelay
    145            }
    146          }
   \                     ??emberResumeNetworkReturn_4: (+1)
   \   00000066   0xB01A             ADD      SP,SP,#+104
   \   00000068   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine12: (+1)
   \   00000000   0xA800             ADD      R0,SP,#+0
   \   00000002   0x2114             MOVS     R1,#+20
   \   00000004   0x.... 0x....      B.W      __aeabi_memclr4

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine11: (+1)
   \   00000000   0xA805             ADD      R0,SP,#+20
   \   00000002   0x2150             MOVS     R1,#+80
   \   00000004   0x.... 0x....      B.W      __aeabi_memclr4

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine10: (+1)
   \   00000000   0x2210             MOVS     R2,#+16
   \   00000002   0xA905             ADD      R1,SP,#+20
   \   00000004   0xA800             ADD      R0,SP,#+0
   \   00000006   0x.... 0x....      B.W      halCommonMemMove

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \   00000000   0x4604             MOV      R4,R0
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable65_2
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine9: (+1)
   \   00000000   0x.... 0x....      ADR.W    R0,?_7
   \   00000004   0x.... 0x....      B.W      halInternalAssertFailed

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine8: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x.... 0x....      B.W      emberAfPrintln

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine5: (+1)
   \   00000000   0x4622             MOV      R2,R4
   \                     ??Subroutine5_0: (+1)
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      B.W      emberAfPrintln

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4: (+1)
   \   00000000   0x....             ADR.N    R1,??DataTable65_1  ;; ""
   \                     ??Subroutine4_0: (+1)
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      B.W      emberAfPrintln

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_40:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000040   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_41:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    147          
    148          #ifndef USE_RANDOM_MASTER_KEY
    149          static void setSecurityParameters(void)
    150          {
    151            // Setting a fixed master key is a security risk, but is useful for
    152            // demonstration purposes.  See the warning above.
    153          

   \                                 In section .rodata, align 4, keep-with-next
    154            EmberSecurityParameters parameters = {0};
   \                     ?_42:
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    155          
    156            assert(state == SET_SECURITY_PARAMETERS);
    157          
    158            emberAfCorePrint("Setting master key to ");
    159            emberAfCoreDebugExec(emberAfPrintZigbeeKey(masterKey.contents));
    160          
    161            parameters.networkKey = &masterKey;
    162            emberSetSecurityParameters(&parameters, EMBER_NETWORK_KEY_OPTION);
    163          }
    164          #endif
    165          

   \                                 In section .text, align 2, keep-with-next
    166          void emberSetSecurityParametersReturn(EmberStatus status)
    167          {
   \                     emberSetSecurityParametersReturn: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x.... 0x....      BL       ?Subroutine3
    168            // After setting our security parameters, we can move on to actually forming
    169            // the network.
    170          
    171            assert(state == SET_SECURITY_PARAMETERS);
   \                     ??CrossCallReturnLabel_10: (+1)
   \   00000006   0x2802             CMP      R0,#+2
   \   00000008   0xD002             BEQ.N    ??CrossCallReturnLabel_49
   \   0000000A   0x21AB             MOVS     R1,#+171
   \   0000000C   0x.... 0x....      BL       ?Subroutine9
    172          
    173            if (status == EMBER_SUCCESS) {
   \                     ??CrossCallReturnLabel_49: (+1)
   \   00000010   0xB914             CBNZ.N   R4,??emberSetSecurityParametersReturn_0
    174              setNextState(FORM_NETWORK);
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x2003             MOVS     R0,#+3
   \   00000016   0xE011             B.N      ??emberSetSecurityParametersReturn_1
    175            } else {
    176              emberAfCorePrint("ERR: Setting master key to ");
   \                     ??emberSetSecurityParametersReturn_0: (+1)
   \   00000018   0x.... 0x....      ADR.W    R1,?_13
   \   0000001C   0x.... 0x....      BL       ?Subroutine2
    177              emberAfCoreDebugExec(emberAfPrintZigbeeKey(masterKey.contents));
   \                     ??CrossCallReturnLabel_4: (+1)
   \   00000020   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_33: (+1)
   \   00000024   0xB118             CBZ.N    R0,??emberSetSecurityParametersReturn_2
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable65_3
   \   0000002A   0x.... 0x....      BL       emberAfPrintZigbeeKey
    178              emberAfCorePrintln(" failed:  0x%x", status);
   \                     ??emberSetSecurityParametersReturn_2: (+1)
   \   0000002E   0x4622             MOV      R2,R4
   \   00000030   0x.... 0x....      ADR.W    R1,?_14
   \   00000034   0x.... 0x....      BL       ??Subroutine5_0
    179              setNextState(SET_SECURITY_PARAMETERS);
   \                     ??CrossCallReturnLabel_26: (+1)
   \   00000038   0x2100             MOVS     R1,#+0
   \   0000003A   0x2002             MOVS     R0,#+2
    180            }
   \                     ??emberSetSecurityParametersReturn_1: (+1)
   \   0000003C                      REQUIRE ?Subroutine1
   \   0000003C                      ;; // Fall through to label ?Subroutine1
    181          }
    182          
    183          static void formNetwork(void)
    184          {

   \                                 In section .rodata, align 4, keep-with-next
    185            EmberNetworkParameters parameters = {{0}};
   \                     ?_43:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000040   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    186          
    187            assert(state == FORM_NETWORK);
    188          
    189            emberAfCorePrintln("Forming network \"%s\"", networkId);
    190          
    191            MEMCOPY(parameters.networkId, networkId, sizeof(networkId));
    192            parameters.nodeType = EMBER_ROUTER;
    193            parameters.radioTxPower = 3;
    194          
    195            emberFormNetwork(&parameters,
    196                             (EMBER_NETWORK_ID_OPTION
    197                              | EMBER_NODE_TYPE_OPTION
    198                              | EMBER_TX_POWER_OPTION),
    199                             EMBER_ALL_802_15_4_CHANNELS_MASK);
    200          }
    201          

   \                                 In section .text, align 2, keep-with-next
    202          void emberFormNetworkReturn(EmberStatus status)
    203          {
   \                     emberFormNetworkReturn: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x.... 0x....      BL       ?Subroutine3
    204            // With the network formed, we now want to establish ourself as the
    205            // commissioner.
    206          
    207            assert(state == FORM_NETWORK);
   \                     ??CrossCallReturnLabel_11: (+1)
   \   00000006   0x2803             CMP      R0,#+3
   \   00000008   0xB09A             SUB      SP,SP,#+104
   \   0000000A   0xD002             BEQ.N    ??CrossCallReturnLabel_48
   \   0000000C   0x21CF             MOVS     R1,#+207
   \   0000000E   0x.... 0x....      BL       ?Subroutine9
    208          
    209            if (status == EMBER_SUCCESS) {
   \                     ??CrossCallReturnLabel_48: (+1)
   \   00000012   0xB984             CBNZ.N   R4,??emberFormNetworkReturn_0
    210              EmberNetworkParameters parameters = {{0}};
   \   00000014   0x.... 0x....      BL       ?Subroutine11
    211              uint8_t networkId[EMBER_NETWORK_ID_SIZE + 1] = {0};
   \                     ??CrossCallReturnLabel_55: (+1)
   \   00000018   0x.... 0x....      BL       ?Subroutine12
    212              emberGetNetworkParameters(&parameters);
   \                     ??CrossCallReturnLabel_58: (+1)
   \   0000001C   0xA805             ADD      R0,SP,#+20
   \   0000001E   0x.... 0x....      BL       emberGetNetworkParameters
    213              MEMCOPY(networkId, parameters.networkId, EMBER_NETWORK_ID_SIZE);
   \   00000022   0x.... 0x....      BL       ?Subroutine10
    214              emberAfCorePrintln("Formed network \"%s\"", networkId);
   \                     ??CrossCallReturnLabel_52: (+1)
   \   00000026   0xAA00             ADD      R2,SP,#+0
   \   00000028   0x.... 0x....      ADR.W    R1,?_16
   \   0000002C   0x.... 0x....      BL       ?Subroutine8
    215              setNextState(GET_COMMISSIONER);
   \                     ??CrossCallReturnLabel_42: (+1)
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x2005             MOVS     R0,#+5
   \   00000034   0xE006             B.N      ??emberFormNetworkReturn_1
    216            } else {
    217              emberAfCorePrintln("ERR: Forming failed: 0x%x", status);
   \                     ??emberFormNetworkReturn_0: (+1)
   \   00000036   0x4622             MOV      R2,R4
   \   00000038   0x.... 0x....      ADR.W    R1,?_17
   \   0000003C   0x.... 0x....      BL       ??Subroutine5_0
    218              setNextState(SET_SECURITY_PARAMETERS_OR_FORM_NETWORK);
   \                     ??CrossCallReturnLabel_25: (+1)
   \   00000040   0x2100             MOVS     R1,#+0
   \   00000042   0x2002             MOVS     R0,#+2
   \                     ??emberFormNetworkReturn_1: (+1)
   \   00000044   0x.... 0x....      BL       setNextStateWithDelay
    219            }
    220          }
   \   00000048   0xB01A             ADD      SP,SP,#+104
   \   0000004A   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_44:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000040   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_45:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    221          

   \                                 In section .text, align 2, keep-with-next
    222          void emberJoinNetworkReturn(EmberStatus status)
    223          {
   \                     emberJoinNetworkReturn: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    224            // Note that emberJoinNetworkReturn is also a generic stack status handler,
    225            // and is called at various times throughout the lifetime of the network.  In
    226            // particular, it notifies us if we have lost our connection to the network,
    227            // in which case we will try to rejoin.
    228          
    229            if (state == RESUME_NETWORK) {
   \   00000002   0x.... 0x....      LDR.W    R1,??DataTable65_2
   \   00000006   0x7809             LDRB     R1,[R1, #+0]
   \   00000008   0x2901             CMP      R1,#+1
   \   0000000A   0xBF04             ITT      EQ 
   \   0000000C   0xE8BD 0x4002      POPEQ    {R1,LR}
   \   00000010   0x.... 0x....      BEQ.W    emberResumeNetworkReturn
    230              emberResumeNetworkReturn(status);
    231            } else if (status == EMBER_ATTACH_FAILED
    232                     && emberNetworkStatus() == EMBER_JOINED_NETWORK_NO_PARENT) {
   \   00000014   0x28C2             CMP      R0,#+194
   \   00000016   0xD10C             BNE.N    ??emberJoinNetworkReturn_0
   \   00000018   0x.... 0x....      BL       emberNetworkStatus
   \   0000001C   0x2804             CMP      R0,#+4
   \   0000001E   0xD108             BNE.N    ??emberJoinNetworkReturn_0
    233              emberAfCorePrintln("ERR: Lost connection to network");
   \   00000020   0x.... 0x....      ADR.W    R1,?_18
   \   00000024   0x.... 0x....      BL       ??Subroutine4_0
    234              setNextState(ATTACH_TO_NETWORK);
   \                     ??CrossCallReturnLabel_17: (+1)
   \   00000028   0xE8BD 0x4004      POP      {R2,LR}
   \   0000002C   0x2100             MOVS     R1,#+0
   \   0000002E   0x2004             MOVS     R0,#+4
   \   00000030   0x....             B.N      setNextStateWithDelay
    235            }
    236          }
   \                     ??emberJoinNetworkReturn_0: (+1)
   \   00000032   0xBD01             POP      {R0,PC}          ;; return
    237          
    238          static void attachToNetwork(void)
    239          {
    240            assert(state == ATTACH_TO_NETWORK);
    241            emberAttachToNetwork();
    242          }
    243          

   \                                 In section .text, align 2, keep-with-next
    244          void emberAttachToNetworkReturn(EmberStatus status)
    245          {
   \                     emberAttachToNetworkReturn: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x.... 0x....      BL       ?Subroutine3
    246            // This return indicates whether the stack is going to attempt to attach.
    247            // If so, the result is reported later in the form of a join.  If we cannot
    248            // even attempt to attach, we just give up and reset out network state, which
    249            // will trigger a fresh form attempt.
    250          
    251            assert(state == ATTACH_TO_NETWORK);
   \                     ??CrossCallReturnLabel_12: (+1)
   \   00000006   0x2804             CMP      R0,#+4
   \   00000008   0xB09A             SUB      SP,SP,#+104
   \   0000000A   0xD002             BEQ.N    ??CrossCallReturnLabel_47
   \   0000000C   0x21FB             MOVS     R1,#+251
   \   0000000E   0x.... 0x....      BL       ?Subroutine9
    252          
    253            if (status == EMBER_SUCCESS) {
   \                     ??CrossCallReturnLabel_47: (+1)
   \   00000012   0xB974             CBNZ.N   R4,??emberAttachToNetworkReturn_0
    254              EmberNetworkParameters parameters = {{0}};
   \   00000014   0x.... 0x....      BL       ?Subroutine11
    255              uint8_t networkId[EMBER_NETWORK_ID_SIZE + 1] = {0};
   \                     ??CrossCallReturnLabel_56: (+1)
   \   00000018   0x.... 0x....      BL       ?Subroutine12
    256              emberGetNetworkParameters(&parameters);
   \                     ??CrossCallReturnLabel_59: (+1)
   \   0000001C   0xA805             ADD      R0,SP,#+20
   \   0000001E   0x.... 0x....      BL       emberGetNetworkParameters
    257              MEMCOPY(networkId, parameters.networkId, EMBER_NETWORK_ID_SIZE);
   \   00000022   0x.... 0x....      BL       ?Subroutine10
    258              emberAfCorePrintln("Rejoining network \"%s\"", networkId);
   \                     ??CrossCallReturnLabel_51: (+1)
   \   00000026   0xAA00             ADD      R2,SP,#+0
   \   00000028   0x.... 0x....      ADR.W    R1,?_19
   \   0000002C   0x.... 0x....      BL       ?Subroutine8
    259            } else {
   \                     ??CrossCallReturnLabel_41: (+1)
   \   00000030   0xE008             B.N      ??emberAttachToNetworkReturn_1
    260              emberAfCorePrintln("ERR: Unable to rejoin: 0x%x", status);
   \                     ??emberAttachToNetworkReturn_0: (+1)
   \   00000032   0x4622             MOV      R2,R4
   \   00000034   0x.... 0x....      ADR.W    R1,?_20
   \   00000038   0x.... 0x....      BL       ??Subroutine5_0
    261              setNextState(RESET_NETWORK_STATE);
   \                     ??CrossCallReturnLabel_24: (+1)
   \   0000003C   0x2100             MOVS     R1,#+0
   \   0000003E   0x2008             MOVS     R0,#+8
   \   00000040   0x.... 0x....      BL       setNextStateWithDelay
    262            }
    263          }
   \                     ??emberAttachToNetworkReturn_1: (+1)
   \   00000044   0xB01A             ADD      SP,SP,#+104
   \   00000046   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_46:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000040   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_47:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    264          
    265          static void getCommissioner(void)
    266          {
    267            assert(state == GET_COMMISSIONER);
    268          
    269            emberGetCommissioner();
    270          }
    271          

   \                                 In section .text, align 2, keep-with-next
    272          void emberCommissionerStatusHandler(uint16_t flags,
    273                                              const uint8_t *commissionerName,
    274                                              uint8_t commissionerNameLength)
    275          {
   \                     emberCommissionerStatusHandler: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x460C             MOV      R4,R1
    276            if (state == GET_COMMISSIONER) {
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable65_2
   \   00000008   0x7809             LDRB     R1,[R1, #+0]
   \   0000000A   0x2905             CMP      R1,#+5
   \   0000000C   0x4615             MOV      R5,R2
   \   0000000E   0xD11F             BNE.N    ??emberCommissionerStatusHandler_0
    277              if (flags == EMBER_NO_COMMISSIONER) {
   \   00000010   0xB910             CBNZ.N   R0,??emberCommissionerStatusHandler_1
    278                setNextState(BECOME_COMMISSIONER);
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x2006             MOVS     R0,#+6
   \   00000016   0xE018             B.N      ??emberCommissionerStatusHandler_2
    279              } else {
    280                if (!READBITS(flags, EMBER_AM_COMMISSIONER)) {
   \                     ??emberCommissionerStatusHandler_1: (+1)
   \   00000018   0x0780             LSLS     R0,R0,#+30
   \   0000001A   0xD414             BMI.N    ??CrossCallReturnLabel_21
    281                  emberAfCorePrint("ERR: Network already has a commissioner");
   \   0000001C   0x.... 0x....      ADR.W    R1,?_21
   \   00000020   0x.... 0x....      BL       ?Subroutine2
    282                  if (commissionerName != NULL) {
   \                     ??CrossCallReturnLabel_3: (+1)
   \   00000024   0xB16C             CBZ.N    R4,??emberCommissionerStatusHandler_3
    283                    emberAfCorePrint(": ");
   \   00000026   0x....             ADR.N    R1,??DataTable62  ;; 0x3A, 0x20, 0x00, 0x00
   \   00000028   0x.... 0x....      BL       ?Subroutine2
    284                    uint8_t i;
    285                    for (i = 0; i < commissionerNameLength; i++) {
   \                     ??CrossCallReturnLabel_2: (+1)
   \   0000002C   0x2600             MOVS     R6,#+0
   \   0000002E   0x....             ADR.N    R7,??DataTable62_1  ;; 0x25, 0x63, 0x00, 0x00
   \   00000030   0xE004             B.N      ??emberCommissionerStatusHandler_4
    286                      emberAfCorePrint("%c", commissionerName[i]);
   \                     ??emberCommissionerStatusHandler_5: (+1)
   \   00000032   0x5D32             LDRB     R2,[R6, R4]
   \   00000034   0x4639             MOV      R1,R7
   \   00000036   0x.... 0x....      BL       ?Subroutine7
    287                    }
   \                     ??CrossCallReturnLabel_37: (+1)
   \   0000003A   0x1C76             ADDS     R6,R6,#+1
   \                     ??emberCommissionerStatusHandler_4: (+1)
   \   0000003C   0xB2F6             UXTB     R6,R6
   \   0000003E   0x42AE             CMP      R6,R5
   \   00000040   0xD3F7             BCC.N    ??emberCommissionerStatusHandler_5
    288                  }
    289                  emberAfCorePrintln("");
   \                     ??emberCommissionerStatusHandler_3: (+1)
   \   00000042   0x.... 0x....      BL       ?Subroutine4
    290                }
    291                setNextState(ADVERTISE);
   \                     ??CrossCallReturnLabel_21: (+1)
   \   00000046   0x2100             MOVS     R1,#+0
   \   00000048   0x2007             MOVS     R0,#+7
   \                     ??emberCommissionerStatusHandler_2: (+1)
   \   0000004A   0xE8BD 0x40F4      POP      {R2,R4-R7,LR}
   \   0000004E   0x....             B.N      setNextStateWithDelay
    292              }
    293            }
    294          }
   \                     ??emberCommissionerStatusHandler_0: (+1)
   \   00000050   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    295          
    296          static void becomeCommissioner(void)
    297          {
    298            // We want to establishing ourselves as the commissioner so that we are in
    299            // charge of bringing new devices into the network.
    300          
    301            assert(state == BECOME_COMMISSIONER);
    302          
    303            emberAfCorePrintln("Becoming commissioner \"%s\"", commissionerId);
    304          
    305            emberBecomeCommissioner(commissionerId, sizeof(commissionerId));
    306          }
    307          

   \                                 In section .text, align 2, keep-with-next
    308          void emberBecomeCommissionerReturn(EmberStatus status)
    309          {
   \                     emberBecomeCommissionerReturn: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x.... 0x....      BL       ?Subroutine3
    310            // Once we are established as the commissioner, we move on to periodically
    311            // advertising our presence to other routers in the mesh.
    312          
    313            assert(state == BECOME_COMMISSIONER);
   \                     ??CrossCallReturnLabel_13: (+1)
   \   00000006   0x2806             CMP      R0,#+6
   \   00000008   0xD003             BEQ.N    ??CrossCallReturnLabel_46
   \   0000000A   0xF240 0x1139      MOVW     R1,#+313
   \   0000000E   0x.... 0x....      BL       ?Subroutine9
    314          
    315            if (status == EMBER_SUCCESS) {
   \                     ??CrossCallReturnLabel_46: (+1)
   \   00000012   0xB934             CBNZ.N   R4,??emberBecomeCommissionerReturn_0
    316              emberAfCorePrintln("Became commissioner");
   \   00000014   0x.... 0x....      ADR.W    R1,?_26
   \   00000018   0x.... 0x....      BL       ??Subroutine4_0
    317              setNextState(ADVERTISE);
   \                     ??CrossCallReturnLabel_16: (+1)
   \   0000001C   0x2100             MOVS     R1,#+0
   \   0000001E   0x2007             MOVS     R0,#+7
   \   00000020   0xE006             B.N      ??emberBecomeCommissionerReturn_1
    318            } else {
    319              emberAfCorePrintln("ERR: Becoming commissioner failed: 0x%x", status);
   \                     ??emberBecomeCommissionerReturn_0: (+1)
   \   00000022   0x4622             MOV      R2,R4
   \   00000024   0x.... 0x....      ADR.W    R1,?_27
   \   00000028   0x.... 0x....      BL       ??Subroutine5_0
    320              setNextState(GET_COMMISSIONER);
   \                     ??CrossCallReturnLabel_23: (+1)
   \   0000002C   0x2100             MOVS     R1,#+0
   \   0000002E   0x2005             MOVS     R0,#+5
    321            }
   \                     ??emberBecomeCommissionerReturn_1: (+1)
   \   00000030   0x....             B.N      ?Subroutine1
    322          }
    323          
    324          // expect <join key:1--16> [<eui64:8>]

   \                                 In section .text, align 2, keep-with-next
    325          void expectCommand(void)
    326          {
   \                     expectCommand: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
    327            uint8_t joinKeyLength;
    328            uint8_t *joinKey;
    329            bool hasEui64;
    330            EmberEui64 eui64;
    331          
    332            joinKey = emberStringCommandArgument(0, &joinKeyLength);
   \   00000004   0xA900             ADD      R1,SP,#+0
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      BL       emberStringCommandArgument
   \   0000000C   0x4604             MOV      R4,R0
    333            if (joinKeyLength > EMBER_ENCRYPTION_KEY_SIZE) {
   \   0000000E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000012   0x2811             CMP      R0,#+17
   \   00000014   0xDB08             BLT.N    ??expectCommand_0
    334              emberAfAppPrintln("%p: %p", "ERR", "invalid join key");
   \   00000016   0x.... 0x....      ADR.W    R3,?_30
   \   0000001A   0x.... 0x....      ADR.W    R1,?_28
   \   0000001E   0x....             ADR.N    R2,??DataTable65  ;; "ERR"
   \   00000020   0x2002             MOVS     R0,#+2
   \   00000022   0x.... 0x....      BL       emberAfPrintln
    335              return;
   \   00000026   0xBD1F             POP      {R0-R4,PC}
    336            }
    337          
    338            hasEui64 = (emberCommandArgumentCount() > 1);
   \                     ??expectCommand_0: (+1)
   \   00000028   0x.... 0x....      BL       emberCommandArgumentCount
   \   0000002C   0x2802             CMP      R0,#+2
   \   0000002E   0xDA0A             BGE.N    ??expectCommand_1
    339            if (hasEui64) {
    340              emberGetEui64Argument(1, &eui64);
    341              emberSetJoinKey(&eui64, joinKey, joinKeyLength);
    342              emberSetJoiningMode(EMBER_JOINING_CLEAR_STEERING, 16);
    343              emberAddSteeringEui64(&eui64);
    344            } else {
    345              emberSetJoinKey(NULL, joinKey, joinKeyLength);
   \   00000030   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   00000034   0x4621             MOV      R1,R4
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x.... 0x....      BL       emberSetJoinKey
    346              emberSetJoiningMode(EMBER_JOINING_NO_STEERING, 1);
   \   0000003C   0x2101             MOVS     R1,#+1
   \   0000003E   0x2001             MOVS     R0,#+1
   \   00000040   0x.... 0x....      BL       emberSetJoiningMode
   \   00000044   0xE010             B.N      ??expectCommand_2
    347            }
   \                     ??expectCommand_1: (+1)
   \   00000046   0xA901             ADD      R1,SP,#+4
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0x.... 0x....      BL       emberGetExtendedPanIdArgument
   \   0000004E   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   00000052   0x4621             MOV      R1,R4
   \   00000054   0xA801             ADD      R0,SP,#+4
   \   00000056   0x.... 0x....      BL       emberSetJoinKey
   \   0000005A   0x2110             MOVS     R1,#+16
   \   0000005C   0x2002             MOVS     R0,#+2
   \   0000005E   0x.... 0x....      BL       emberSetJoiningMode
   \   00000062   0xA801             ADD      R0,SP,#+4
   \   00000064   0x.... 0x....      BL       emberAddSteeringEui64
    348            emberSendSteeringData();
   \                     ??expectCommand_2: (+1)
   \   00000068   0x.... 0x....      BL       emberSendSteeringData
    349          }
   \   0000006C   0xBD1F             POP      {R0-R4,PC}       ;; return
    350          

   \                                 In section .text, align 2, keep-with-next
    351          void emberSendSteeringDataReturn(EmberStatus status)
    352          {
    353            // The steering data helps bring new devices into our network.
    354          
    355            if (status == EMBER_SUCCESS) {
   \                     emberSendSteeringDataReturn: (+1)
   \   00000000   0xB910             CBNZ.N   R0,??emberSendSteeringDataReturn_0
    356              emberAfCorePrintln("Sent steering data");
   \   00000002   0x.... 0x....      ADR.W    R1,?_31
   \   00000006   0x....             B.N      ?Subroutine0
    357            } else {
    358              emberAfCorePrintln("ERR: Sending steering data failed: 0x%x", status);
   \                     ??emberSendSteeringDataReturn_0: (+1)
   \   00000008   0x4602             MOV      R2,R0
   \   0000000A   0x.... 0x....      ADR.W    R1,?_32
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x.... 0x....      B.W      emberAfPrintln
    359            }
    360          }
    361          

   \                                 In section .text, align 2, keep-with-next
    362          static void advertise(void)
    363          {
   \                     advertise: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
    364            // We peridocally send advertisements to all routers in the mesh.  Unattached
    365            // clients that hear these advertisements will begin sending data to us.
    366          
    367            EmberStatus status;
    368          
    369            assert(state == ADVERTISE);
   \   00000002   0x....             LDR.N    R4,??DataTable65_2
   \   00000004   0x7820             LDRB     R0,[R4, #+0]
   \   00000006   0x2807             CMP      R0,#+7
   \   00000008   0xB083             SUB      SP,SP,#+12
   \   0000000A   0xD003             BEQ.N    ??CrossCallReturnLabel_45
   \   0000000C   0xF240 0x1171      MOVW     R1,#+369
   \   00000010   0x.... 0x....      BL       ?Subroutine9
    370          
    371            emberAfCorePrint("Advertising to ");
   \                     ??CrossCallReturnLabel_45: (+1)
   \   00000014   0x.... 0x....      ADR.W    R1,?_33
   \   00000018   0x.... 0x....      BL       ?Subroutine2
    372            emberAfCoreDebugExec(emberAfPrintIpv6Address(&allMeshNodes));
   \                     ??CrossCallReturnLabel_1: (+1)
   \   0000001C   0x.... 0x....      ADR.W    R5,allMeshNodes
   \   00000020   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_32: (+1)
   \   00000024   0xB110             CBZ.N    R0,??advertise_0
   \   00000026   0x4628             MOV      R0,R5
   \   00000028   0x.... 0x....      BL       emberAfPrintIpv6Address
    373            emberAfCorePrintln("");
   \                     ??advertise_0: (+1)
   \   0000002C   0x.... 0x....      BL       ?Subroutine4
    374          
    375            status = emberCoapPostNonconfirmable(&allMeshNodes,
    376                                                 serverAdvertiseUri,
    377                                                 NULL, // body
    378                                                 0);   // body length
   \                     ??CrossCallReturnLabel_20: (+1)
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x9001             STR      R0,[SP, #+4]
   \   00000034   0x9000             STR      R0,[SP, #+0]
   \   00000036   0x2300             MOVS     R3,#+0
   \   00000038   0x.... 0x....      ADR.W    R2,serverAdvertiseUri
   \   0000003C   0x4629             MOV      R1,R5
   \   0000003E   0x2002             MOVS     R0,#+2
   \   00000040   0x.... 0x....      BL       emberCoapSendUri
    379            if (status != EMBER_SUCCESS) {
   \   00000044   0xB120             CBZ.N    R0,??CrossCallReturnLabel_22
    380              emberAfCorePrintln("ERR: Advertising failed: 0x%x", status);
   \   00000046   0x4602             MOV      R2,R0
   \   00000048   0x.... 0x....      ADR.W    R1,?_34
   \   0000004C   0x.... 0x....      BL       ??Subroutine5_0
    381            }
    382          
    383            repeatStateWithDelay(ADVERTISEMENT_PERIOD_MS);
   \                     ??CrossCallReturnLabel_22: (+1)
   \   00000050   0x7820             LDRB     R0,[R4, #+0]
   \   00000052   0xB003             ADD      SP,SP,#+12
   \   00000054   0xE8BD 0x4030      POP      {R4,R5,LR}
   \   00000058   0xF44F 0x4170      MOV      R1,#+61440
   \   0000005C   0x....             B.N      setNextStateWithDelay
    384          }
    385          
    386          // advertise

   \                                 In section .text, align 2, keep-with-next
    387          void advertiseCommand(void)
    388          {
    389            // If we are already advertising, we can manually send a new advertisement
    390            // using a CLI command.
    391          
    392            if (state == ADVERTISE) {
   \                     advertiseCommand: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable65_2
   \   00000002   0x7800             LDRB     R0,[R0, #+0]
   \   00000004   0x2807             CMP      R0,#+7
   \   00000006   0xBF08             IT       EQ 
   \   00000008   0x.... 0x....      BEQ.W    advertise
    393              advertise();
    394            }
    395          }
   \   0000000C   0x4770             BX       LR               ;; return
    396          

   \                                 In section .text, align 2, keep-with-next
    397          void emberCoapMessageHandler(const EmberIpv6Address *source,
    398                                       EmberCoapCode code,
    399                                       const uint8_t *token,
    400                                       uint8_t tokenLength,
    401                                       const uint8_t *uriPath,
    402                                       uint16_t uriPathLength,
    403                                       const uint8_t *payload,
    404                                       uint16_t payloadLength)
    405          {
   \                     emberCoapMessageHandler: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0x4604             MOV      R4,R0
   \   00000004   0x460D             MOV      R5,R1
   \   00000006   0xB085             SUB      SP,SP,#+20
    406            // Reports from clients are sent as CoAP POST requests to the "client/report"
    407            // URI.
    408          
    409            if (emberCoapIsRequest(code)) {
   \   00000008   0x4628             MOV      R0,R5
   \   0000000A   0x.... 0x....      BL       emberCoapIsRequest
   \   0000000E   0x2800             CMP      R0,#+0
   \   00000010   0xD038             BEQ.N    ??emberCoapMessageHandler_0
    410              EmberCoapCode responseCode;
    411              uint8_t convertedUri[sizeof(clientReportUri)] = {0};
   \   00000012   0xA800             ADD      R0,SP,#+0
   \   00000014   0x2110             MOVS     R1,#+16
   \   00000016   0x.... 0x....      BL       __aeabi_memclr4
    412          
    413              if (code != EMBER_COAP_CODE_POST) {
   \   0000001A   0x2D02             CMP      R5,#+2
   \   0000001C   0xBF18             IT       NE 
   \   0000001E   0x2085             MOVNE    R0,#+133
    414                responseCode = EMBER_COAP_CODE_405_METHOD_NOT_ALLOWED;
   \   00000020   0xD12C             BNE.N    ??emberCoapMessageHandler_1
    415              } else if (!emberCoapConvertUri(uriPath,
    416                                              uriPathLength,
    417                                              convertedUri,
    418                                              sizeof(convertedUri))
    419                         && strncmp((const char *)convertedUri,
    420                                    (const char *)clientReportUri,
    421                                    sizeof(clientReportUri)) != 0) {
   \   00000022   0x9909             LDR      R1,[SP, #+36]
   \   00000024   0x9808             LDR      R0,[SP, #+32]
   \   00000026   0x230E             MOVS     R3,#+14
   \   00000028   0xAA00             ADD      R2,SP,#+0
   \   0000002A   0x.... 0x....      BL       emberCoapDecodeUri
   \   0000002E   0xB940             CBNZ.N   R0,??emberCoapMessageHandler_2
   \   00000030   0x220E             MOVS     R2,#+14
   \   00000032   0x.... 0x....      ADR.W    R1,clientReportUri
   \   00000036   0xA800             ADD      R0,SP,#+0
   \   00000038   0x.... 0x....      BL       strncmp
   \   0000003C   0xB108             CBZ.N    R0,??emberCoapMessageHandler_2
    422                responseCode = EMBER_COAP_CODE_404_NOT_FOUND;
   \   0000003E   0x2084             MOVS     R0,#+132
   \   00000040   0xE01C             B.N      ??emberCoapMessageHandler_1
    423              } else if (state != ADVERTISE) {
   \                     ??emberCoapMessageHandler_2: (+1)
   \   00000042   0x....             LDR.N    R0,??DataTable65_2
   \   00000044   0x7800             LDRB     R0,[R0, #+0]
   \   00000046   0x2807             CMP      R0,#+7
   \   00000048   0xBF18             IT       NE 
   \   0000004A   0x20A3             MOVNE    R0,#+163
    424                responseCode = EMBER_COAP_CODE_503_SERVICE_UNAVAILABLE;
   \   0000004C   0xD116             BNE.N    ??emberCoapMessageHandler_1
    425              } else if (payloadLength != sizeof(int32_t)) {
   \   0000004E   0x980B             LDR      R0,[SP, #+44]
   \   00000050   0x2804             CMP      R0,#+4
   \   00000052   0xBF18             IT       NE 
   \   00000054   0x2080             MOVNE    R0,#+128
    426                responseCode = EMBER_COAP_CODE_400_BAD_REQUEST;
   \   00000056   0xD111             BNE.N    ??emberCoapMessageHandler_1
    427              } else {
    428                uint32_t data = (int32_t)emberFetchHighLowInt32u(payload);
   \   00000058   0x990A             LDR      R1,[SP, #+40]
   \   0000005A   0x2000             MOVS     R0,#+0
   \   0000005C   0x.... 0x....      BL       emFetchInt32u
    429                emberAfCorePrint("Received %ld from client at ", data);
   \   00000060   0x4602             MOV      R2,R0
   \   00000062   0x.... 0x....      ADR.W    R1,?_35
   \   00000066   0x.... 0x....      BL       ?Subroutine7
    430                emberAfCoreDebugExec(emberAfPrintIpv6Address(source));
   \                     ??CrossCallReturnLabel_36: (+1)
   \   0000006A   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_31: (+1)
   \   0000006E   0xB110             CBZ.N    R0,??emberCoapMessageHandler_3
   \   00000070   0x4620             MOV      R0,R4
   \   00000072   0x.... 0x....      BL       emberAfPrintIpv6Address
    431                emberAfCorePrintln("");
   \                     ??emberCoapMessageHandler_3: (+1)
   \   00000076   0x.... 0x....      BL       ?Subroutine4
    432                responseCode = EMBER_COAP_CODE_204_CHANGED;
   \                     ??CrossCallReturnLabel_19: (+1)
   \   0000007A   0x2044             MOVS     R0,#+68
    433              }
    434          
    435              emberCoapRespond(responseCode,
    436                               NULL, // payload
    437                               0);   // payload length
   \                     ??emberCoapMessageHandler_1: (+1)
   \   0000007C   0x2200             MOVS     R2,#+0
   \   0000007E   0x2100             MOVS     R1,#+0
   \   00000080   0x.... 0x....      BL       emberCoapRespond
    438            }
    439          }
   \                     ??emberCoapMessageHandler_0: (+1)
   \   00000084   0xB005             ADD      SP,SP,#+20
   \   00000086   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_48:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    440          
    441          static void resetNetworkState(void)
    442          {
    443            emberAfCorePrintln("Resetting network state");
    444            emberResetNetworkState();
    445          }
    446          

   \                                 In section .text, align 2, keep-with-next
    447          void emberResetNetworkStateReturn(EmberStatus status)
    448          {
   \                     emberResetNetworkStateReturn: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    449            // If we ever leave the network, we go right back to forming again.  This
    450            // could be triggered by an external CLI command.
    451          
    452            if (status == EMBER_SUCCESS) {
   \   00000002   0xB940             CBNZ.N   R0,??emberResetNetworkStateReturn_0
    453              emberAfCorePrintln("Reset network state");
   \   00000004   0x.... 0x....      ADR.W    R1,?_37
   \   00000008   0x.... 0x....      BL       ??Subroutine4_0
    454              setNextState(SET_SECURITY_PARAMETERS_OR_FORM_NETWORK);
   \                     ??CrossCallReturnLabel_15: (+1)
   \   0000000C   0xE8BD 0x4004      POP      {R2,LR}
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x2002             MOVS     R0,#+2
   \   00000014   0x....             B.N      setNextStateWithDelay
    455            }
    456          }
   \                     ??emberResetNetworkStateReturn_0: (+1)
   \   00000016   0xBD01             POP      {R0,PC}          ;; return
    457          

   \                                 In section .text, align 2, keep-with-next
    458          void emberUdpHandler(const uint8_t *destination,
    459                               const uint8_t *source,
    460                               uint16_t localPort,
    461                               uint16_t remotePort,
    462                               const uint8_t *payload,
    463                               uint16_t payloadLength)
    464          {
   \                     emberUdpHandler: (+1)
   \   00000000   0xB57C             PUSH     {R2-R6,LR}
    465            // UDP packets for TFTP bootloading are passed through.  Everything else is
    466            // simply logged and ignored.
    467          
    468            if (localPort == emTftpLocalTid) {
   \   00000002   0x....             LDR.N    R6,??DataTable65_4
   \   00000004   0x9D06             LDR      R5,[SP, #+24]
   \   00000006   0x8836             LDRH     R6,[R6, #+0]
   \   00000008   0x460C             MOV      R4,R1
   \   0000000A   0x4619             MOV      R1,R3
   \   0000000C   0x9B07             LDR      R3,[SP, #+28]
   \   0000000E   0x42B2             CMP      R2,R6
   \   00000010   0xD106             BNE.N    ??emberUdpHandler_0
    469              emProcessTftpPacket(source, remotePort, payload, payloadLength);
   \   00000012   0x462A             MOV      R2,R5
   \   00000014   0x4620             MOV      R0,R4
   \   00000016   0xB002             ADD      SP,SP,#+8
   \   00000018   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000001C   0x.... 0x....      B.W      emProcessTftpPacket
    470            } else if (localPort == TFTP_BOOTLOADER_PORT) {
   \                     ??emberUdpHandler_0: (+1)
   \   00000020   0x2A44             CMP      R2,#+68
   \   00000022   0xD107             BNE.N    ??emberUdpHandler_1
    471              emProcessTftpBootloaderPacket(source, payload, payloadLength);
   \   00000024   0x4629             MOV      R1,R5
   \   00000026   0x4620             MOV      R0,R4
   \   00000028   0xB002             ADD      SP,SP,#+8
   \   0000002A   0xE8BD 0x4070      POP      {R4-R6,LR}
   \   0000002E   0x461A             MOV      R2,R3
   \   00000030   0x.... 0x....      B.W      emProcessTftpBootloaderPacket
    472            } else {
    473              ALIAS(emberUdpHandler)(destination,
    474                                     source,
    475                                     localPort,
    476                                     remotePort,
    477                                     payload,
    478                                     payloadLength);
   \                     ??emberUdpHandler_1: (+1)
   \   00000034   0x9301             STR      R3,[SP, #+4]
   \   00000036   0x9500             STR      R5,[SP, #+0]
   \   00000038   0x460B             MOV      R3,R1
   \   0000003A   0x4621             MOV      R1,R4
   \   0000003C   0x.... 0x....      BL       emberUdpHandlerAlias
    479            }
    480          }
   \   00000040   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    481          

   \                                 In section .text, align 2, keep-with-next
    482          bool emberVerifyBootloadRequest(const TftpBootloaderBootloadRequest *request)
    483          {
    484            // A real implementation should verify a bootload request to ensure it is
    485            // valid.  This sample application simply accepts any request.
    486          
    487            return true;
   \                     emberVerifyBootloadRequest: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x4770             BX       LR               ;; return
    488          }
    489          

   \                                 In section .text, align 4, keep-with-next
    490          void stateEventHandler(void)
    491          {
   \                     stateEventHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    492            emberEventControlSetInactive(stateEventControl);
   \   00000002   0x....             LDR.N    R0,??DataTable65_2
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x7101             STRB     R1,[R0, #+4]
   \   00000008   0xB09C             SUB      SP,SP,#+112
    493          
    494            switch (state) {
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0x1E40             SUBS     R0,R0,#+1
   \   0000000E   0x2807             CMP      R0,#+7
   \   00000010   0xD868             BHI.N    ??stateEventHandler_1
   \   00000012   0xE8DF 0xF000      TBB      [PC, R0]
   \                     ??stateEventHandler_0:
   \   00000016   0x04 0x1C          DC8      0x4,0x1C,0x31,0x4C
   \              0x31 0x4C    
   \   0000001A   0x4F 0x52          DC8      0x4F,0x52,0x5D,0x60
   \              0x5D 0x60    
    495            case RESUME_NETWORK:
    496              resumeNetwork();
   \                     ??stateEventHandler_2: (+1)
   \   0000001E   0xA808             ADD      R0,SP,#+32
   \   00000020   0x2150             MOVS     R1,#+80
   \   00000022   0x.... 0x....      BL       __aeabi_memclr4
   \   00000026   0xA803             ADD      R0,SP,#+12
   \   00000028   0x2114             MOVS     R1,#+20
   \   0000002A   0x.... 0x....      BL       __aeabi_memclr4
   \   0000002E   0xA808             ADD      R0,SP,#+32
   \   00000030   0x.... 0x....      BL       emberGetNetworkParameters
   \   00000034   0x2210             MOVS     R2,#+16
   \   00000036   0xA908             ADD      R1,SP,#+32
   \   00000038   0xA803             ADD      R0,SP,#+12
   \   0000003A   0x.... 0x....      BL       halCommonMemMove
   \   0000003E   0xAA03             ADD      R2,SP,#+12
   \   00000040   0x.... 0x....      ADR.W    R1,?_8
   \   00000044   0x.... 0x....      BL       ?Subroutine8
   \                     ??CrossCallReturnLabel_40: (+1)
   \   00000048   0x.... 0x....      BL       emberResumeNetwork
    497              break;
   \   0000004C   0xE04E             B.N      ??CrossCallReturnLabel_44
    498          #ifndef USE_RANDOM_MASTER_KEY
    499            case SET_SECURITY_PARAMETERS:
    500              setSecurityParameters();
   \                     ??stateEventHandler_3: (+1)
   \   0000004E   0xA800             ADD      R0,SP,#+0
   \   00000050   0x2200             MOVS     R2,#+0
   \   00000052   0x460B             MOV      R3,R1
   \   00000054   0xC00E             STM      R0!,{R1-R3}
   \   00000056   0x.... 0x....      ADR.W    R1,?_12
   \   0000005A   0x.... 0x....      BL       ?Subroutine2
   \                     ??CrossCallReturnLabel_0: (+1)
   \   0000005E   0x....             LDR.N    R4,??DataTable65_3
   \   00000060   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_30: (+1)
   \   00000064   0xB110             CBZ.N    R0,??stateEventHandler_4
   \   00000066   0x4620             MOV      R0,R4
   \   00000068   0x.... 0x....      BL       emberAfPrintZigbeeKey
   \                     ??stateEventHandler_4: (+1)
   \   0000006C   0x9400             STR      R4,[SP, #+0]
   \   0000006E   0x2101             MOVS     R1,#+1
   \   00000070   0xA800             ADD      R0,SP,#+0
   \   00000072   0x.... 0x....      BL       emberSetSecurityParameters
    501              break;
   \   00000076   0xE039             B.N      ??CrossCallReturnLabel_44
    502          #endif
    503            case FORM_NETWORK:
    504              formNetwork();
   \                     ??stateEventHandler_5: (+1)
   \   00000078   0xA808             ADD      R0,SP,#+32
   \   0000007A   0x2150             MOVS     R1,#+80
   \   0000007C   0x.... 0x....      BL       __aeabi_memclr4
   \   00000080   0x.... 0x....      ADR.W    R4,networkId
   \   00000084   0x.... 0x....      ADR.W    R1,?_15
   \   00000088   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_28: (+1)
   \   0000008C   0x2210             MOVS     R2,#+16
   \   0000008E   0x4621             MOV      R1,R4
   \   00000090   0xA808             ADD      R0,SP,#+32
   \   00000092   0x.... 0x....      BL       halCommonMemMove
   \   00000096   0x2002             MOVS     R0,#+2
   \   00000098   0xF88D 0x004B      STRB     R0,[SP, #+75]
   \   0000009C   0x2003             MOVS     R0,#+3
   \   0000009E   0xF88D 0x004C      STRB     R0,[SP, #+76]
   \   000000A2   0x2131             MOVS     R1,#+49
   \   000000A4   0x....             LDR.N    R2,??DataTable65_5  ;; 0x7fff800
   \   000000A6   0xA808             ADD      R0,SP,#+32
   \   000000A8   0x.... 0x....      BL       emberFormNetwork
    505              break;
   \   000000AC   0xE01E             B.N      ??CrossCallReturnLabel_44
   \                     ??stateEventHandler_6: (+1)
   \   000000AE   0x.... 0x....      BL       emberAttachToNetwork
    506            case ATTACH_TO_NETWORK:
    507              attachToNetwork();
    508              break;
   \   000000B2   0xE01B             B.N      ??CrossCallReturnLabel_44
   \                     ??stateEventHandler_7: (+1)
   \   000000B4   0x.... 0x....      BL       emberGetCommissioner
    509            case GET_COMMISSIONER:
    510              getCommissioner();
    511              break;
   \   000000B8   0xE018             B.N      ??CrossCallReturnLabel_44
   \                     ??stateEventHandler_8: (+1)
   \   000000BA   0x.... 0x....      ADR.W    R4,commissionerId
   \   000000BE   0x.... 0x....      ADR.W    R1,?_25
   \   000000C2   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_29: (+1)
   \   000000C6   0x2107             MOVS     R1,#+7
   \   000000C8   0x4620             MOV      R0,R4
   \   000000CA   0x.... 0x....      BL       emberBecomeCommissioner
    512            case BECOME_COMMISSIONER:
    513              becomeCommissioner();
    514              break;
   \   000000CE   0xE00D             B.N      ??CrossCallReturnLabel_44
    515            case ADVERTISE:
    516              advertise();
   \                     ??stateEventHandler_9: (+1)
   \   000000D0   0x.... 0x....      BL       advertise
    517              break;
   \   000000D4   0xE00A             B.N      ??CrossCallReturnLabel_44
    518            case RESET_NETWORK_STATE:
    519              resetNetworkState();
   \                     ??stateEventHandler_10: (+1)
   \   000000D6   0x.... 0x....      ADR.W    R1,?_36
   \   000000DA   0x.... 0x....      BL       ??Subroutine4_0
   \                     ??CrossCallReturnLabel_14: (+1)
   \   000000DE   0x.... 0x....      BL       emberResetNetworkState
    520              break;
   \   000000E2   0xE003             B.N      ??CrossCallReturnLabel_44
    521            default:
    522              assert(false);
   \                     ??stateEventHandler_1: (+1)
   \   000000E4   0xF240 0x210A      MOVW     R1,#+522
   \   000000E8   0x.... 0x....      BL       ?Subroutine9
    523            }
    524          }
   \                     ??CrossCallReturnLabel_44: (+1)
   \   000000EC   0xB01C             ADD      SP,SP,#+112
   \   000000EE   0xBD10             POP      {R4,PC}          ;; return
    525          

   \                                 In section .text, align 2, keep-with-next
    526          static void setNextStateWithDelay(uint8_t nextState, uint32_t delayMs)
    527          {
    528            state = nextState;
   \                     setNextStateWithDelay: (+1)
   \   00000000   0x....             LDR.N    R2,??DataTable65_2
   \   00000002   0x7010             STRB     R0,[R2, #+0]
    529            emberEventControlSetDelayMS(stateEventControl, delayMs);
   \   00000004   0x1D10             ADDS     R0,R2,#+4
   \   00000006   0x.... 0x....      B.W      emEventControlSetDelayMS
    530          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57:
   \   00000000   0x20 0x73          DC8      " s="
   \              0x3D 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_1:
   \   00000000   0x20 0x64          DC8      " d="
   \              0x3D 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable57_2:
   \   00000000   0x20 0x5B          DC8      0x20, 0x5B, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable58:
   \   00000000   0x5D 0x00          DC8      "]",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62:
   \   00000000   0x3A 0x20          DC8      0x3A, 0x20, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable62_1:
   \   00000000   0x25 0x63          DC8      0x25, 0x63, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65:
   \   00000000   0x45 0x52          DC8      "ERR"
   \              0x52 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_1:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_2:
   \   00000000   0x........         DC32     state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_3:
   \   00000000   0x........         DC32     masterKey

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_4:
   \   00000000   0x........         DC32     emTftpLocalTid

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable65_5:
   \   00000000   0x07FFF800         DC32     0x7fff800

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x20 0x73          DC8 " s="
   \              0x3D 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x20 0x64          DC8 " d="
   \              0x3D 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x20 0x5B          DC8 " ["
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x55 0x44          DC8 "UDP RX:"
   \              0x50 0x20    
   \              0x52 0x58    
   \              0x3A 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x20 0x6C          DC8 " l=%u"
   \              0x3D 0x25    
   \              0x75 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x20 0x72          DC8 " r=%u"
   \              0x3D 0x25    
   \              0x75 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     ?_6:
   \   00000000   0x5D 0x00          DC8 "]"

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_22:
   \   00000000   0x3A 0x20          DC8 ": "
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_23:
   \   00000000   0x25 0x63          DC8 "%c"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 1, keep-with-next
   \                     ?_24:
   \   00000000   0x00               DC8 ""

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_29:
   \   00000000   0x45 0x52          DC8 "ERR"
   \              0x52 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x73 0x65          DC8 "server-implementation.c"
   \              0x72 0x76    
   \              0x65 0x72    
   \              0x2D 0x69    
   \              0x6D 0x70    
   \              0x6C 0x65    
   \              0x6D 0x65    
   \              0x6E 0x74    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x2E    
   \              0x63 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x52 0x65          DC8 "Resuming operation on network \"%s\""
   \              0x73 0x75    
   \              0x6D 0x69    
   \              0x6E 0x67    
   \              0x20 0x6F    
   \              0x70 0x65    
   \              0x72 0x61    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x6F    
   \              0x6E 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x00         
   \   00000023   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x52 0x65          DC8 "Resumed operation on network \"%s\""
   \              0x73 0x75    
   \              0x6D 0x65    
   \              0x64 0x20    
   \              0x6F 0x70    
   \              0x65 0x72    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x6F 0x6E    
   \              0x20 0x6E    
   \              0x65 0x74    
   \              0x77 0x6F    
   \              0x72 0x6B    
   \              0x20 0x22    
   \              0x25 0x73    
   \              0x22 0x00    
   \   00000022   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x45 0x52          DC8 "ERR: No connection to network"
   \              0x52 0x3A    
   \              0x20 0x4E    
   \              0x6F 0x20    
   \              0x63 0x6F    
   \              0x6E 0x6E    
   \              0x65 0x63    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x45 0x52          DC8 "ERR: Resuming failed: 0x%x"
   \              0x52 0x3A    
   \              0x20 0x52    
   \              0x65 0x73    
   \              0x75 0x6D    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x66 0x61    
   \              0x69 0x6C    
   \              0x65 0x64    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x53 0x65          DC8 "Setting master key to "
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6D 0x61    
   \              0x73 0x74    
   \              0x65 0x72    
   \              0x20 0x6B    
   \              0x65 0x79    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x45 0x52          DC8 "ERR: Setting master key to "
   \              0x52 0x3A    
   \              0x20 0x53    
   \              0x65 0x74    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x20 0x6D    
   \              0x61 0x73    
   \              0x74 0x65    
   \              0x72 0x20    
   \              0x6B 0x65    
   \              0x79 0x20    
   \              0x74 0x6F    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_14:
   \   00000000   0x20 0x66          DC8 " failed:  0x%x"
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A    
   \              0x20 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_15:
   \   00000000   0x46 0x6F          DC8 "Forming network \"%s\""
   \              0x72 0x6D    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_16:
   \   00000000   0x46 0x6F          DC8 "Formed network \"%s\""
   \              0x72 0x6D    
   \              0x65 0x64    
   \              0x20 0x6E    
   \              0x65 0x74    
   \              0x77 0x6F    
   \              0x72 0x6B    
   \              0x20 0x22    
   \              0x25 0x73    
   \              0x22 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_17:
   \   00000000   0x45 0x52          DC8 "ERR: Forming failed: 0x%x"
   \              0x52 0x3A    
   \              0x20 0x46    
   \              0x6F 0x72    
   \              0x6D 0x69    
   \              0x6E 0x67    
   \              0x20 0x66    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x00    
   \   0000001A   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_18:
   \   00000000   0x45 0x52          DC8 "ERR: Lost connection to network"
   \              0x52 0x3A    
   \              0x20 0x4C    
   \              0x6F 0x73    
   \              0x74 0x20    
   \              0x63 0x6F    
   \              0x6E 0x6E    
   \              0x65 0x63    
   \              0x74 0x69    
   \              0x6F 0x6E    
   \              0x20 0x74    
   \              0x6F 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_19:
   \   00000000   0x52 0x65          DC8 "Rejoining network \"%s\""
   \              0x6A 0x6F    
   \              0x69 0x6E    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x00         
   \   00000017   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_20:
   \   00000000   0x45 0x52          DC8 "ERR: Unable to rejoin: 0x%x"
   \              0x52 0x3A    
   \              0x20 0x55    
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x65 0x20    
   \              0x74 0x6F    
   \              0x20 0x72    
   \              0x65 0x6A    
   \              0x6F 0x69    
   \              0x6E 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_21:
   \   00000000   0x45 0x52          DC8 "ERR: Network already has a commissioner"
   \              0x52 0x3A    
   \              0x20 0x4E    
   \              0x65 0x74    
   \              0x77 0x6F    
   \              0x72 0x6B    
   \              0x20 0x61    
   \              0x6C 0x72    
   \              0x65 0x61    
   \              0x64 0x79    
   \              0x20 0x68    
   \              0x61 0x73    
   \              0x20 0x61    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x6D 0x69    
   \              0x73 0x73    
   \              0x69 0x6F    
   \              0x6E 0x65    
   \              0x72 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_25:
   \   00000000   0x42 0x65          DC8 "Becoming commissioner \"%s\""
   \              0x63 0x6F    
   \              0x6D 0x69    
   \              0x6E 0x67    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x6D 0x69    
   \              0x73 0x73    
   \              0x69 0x6F    
   \              0x6E 0x65    
   \              0x72 0x20    
   \              0x22 0x25    
   \              0x73 0x22    
   \              0x00         
   \   0000001B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_26:
   \   00000000   0x42 0x65          DC8 "Became commissioner"
   \              0x63 0x61    
   \              0x6D 0x65    
   \              0x20 0x63    
   \              0x6F 0x6D    
   \              0x6D 0x69    
   \              0x73 0x73    
   \              0x69 0x6F    
   \              0x6E 0x65    
   \              0x72 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_27:
   \   00000000   0x45 0x52          DC8 "ERR: Becoming commissioner failed: 0x%x"
   \              0x52 0x3A    
   \              0x20 0x42    
   \              0x65 0x63    
   \              0x6F 0x6D    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x63 0x6F    
   \              0x6D 0x6D    
   \              0x69 0x73    
   \              0x73 0x69    
   \              0x6F 0x6E    
   \              0x65 0x72    
   \              0x20 0x66    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_28:
   \   00000000   0x25 0x70          DC8 "%p: %p"
   \              0x3A 0x20    
   \              0x25 0x70    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_30:
   \   00000000   0x69 0x6E          DC8 "invalid join key"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x6A 0x6F    
   \              0x69 0x6E    
   \              0x20 0x6B    
   \              0x65 0x79    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_31:
   \   00000000   0x53 0x65          DC8 "Sent steering data"
   \              0x6E 0x74    
   \              0x20 0x73    
   \              0x74 0x65    
   \              0x65 0x72    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x64 0x61    
   \              0x74 0x61    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_32:
   \   00000000   0x45 0x52          DC8 "ERR: Sending steering data failed: 0x%x"
   \              0x52 0x3A    
   \              0x20 0x53    
   \              0x65 0x6E    
   \              0x64 0x69    
   \              0x6E 0x67    
   \              0x20 0x73    
   \              0x74 0x65    
   \              0x65 0x72    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x64 0x61    
   \              0x74 0x61    
   \              0x20 0x66    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_33:
   \   00000000   0x41 0x64          DC8 "Advertising to "
   \              0x76 0x65    
   \              0x72 0x74    
   \              0x69 0x73    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x74 0x6F    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_34:
   \   00000000   0x45 0x52          DC8 "ERR: Advertising failed: 0x%x"
   \              0x52 0x3A    
   \              0x20 0x41    
   \              0x64 0x76    
   \              0x65 0x72    
   \              0x74 0x69    
   \              0x73 0x69    
   \              0x6E 0x67    
   \              0x20 0x66    
   \              0x61 0x69    
   \              0x6C 0x65    
   \              0x64 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x00    
   \   0000001E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_35:
   \   00000000   0x52 0x65          DC8 "Received %ld from client at "
   \              0x63 0x65    
   \              0x69 0x76    
   \              0x65 0x64    
   \              0x20 0x25    
   \              0x6C 0x64    
   \              0x20 0x66    
   \              0x72 0x6F    
   \              0x6D 0x20    
   \              0x63 0x6C    
   \              0x69 0x65    
   \              0x6E 0x74    
   \              0x20 0x61    
   \              0x74 0x20    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_36:
   \   00000000   0x52 0x65          DC8 "Resetting network state"
   \              0x73 0x65    
   \              0x74 0x74    
   \              0x69 0x6E    
   \              0x67 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_37:
   \   00000000   0x52 0x65          DC8 "Reset network state"
   \              0x73 0x65    
   \              0x74 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x65 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   advertise
        24   -> emberAfPrint
        24   -> emberAfPrintEnabled
        24   -> emberAfPrintIpv6Address
        24   -> emberAfPrintln
        24   -> emberCoapSendUri
        24   -> halInternalAssertFailed
         0   -> setNextStateWithDelay
       0   advertiseCommand
       8   emberAfInitCallback
         8   -> emberNetworkStatus
         0   -> halInternalAssertFailed
         0   -> setNextStateWithDelay
     112   emberAttachToNetworkReturn
       112   -> __aeabi_memclr4
       112   -> emberAfPrintln
       112   -> emberGetNetworkParameters
       112   -> halCommonMemMove
       112   -> halInternalAssertFailed
       112   -> setNextStateWithDelay
       8   emberBecomeCommissionerReturn
         8   -> emberAfPrintln
         8   -> halInternalAssertFailed
         0   -> setNextStateWithDelay
      32   emberCoapMessageHandler
        32   -> __aeabi_memclr4
        32   -> emFetchInt32u
        32   -> emberAfPrint
        32   -> emberAfPrintEnabled
        32   -> emberAfPrintIpv6Address
        32   -> emberAfPrintln
        32   -> emberCoapDecodeUri
        32   -> emberCoapIsRequest
        32   -> emberCoapRespond
        32   -> strncmp
      24   emberCommissionerStatusHandler
        24   -> emberAfPrint
        24   -> emberAfPrintln
         0   -> setNextStateWithDelay
     112   emberFormNetworkReturn
       112   -> __aeabi_memclr4
       112   -> emberAfPrintln
       112   -> emberGetNetworkParameters
       112   -> halCommonMemMove
       112   -> halInternalAssertFailed
       112   -> setNextStateWithDelay
       8   emberJoinNetworkReturn
         8   -> emberAfPrintln
         8   -> emberNetworkStatus
         0   -> setNextStateWithDelay
       8   emberResetNetworkStateReturn
         8   -> emberAfPrintln
         0   -> setNextStateWithDelay
     112   emberResumeNetworkReturn
       112   -> __aeabi_memclr4
       112   -> emberAfPrintln
       112   -> emberGetNetworkParameters
       112   -> emberNetworkStatus
       112   -> halCommonMemMove
       112   -> halInternalAssertFailed
       112   -> setNextStateWithDelay
       0   emberSendSteeringDataReturn
         0   -> emberAfPrintln
       8   emberSetSecurityParametersReturn
         8   -> emberAfPrint
         8   -> emberAfPrintEnabled
         8   -> emberAfPrintZigbeeKey
         8   -> emberAfPrintln
         8   -> halInternalAssertFailed
         0   -> setNextStateWithDelay
      24   emberUdpHandler
         0   -> emProcessTftpBootloaderPacket
         0   -> emProcessTftpPacket
        24   -> emberUdpHandlerAlias
      24   emberUdpHandlerAlias
        24   -> emberAfPrint
        24   -> emberAfPrintBuffer
        24   -> emberAfPrintEnabled
        24   -> emberAfPrintIpv6Address
         0   -> emberAfPrintln
       0   emberVerifyBootloadRequest
      24   expectCommand
        24   -> emberAddSteeringEui64
        24   -> emberAfPrintln
        24   -> emberCommandArgumentCount
        24   -> emberGetExtendedPanIdArgument
        24   -> emberSendSteeringData
        24   -> emberSetJoinKey
        24   -> emberSetJoiningMode
        24   -> emberStringCommandArgument
       0   setNextStateWithDelay
         0   -> emEventControlSetDelayMS
     120   stateEventHandler
       120   -> __aeabi_memclr4
       120   -> advertise
       120   -> emberAfPrint
       120   -> emberAfPrintEnabled
       120   -> emberAfPrintZigbeeKey
       120   -> emberAfPrintln
       120   -> emberAttachToNetwork
       120   -> emberBecomeCommissioner
       120   -> emberFormNetwork
       120   -> emberGetCommissioner
       120   -> emberGetNetworkParameters
       120   -> emberResetNetworkState
       120   -> emberResumeNetwork
       120   -> emberSetSecurityParameters
       120   -> halCommonMemMove
       120   -> halInternalAssertFailed


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable57
       4  ??DataTable57_1
       4  ??DataTable57_2
       4  ??DataTable58
       4  ??DataTable62
       4  ??DataTable62_1
       4  ??DataTable65
       4  ??DataTable65_1
       4  ??DataTable65_2
       4  ??DataTable65_3
       4  ??DataTable65_4
       4  ??DataTable65_5
       6  ?Subroutine0
       6  ?Subroutine1
      10  ?Subroutine10
       8  ?Subroutine11
       8  ?Subroutine12
       6  ?Subroutine2
      10  ?Subroutine3
       8  ?Subroutine4
       8  ?Subroutine5
       6  ?Subroutine6
       6  ?Subroutine7
       6  ?Subroutine8
       8  ?Subroutine9
       8  ?_0
       4  ?_1
      32  ?_10
      28  ?_11
      24  ?_12
      28  ?_13
      16  ?_14
      24  ?_15
      20  ?_16
      28  ?_17
      32  ?_18
      24  ?_19
       4  ?_2
      28  ?_20
      40  ?_21
       4  ?_22
       4  ?_23
       1  ?_24
      28  ?_25
      20  ?_26
      40  ?_27
       8  ?_28
       4  ?_29
       8  ?_3
      20  ?_30
      20  ?_31
      40  ?_32
      16  ?_33
      32  ?_34
      32  ?_35
      24  ?_36
      20  ?_37
      80  ?_38
      20  ?_39
       8  ?_4
      80  ?_40
      20  ?_41
      12  ?_42
      80  ?_43
      80  ?_44
      20  ?_45
      80  ?_46
      20  ?_47
      16  ?_48
       4  ?_5
       2  ?_6
      24  ?_7
      36  ?_8
      36  ?_9
      94  advertise
      14  advertiseCommand
      16  allMeshNodes
      16  clientReportUri
       8  commissionerId
      72  emberAfInitCallback
      72  emberAttachToNetworkReturn
      50  emberBecomeCommissionerReturn
     136  emberCoapMessageHandler
      82  emberCommissionerStatusHandler
      76  emberFormNetworkReturn
      52  emberJoinNetworkReturn
      24  emberResetNetworkStateReturn
     106  emberResumeNetworkReturn
      20  emberSendSteeringDataReturn
      60  emberSetSecurityParametersReturn
      66  emberUdpHandler
      98  emberUdpHandlerAlias
       4  emberVerifyBootloadRequest
     110  expectCommand
      16  masterKey
      16  networkId
      20  serverAdvertiseUri
      10  setNextStateWithDelay
      12  state
          stateEventControl
     240  stateEventHandler

 
    12 bytes in section .bss
    16 bytes in section .data
   535 bytes in section .rodata
 2 350 bytes in section .text
 
 2 350 bytes of CODE  memory
   535 bytes of CONST memory
    28 bytes of DATA  memory

Errors: none
Warnings: none
