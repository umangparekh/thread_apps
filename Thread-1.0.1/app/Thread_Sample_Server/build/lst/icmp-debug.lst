###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.1.7746/W32 for ARM        28/Sep/2015  13:29:28
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\Thread-1.0.1\app\thread\plugin\icmp-debug\icmp-debug.c
#    Command line =  
#        C:\SiliconLabs\Thread-1.0.1\app\thread\plugin\icmp-debug\icmp-debug.c
#        -D APP_BTL -D CORTEXM3 -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM3588 -D
#        PHY_EM3XX -D "BOARD_HEADER=\"thread-board.h\"" -D
#        "CONFIGURATION_HEADER=\"thread-configuration.h\"" -D
#        "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D
#        "__SOURCEFILE__=\"icmp-debug.c\"" -D BOARD_DEV0680ETM -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        EMBER_STACK_IP -D EMBER_RIP_STACK -D HAVE_TLS_JPAKE -D
#        DEBUG_LEVEL=FULL_DEBUG -D
#        "APPLICATION_TOKEN_HEADER=\"thread-token.h\"" -lC
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\build\lst\
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\build\obj\
#        --debug --endian=little --cpu=Cortex-M3 --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\Thread-1.0.1\app\thread\plugin\icmp-debug\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\..\..\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\..\..\app\util\
#        -I C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\..\..\stack\
#        -I C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\..\..\hal\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\..\..\hal\..\
#        -Ohz --use_c++_inline
#    List file    =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\build\lst\icmp-debug.lst
#    Object file  =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\build\obj\icmp-debug.o
#
###############################################################################

C:\SiliconLabs\Thread-1.0.1\app\thread\plugin\icmp-debug\icmp-debug.c
      1          // Copyright 2015 Silicon Laboratories, Inc.
      2          
      3          #include PLATFORM_HEADER
      4          #include CONFIGURATION_HEADER
      5          #include EMBER_AF_API_STACK
      6          #include EMBER_AF_API_HAL
      7          #ifdef EMBER_AF_API_DEBUG_PRINT
      8            #include EMBER_AF_API_DEBUG_PRINT
      9          #endif
     10          
     11          #ifndef ALIAS
     12            #define ALIAS(x) x
     13          #endif
     14          

   \                                 In section .text, align 2, keep-with-next
     15          void ALIAS(emberIncomingIcmpHandler)(Ipv6Header *ipHeader)
     16          {
   \                     emberIncomingIcmpHandler: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x4604             MOV      R4,R0
     17            emberAfCorePrint("ICMP RX:");
   \   00000004   0x.... 0x....      ADR.W    R1,?_0
   \   00000008   0x.... 0x....      BL       ?Subroutine0
     18          
     19            emberAfCorePrint(" s=");
   \                     ??CrossCallReturnLabel_4: (+1)
   \   0000000C   0x....             ADR.N    R1,??DataTable10  ;; " s="
   \   0000000E   0x.... 0x....      BL       ?Subroutine0
     20            emberAfCoreDebugExec(
     21              emberAfPrintIpv6Address((const EmberIpv6Address *)ipHeader->source)
     22            );
   \                     ??CrossCallReturnLabel_3: (+1)
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0x.... 0x....      BL       emberAfPrintEnabled
   \   00000018   0xB118             CBZ.N    R0,??emberIncomingIcmpHandler_0
   \   0000001A   0xF104 0x000B      ADD      R0,R4,#+11
   \   0000001E   0x.... 0x....      BL       emberAfPrintIpv6Address
     23          
     24            emberAfCorePrint(" d=");
   \                     ??emberIncomingIcmpHandler_0: (+1)
   \   00000022   0x....             ADR.N    R1,??DataTable10_1  ;; " d="
   \   00000024   0x.... 0x....      BL       ?Subroutine0
     25            emberAfCoreDebugExec(
     26              emberAfPrintIpv6Address((const EmberIpv6Address *)ipHeader->destination)
     27            );
   \                     ??CrossCallReturnLabel_2: (+1)
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0x.... 0x....      BL       emberAfPrintEnabled
   \   0000002E   0xB118             CBZ.N    R0,??emberIncomingIcmpHandler_1
   \   00000030   0xF104 0x001B      ADD      R0,R4,#+27
   \   00000034   0x.... 0x....      BL       emberAfPrintIpv6Address
     28          
     29            emberAfCorePrint(" ");
   \                     ??emberIncomingIcmpHandler_1: (+1)
   \   00000038   0x....             ADR.N    R1,??DataTable10_2  ;; " "
   \   0000003A   0x.... 0x....      BL       ?Subroutine0
     30            switch(ipHeader->transportProtocol) {
   \                     ??CrossCallReturnLabel_1: (+1)
   \   0000003E   0xF894 0x0030      LDRB     R0,[R4, #+48]
   \   00000042   0x2811             CMP      R0,#+17
   \   00000044   0xF104 0x0530      ADD      R5,R4,#+48
   \   00000048   0xD002             BEQ.N    ??emberIncomingIcmpHandler_2
   \   0000004A   0x283A             CMP      R0,#+58
   \   0000004C   0xD005             BEQ.N    ??emberIncomingIcmpHandler_3
   \   0000004E   0xE014             B.N      ??emberIncomingIcmpHandler_4
     31            case IPV6_NEXT_HEADER_UDP:
     32              emberAfCorePrint("UDP sp=%u dp=%u",
     33                               ipHeader->sourcePort,
     34                               ipHeader->destinationPort);
   \                     ??emberIncomingIcmpHandler_2: (+1)
   \   00000050   0x8AAB             LDRH     R3,[R5, #+20]
   \   00000052   0x8A6A             LDRH     R2,[R5, #+18]
   \   00000054   0x.... 0x....      ADR.W    R1,?_4
   \   00000058   0xE00C             B.N      ??emberIncomingIcmpHandler_5
   \                     ??emberIncomingIcmpHandler_3: (+1)
   \   0000005A   0x7DAA             LDRB     R2,[R5, #+22]
   \   0000005C   0x2A81             CMP      R2,#+129
   \   0000005E   0xBF08             IT       EQ 
   \   00000060   0x.... 0x....      ADREQ.W  R1,?_5
   \   00000064   0xD005             BEQ.N    ??emberIncomingIcmpHandler_6
   \   00000066   0x2A80             CMP      R2,#+128
   \   00000068   0xBF0C             ITE      EQ 
   \   0000006A   0x.... 0x....      ADREQ.W  R1,?_6
   \   0000006E   0x.... 0x....      ADRNE.W  R1,?_7
   \                     ??emberIncomingIcmpHandler_6: (+1)
   \   00000072   0x7DEB             LDRB     R3,[R5, #+23]
   \                     ??emberIncomingIcmpHandler_5: (+1)
   \   00000074   0x2001             MOVS     R0,#+1
     35              break;
     36            case IPV6_NEXT_HEADER_ICMPV6:
     37              emberAfCorePrint((ipHeader->icmpType == ICMP_ECHO_REPLY
     38                                ? "ICMP ECHO_REPLY"
     39                                : (ipHeader->icmpType == ICMP_ECHO_REQUEST
     40                                   ? "ICMP ECHO_REQUEST"
     41                                   : "ICMP t=%d c=%d")),
     42                               ipHeader->icmpType,
     43                               ipHeader->icmpCode);
   \   00000076   0x.... 0x....      BL       emberAfPrint
     44              break;
     45            }
     46          
     47            emberAfCorePrint(" [");
   \                     ??emberIncomingIcmpHandler_4: (+1)
   \   0000007A   0x....             ADR.N    R1,??DataTable10_3  ;; 0x20, 0x5B, 0x00, 0x00
   \   0000007C   0x.... 0x....      BL       ?Subroutine0
     48            emberAfCorePrintBuffer(ipHeader->transportPayload,
     49                                   ipHeader->transportPayloadLength,
     50                                   false);
   \                     ??CrossCallReturnLabel_0: (+1)
   \   00000080   0x8A2A             LDRH     R2,[R5, #+16]
   \   00000082   0x68E9             LDR      R1,[R5, #+12]
   \   00000084   0x2300             MOVS     R3,#+0
   \   00000086   0x2001             MOVS     R0,#+1
   \   00000088   0x.... 0x....      BL       emberAfPrintBuffer
     51            emberAfCorePrintln("]");
   \   0000008C   0xE8BD 0x4034      POP      {R2,R4,R5,LR}
   \   00000090   0x....             ADR.N    R1,??DataTable10_4  ;; "]"
   \   00000092   0x2001             MOVS     R0,#+1
   \   00000094   0x.... 0x....      B.W      emberAfPrintln
     52          }

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x2001             MOVS     R0,#+1
   \   00000002   0x.... 0x....      B.W      emberAfPrint

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x20 0x73          DC8      " s="
   \              0x3D 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_1:
   \   00000000   0x20 0x64          DC8      " d="
   \              0x3D 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_2:
   \   00000000   0x20 0x00          DC8      " ",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_3:
   \   00000000   0x20 0x5B          DC8      0x20, 0x5B, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10_4:
   \   00000000   0x5D 0x00          DC8      "]",0x0,0x0
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x20 0x73          DC8 " s="
   \              0x3D 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x20 0x64          DC8 " d="
   \              0x3D 0x00    

   \                                 In section .rodata, align 2, keep-with-next
   \                     ?_3:
   \   00000000   0x20 0x00          DC8 " "

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x20 0x5B          DC8 " ["
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x49 0x43          DC8 "ICMP RX:"
   \              0x4D 0x50    
   \              0x20 0x52    
   \              0x58 0x3A    
   \              0x00         
   \   00000009   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x55 0x44          DC8 "UDP sp=%u dp=%u"
   \              0x50 0x20    
   \              0x73 0x70    
   \              0x3D 0x25    
   \              0x75 0x20    
   \              0x64 0x70    
   \              0x3D 0x25    
   \              0x75 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x49 0x43          DC8 "ICMP ECHO_REPLY"
   \              0x4D 0x50    
   \              0x20 0x45    
   \              0x43 0x48    
   \              0x4F 0x5F    
   \              0x52 0x45    
   \              0x50 0x4C    
   \              0x59 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x49 0x43          DC8 "ICMP ECHO_REQUEST"
   \              0x4D 0x50    
   \              0x20 0x45    
   \              0x43 0x48    
   \              0x4F 0x5F    
   \              0x52 0x45    
   \              0x51 0x55    
   \              0x45 0x53    
   \              0x54 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x49 0x43          DC8 "ICMP t=%d c=%d"
   \              0x4D 0x50    
   \              0x20 0x74    
   \              0x3D 0x25    
   \              0x64 0x20    
   \              0x63 0x3D    
   \              0x25 0x64    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 2, keep-with-next
   \                     ?_9:
   \   00000000   0x5D 0x00          DC8 "]"

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   emberIncomingIcmpHandler
        16   -> emberAfPrint
        16   -> emberAfPrintBuffer
        16   -> emberAfPrintEnabled
        16   -> emberAfPrintIpv6Address
         0   -> emberAfPrintln


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable10
       4  ??DataTable10_1
       4  ??DataTable10_2
       4  ??DataTable10_3
       4  ??DataTable10_4
       6  ?Subroutine0
      12  ?_0
       4  ?_1
       4  ?_2
       2  ?_3
      16  ?_4
      16  ?_5
      20  ?_6
      16  ?_7
       4  ?_8
       2  ?_9
     152  emberIncomingIcmpHandler

 
  16 bytes in section .rodata
 258 bytes in section .text
 
 258 bytes of CODE  memory
  16 bytes of CONST memory

Errors: none
Warnings: none
