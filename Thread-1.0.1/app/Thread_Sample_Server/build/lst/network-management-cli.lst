###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.1.7746/W32 for ARM        28/Sep/2015  13:29:30
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\SiliconLabs\Thread-1.0.1\app\thread\plugin\network-management-cli\network-management-cli.c
#    Command line =  
#        C:\SiliconLabs\Thread-1.0.1\app\thread\plugin\network-management-cli\network-management-cli.c
#        -D APP_BTL -D CORTEXM3 -D CORTEXM3_EMBER_MICRO -D CORTEXM3_EM3588 -D
#        PHY_EM3XX -D "BOARD_HEADER=\"thread-board.h\"" -D
#        "CONFIGURATION_HEADER=\"thread-configuration.h\"" -D
#        "PLATFORM_HEADER=\"hal/micro/cortexm3/compiler/iar.h\"" -D
#        "__SOURCEFILE__=\"network-management-cli.c\"" -D BOARD_DEV0680ETM -D
#        "EMBER_AF_API_EMBER_TYPES=\"stack/include/ember-types.h\"" -D
#        EMBER_STACK_IP -D EMBER_RIP_STACK -D HAVE_TLS_JPAKE -D
#        DEBUG_LEVEL=FULL_DEBUG -D
#        "APPLICATION_TOKEN_HEADER=\"thread-token.h\"" -lC
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\build\lst\
#        --diag_suppress Pa050 -o
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\build\obj\
#        --debug --endian=little --cpu=Cortex-M3 --no_path_in_file_macros
#        --separate_cluster_for_initialized_variables -e --fpu=None
#        --dlib_config "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.0\arm\INC\c\DLib_Config_Normal.h" -I
#        C:\SiliconLabs\Thread-1.0.1\app\thread\plugin\network-management-cli\
#        -I C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\..\..\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\..\..\app\util\
#        -I C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\..\..\stack\
#        -I C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\..\..\hal\ -I
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\..\..\hal\..\
#        -Ohz --use_c++_inline
#    List file    =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\build\lst\network-management-cli.lst
#    Object file  =  
#        C:\SiliconLabs\Thread-1.0.1\app\Thread_Sample_Server\build\obj\network-management-cli.o
#
###############################################################################

C:\SiliconLabs\Thread-1.0.1\app\thread\plugin\network-management-cli\network-management-cli.c
      1          // Copyright 2015 Silicon Laboratories, Inc.
      2          
      3          #include PLATFORM_HEADER
      4          #include CONFIGURATION_HEADER
      5          #include EMBER_AF_API_STACK
      6          #include EMBER_AF_API_HAL
      7          #include EMBER_AF_API_COMMAND_INTERPRETER2
      8          #ifdef EMBER_AF_API_DEBUG_PRINT
      9            #include EMBER_AF_API_DEBUG_PRINT
     10          #endif
     11          
     12          // info

   \                                 In section .text, align 2, keep-with-next
     13          void networkManagementInfoCommand(void)
     14          {
   \                     networkManagementInfoCommand: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB09E             SUB      SP,SP,#+120
     15            EmberNetworkStatus status;
     16          
     17            status = emberNetworkStatus();
   \   00000004   0x.... 0x....      BL       emberNetworkStatus
   \   00000008   0x4604             MOV      R4,R0
     18            emberAfAppPrintln("network status: 0x%x", status);
   \   0000000A   0x4622             MOV      R2,R4
   \   0000000C   0x.... 0x....      ADR.W    R1,?_0
   \   00000010   0x.... 0x....      BL       ?Subroutine3
     19          
     20            emberAfAppPrint("eui64: ");
   \                     ??CrossCallReturnLabel_11: (+1)
   \   00000014   0x.... 0x....      ADR.W    R1,?_1
   \   00000018   0x2002             MOVS     R0,#+2
   \   0000001A   0x.... 0x....      BL       emberAfPrint
     21            emberAfAppDebugExec(emberAfPrintBigEndianEui64(emberEui64()));
   \   0000001E   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_15: (+1)
   \   00000022   0xB118             CBZ.N    R0,??networkManagementInfoCommand_0
   \   00000024   0x.... 0x....      BL       emberEui64
   \   00000028   0x.... 0x....      BL       emberAfPrintBigEndianEui64
     22            emberAfAppPrintln("");
   \                     ??networkManagementInfoCommand_0: (+1)
   \   0000002C   0x....             ADR.N    R5,??DataTable29  ;; ""
   \   0000002E   0x.... 0x....      BL       ?Subroutine1
     23          
     24            if (status != EMBER_NO_NETWORK) {
   \                     ??CrossCallReturnLabel_3: (+1)
   \   00000032   0x2C00             CMP      R4,#+0
   \   00000034   0xD05E             BEQ.N    ??networkManagementInfoCommand_1
     25              EmberNetworkParameters parameters = {{0}};
   \   00000036   0xA809             ADD      R0,SP,#+36
   \   00000038   0x2150             MOVS     R1,#+80
   \   0000003A   0x.... 0x....      BL       __aeabi_memclr4
     26              uint8_t networkId[EMBER_NETWORK_ID_SIZE + 1] = {0};
   \   0000003E   0xA804             ADD      R0,SP,#+16
   \   00000040   0x2114             MOVS     R1,#+20
   \   00000042   0x.... 0x....      BL       __aeabi_memclr4
     27              uint8_t i;
     28          
     29              emberGetNetworkParameters(&parameters);
   \   00000046   0xA809             ADD      R0,SP,#+36
   \   00000048   0x.... 0x....      BL       emberGetNetworkParameters
     30          
     31              MEMCOPY(networkId, parameters.networkId, EMBER_NETWORK_ID_SIZE);
   \   0000004C   0x2210             MOVS     R2,#+16
   \   0000004E   0xA909             ADD      R1,SP,#+36
   \   00000050   0xA804             ADD      R0,SP,#+16
   \   00000052   0x.... 0x....      BL       halCommonMemMove
     32              emberAfAppPrintln("network id: %s", networkId);
   \   00000056   0xAA04             ADD      R2,SP,#+16
   \   00000058   0x.... 0x....      ADR.W    R1,?_3
   \   0000005C   0x2002             MOVS     R0,#+2
   \   0000005E   0x.... 0x....      BL       emberAfPrintln
     33              emberAfAppPrintln("node type: 0x%x", parameters.nodeType);
   \   00000062   0xAC13             ADD      R4,SP,#+76
   \   00000064   0x.... 0x....      ADR.W    R1,?_4
   \   00000068   0x78E2             LDRB     R2,[R4, #+3]
   \   0000006A   0x.... 0x....      BL       ?Subroutine3
     34          
     35              emberAfAppPrint("extended pan id: ");
   \                     ??CrossCallReturnLabel_10: (+1)
   \   0000006E   0x.... 0x....      ADR.W    R1,?_5
   \   00000072   0x2002             MOVS     R0,#+2
   \   00000074   0x.... 0x....      BL       emberAfPrint
     36              emberAfAppDebugExec(emberAfPrintExtendedPanId(parameters.extendedPanId));
   \   00000078   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_14: (+1)
   \   0000007C   0xB110             CBZ.N    R0,??networkManagementInfoCommand_2
   \   0000007E   0xA811             ADD      R0,SP,#+68
   \   00000080   0x.... 0x....      BL       emberAfPrintExtendedPanId
     37              emberAfAppPrintln("");
   \                     ??networkManagementInfoCommand_2: (+1)
   \   00000084   0x.... 0x....      BL       ?Subroutine1
     38          
     39              emberAfAppPrintln("pan id: 0x%2x", parameters.panId);
   \                     ??CrossCallReturnLabel_2: (+1)
   \   00000088   0xF8BD 0x204C      LDRH     R2,[SP, #+76]
   \   0000008C   0x.... 0x....      ADR.W    R1,?_6
   \   00000090   0x.... 0x....      BL       ?Subroutine3
     40              emberAfAppPrintln("channel: %u", parameters.channel);
   \                     ??CrossCallReturnLabel_9: (+1)
   \   00000094   0x78A2             LDRB     R2,[R4, #+2]
   \   00000096   0x.... 0x....      ADR.W    R1,?_7
   \   0000009A   0x.... 0x....      BL       ?Subroutine3
     41              emberAfAppPrintln("radio tx power: %d dBm ", parameters.radioTxPower);
   \                     ??CrossCallReturnLabel_8: (+1)
   \   0000009E   0xF994 0x2004      LDRSB    R2,[R4, #+4]
   \   000000A2   0x.... 0x....      ADR.W    R1,?_8
   \   000000A6   0x.... 0x....      BL       ?Subroutine3
     42              emberAfAppPrint("ula prefix: ");
   \                     ??CrossCallReturnLabel_7: (+1)
   \   000000AA   0x.... 0x....      ADR.W    R1,?_9
   \   000000AE   0x2002             MOVS     R0,#+2
   \   000000B0   0x.... 0x....      BL       emberAfPrint
     43              emberAfAppDebugExec(emberAfPrintIpv6Prefix(&parameters.ulaPrefix));
   \   000000B4   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_13: (+1)
   \   000000B8   0xB110             CBZ.N    R0,??networkManagementInfoCommand_3
   \   000000BA   0xA80D             ADD      R0,SP,#+52
   \   000000BC   0x.... 0x....      BL       emberAfPrintIpv6Prefix
     44              emberAfAppPrintln("");
   \                     ??networkManagementInfoCommand_3: (+1)
   \   000000C0   0x.... 0x....      BL       ?Subroutine1
     45          
     46              for (i = 0; i < EMBER_MAX_IPV6_ADDRESS_COUNT; i++) {
   \                     ??CrossCallReturnLabel_1: (+1)
   \   000000C4   0x2400             MOVS     R4,#+0
   \   000000C6   0x.... 0x....      ADR.W    R6,?_10
     47                EmberIpv6Address address;
     48                if (emberGetLocalIpAddress(i, &address)) {
   \                     ??networkManagementInfoCommand_4: (+1)
   \   000000CA   0xA900             ADD      R1,SP,#+0
   \   000000CC   0x4620             MOV      R0,R4
   \   000000CE   0x.... 0x....      BL       emberGetLocalIpAddress
   \   000000D2   0xB160             CBZ.N    R0,??CrossCallReturnLabel_0
     49                  emberAfAppPrint("local ip %u: ", i);
   \   000000D4   0x4622             MOV      R2,R4
   \   000000D6   0x4631             MOV      R1,R6
   \   000000D8   0x2002             MOVS     R0,#+2
   \   000000DA   0x.... 0x....      BL       emberAfPrint
     50                  emberAfAppDebugExec(emberAfPrintIpv6Address(&address));
   \   000000DE   0x.... 0x....      BL       ?Subroutine4
   \                     ??CrossCallReturnLabel_12: (+1)
   \   000000E2   0xB110             CBZ.N    R0,??networkManagementInfoCommand_5
   \   000000E4   0xA800             ADD      R0,SP,#+0
   \   000000E6   0x.... 0x....      BL       emberAfPrintIpv6Address
     51                  emberAfAppPrintln("");
   \                     ??networkManagementInfoCommand_5: (+1)
   \   000000EA   0x.... 0x....      BL       ?Subroutine1
     52                }
     53              }
   \                     ??CrossCallReturnLabel_0: (+1)
   \   000000EE   0x1C64             ADDS     R4,R4,#+1
   \   000000F0   0x2C0A             CMP      R4,#+10
   \   000000F2   0xDBEA             BLT.N    ??networkManagementInfoCommand_4
     54            }
     55          }
   \                     ??networkManagementInfoCommand_1: (+1)
   \   000000F4   0xB01E             ADD      SP,SP,#+120
   \   000000F6   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine4: (+1)
   \   00000000   0x2002             MOVS     R0,#+2
   \   00000002   0x.... 0x....      B.W      emberAfPrintEnabled

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine3: (+1)
   \   00000000   0x2002             MOVS     R0,#+2
   \   00000002   0x.... 0x....      B.W      emberAfPrintln

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine1: (+1)
   \   00000000   0x4629             MOV      R1,R5
   \   00000002   0x2002             MOVS     R0,#+2
   \   00000004   0x.... 0x....      B.W      emberAfPrintln

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_19:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000040   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_20:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     56          
     57          // network-management form <channel:1> <power:1> <node type:1> [<network id:0--16> [<ula prefix>]]

   \                                 In section .text, align 2, keep-with-next
     58          void networkManagementFormCommand(void)
     59          {
   \                     networkManagementFormCommand: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB095             SUB      SP,SP,#+84
     60            EmberNetworkParameters parameters = {{0}};
   \   00000004   0xA801             ADD      R0,SP,#+4
   \   00000006   0x2150             MOVS     R1,#+80
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
     61            uint16_t options = EMBER_USE_DEFAULTS;
     62            uint8_t channel;
     63            uint32_t channelMask;
     64          
     65            channel = (uint8_t)emberUnsignedCommandArgument(0);
   \   0000000C   0x.... 0x....      BL       ?Subroutine6
     66            channelMask = (channel == 0
     67                           ? EMBER_ALL_802_15_4_CHANNELS_MASK
     68                           : BIT32(channel));
   \                     ??CrossCallReturnLabel_24: (+1)
   \   00000010   0xB2C1             UXTB     R1,R0
   \   00000012   0x2900             CMP      R1,#+0
   \   00000014   0xBF0E             ITEE     EQ 
   \   00000016   0x....             LDREQ.N  R4,??DataTable30_1  ;; 0x7fff800
   \   00000018   0x2101             MOVNE    R1,#+1
   \   0000001A   0xFA01 0xF400      LSLNE    R4,R1,R0
     69          
     70            parameters.radioTxPower = (int8_t)emberSignedCommandArgument(1);
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0x.... 0x....      BL       emberSignedCommandArgument
   \   00000024   0xF88D 0x0030      STRB     R0,[SP, #+48]
     71            options |= EMBER_TX_POWER_OPTION;
     72          
     73            parameters.nodeType = (EmberNodeType)emberUnsignedCommandArgument(2);
   \   00000028   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_19: (+1)
   \   0000002C   0xF88D 0x002F      STRB     R0,[SP, #+47]
     74            options |= EMBER_NODE_TYPE_OPTION;
   \   00000030   0x2530             MOVS     R5,#+48
     75          
     76            if (emberCommandArgumentCount() > 3) {
   \   00000032   0x.... 0x....      ADR.W    R6,?_11
   \   00000036   0x....             ADR.N    R7,??DataTable30  ;; "ERR"
   \   00000038   0x.... 0x....      BL       emberCommandArgumentCount
   \   0000003C   0x2804             CMP      R0,#+4
   \   0000003E   0xDB11             BLT.N    ??networkManagementFormCommand_0
     77              uint8_t networkIdLength;
     78              uint8_t *networkId = emberStringCommandArgument(3, &networkIdLength);
   \   00000040   0xA900             ADD      R1,SP,#+0
   \   00000042   0x2003             MOVS     R0,#+3
   \   00000044   0x.... 0x....      BL       emberStringCommandArgument
   \   00000048   0x4601             MOV      R1,R0
     79              if (networkIdLength > EMBER_NETWORK_ID_SIZE) {
   \   0000004A   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000004E   0x2811             CMP      R0,#+17
   \   00000050   0xBFA8             IT       GE 
   \   00000052   0x.... 0x....      ADRGE.W  R3,?_13
     80                emberAfAppPrintln("%p: %p", "ERR", "invalid network id");
   \   00000056   0xDA10             BGE.N    ??networkManagementFormCommand_1
     81                return;
     82              } else if (networkIdLength != 0) {
   \   00000058   0xB120             CBZ.N    R0,??networkManagementFormCommand_0
     83                MEMCOPY(parameters.networkId, networkId, networkIdLength);
   \   0000005A   0x4602             MOV      R2,R0
   \   0000005C   0xA801             ADD      R0,SP,#+4
   \   0000005E   0x.... 0x....      BL       halCommonMemMove
     84                options |= EMBER_NETWORK_ID_OPTION;
   \   00000062   0x2531             MOVS     R5,#+49
     85              }
     86            }
     87          
     88            if (emberCommandArgumentCount() > 4) {
   \                     ??networkManagementFormCommand_0: (+1)
   \   00000064   0x.... 0x....      BL       emberCommandArgumentCount
   \   00000068   0x2805             CMP      R0,#+5
   \   0000006A   0xDB0D             BLT.N    ??networkManagementFormCommand_2
     89              if (!emberGetIpPrefixArgument(4, parameters.ulaPrefix.bytes)) {
   \   0000006C   0xA905             ADD      R1,SP,#+20
   \   0000006E   0x2004             MOVS     R0,#+4
   \   00000070   0x.... 0x....      BL       emberGetIpPrefixArgument
   \   00000074   0xB930             CBNZ.N   R0,??networkManagementFormCommand_3
     90                emberAfAppPrintln("%p: %p", "ERR", "invalid ula prefix");
   \   00000076   0x.... 0x....      ADR.W    R3,?_14
   \                     ??networkManagementFormCommand_1: (+1)
   \   0000007A   0x463A             MOV      R2,R7
   \   0000007C   0x4631             MOV      R1,R6
   \   0000007E   0x.... 0x....      BL       ??Subroutine7_0
     91                return;
   \                     ??CrossCallReturnLabel_27: (+1)
   \   00000082   0xE006             B.N      ??networkManagementFormCommand_4
     92              }
     93              options |= EMBER_ULA_PREFIX_OPTION;
   \                     ??networkManagementFormCommand_3: (+1)
   \   00000084   0xF045 0x0502      ORR      R5,R5,#0x2
     94            }
     95          
     96            emberFormNetwork(&parameters, options, channelMask);
   \                     ??networkManagementFormCommand_2: (+1)
   \   00000088   0x4622             MOV      R2,R4
   \   0000008A   0x4629             MOV      R1,R5
   \   0000008C   0xA801             ADD      R0,SP,#+4
   \   0000008E   0x.... 0x....      BL       emberFormNetwork
     97          }
   \                     ??networkManagementFormCommand_4: (+1)
   \   00000092   0xB015             ADD      SP,SP,#+84
   \   00000094   0xBDF0             POP      {R4-R7,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine5: (+1)
   \   00000000   0x2002             MOVS     R0,#+2
   \   00000002   0x.... 0x....      B.W      emberUnsignedCommandArgument

   \                                 In section .text, align 2, keep-with-next
   \                     ??Subroutine7_0: (+1)
   \   00000000   0x2002             MOVS     R0,#+2
   \   00000002   0x.... 0x....      B.W      emberAfPrintln

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine6: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0x.... 0x....      B.W      emberUnsignedCommandArgument

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_21:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000040   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
     98          
     99          // network-management join <channel:1> <power:1> <node type:1> <network id:0--16> <extended pan id:8> <pan id:2> <join key:0--16>

   \                                 In section .text, align 2, keep-with-next
    100          void networkManagementJoinCommand(void)
    101          {
   \                     networkManagementJoinCommand: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB097             SUB      SP,SP,#+92
    102            EmberNetworkParameters parameters = {{0}};
   \   00000004   0xA803             ADD      R0,SP,#+12
   \   00000006   0x2150             MOVS     R1,#+80
   \   00000008   0x.... 0x....      BL       __aeabi_memclr4
    103            uint16_t options = EMBER_USE_DEFAULTS;
    104            uint8_t channel;
    105            uint32_t channelMask;
    106            uint8_t networkIdLength;
    107            uint8_t *networkId;
    108            uint8_t zeros[EXTENDED_PAN_ID_SIZE] = {0};
   \   0000000C   0xA801             ADD      R0,SP,#+4
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x2200             MOVS     R2,#+0
   \   00000012   0xC006             STM      R0!,{R1,R2}
    109            uint8_t *joinKey;
    110          
    111            channel = (uint8_t)emberUnsignedCommandArgument(0);
   \   00000014   0x4608             MOV      R0,R1
   \   00000016   0x.... 0x....      BL       emberUnsignedCommandArgument
    112            channelMask = (channel == 0
    113                           ? EMBER_ALL_802_15_4_CHANNELS_MASK
    114                           : BIT32(channel));
   \   0000001A   0xB2C1             UXTB     R1,R0
   \   0000001C   0x2900             CMP      R1,#+0
   \   0000001E   0xBF0E             ITEE     EQ 
   \   00000020   0x....             LDREQ.N  R4,??DataTable30_1  ;; 0x7fff800
   \   00000022   0x2101             MOVNE    R1,#+1
   \   00000024   0xFA01 0xF400      LSLNE    R4,R1,R0
    115          
    116            parameters.radioTxPower = (int8_t)emberSignedCommandArgument(1);
   \   00000028   0xAD0D             ADD      R5,SP,#+52
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x.... 0x....      BL       emberSignedCommandArgument
   \   00000030   0x7128             STRB     R0,[R5, #+4]
    117            options |= EMBER_TX_POWER_OPTION;
    118          
    119            parameters.nodeType = (EmberNodeType)emberUnsignedCommandArgument(2);
   \   00000032   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_18: (+1)
   \   00000036   0x70E8             STRB     R0,[R5, #+3]
    120            options |= EMBER_NODE_TYPE_OPTION;
   \   00000038   0x2730             MOVS     R7,#+48
    121          
    122            networkId = emberStringCommandArgument(3, &networkIdLength);
   \   0000003A   0xA900             ADD      R1,SP,#+0
   \   0000003C   0x2003             MOVS     R0,#+3
   \   0000003E   0x.... 0x....      BL       emberStringCommandArgument
   \   00000042   0x4601             MOV      R1,R0
    123            if (networkIdLength > EMBER_NETWORK_ID_SIZE) {
   \   00000044   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000048   0x.... 0x....      ADR.W    R5,?_11
   \   0000004C   0x2811             CMP      R0,#+17
   \   0000004E   0x....             ADR.N    R6,??DataTable30  ;; "ERR"
   \   00000050   0xBFA8             IT       GE 
   \   00000052   0x.... 0x....      ADRGE.W  R3,?_13
    124              emberAfAppPrintln("%p: %p", "ERR", "invalid network id");
   \   00000056   0xDA29             BGE.N    ??networkManagementJoinCommand_0
    125              return;
    126            } else if (networkIdLength != 0) {
   \   00000058   0xB120             CBZ.N    R0,??networkManagementJoinCommand_1
    127              MEMCOPY(parameters.networkId, networkId, networkIdLength);
   \   0000005A   0x4602             MOV      R2,R0
   \   0000005C   0xA803             ADD      R0,SP,#+12
   \   0000005E   0x.... 0x....      BL       halCommonMemMove
    128              options |= EMBER_NETWORK_ID_OPTION;
   \   00000062   0x2731             MOVS     R7,#+49
    129            }
    130          
    131            emberGetExtendedPanIdArgument(4, parameters.extendedPanId);
   \                     ??networkManagementJoinCommand_1: (+1)
   \   00000064   0xA90B             ADD      R1,SP,#+44
   \   00000066   0x2004             MOVS     R0,#+4
   \   00000068   0x.... 0x....      BL       emberGetExtendedPanIdArgument
    132            if (MEMCOMPARE(zeros, parameters.extendedPanId, EXTENDED_PAN_ID_SIZE) != 0) {
   \   0000006C   0x2208             MOVS     R2,#+8
   \   0000006E   0xA90B             ADD      R1,SP,#+44
   \   00000070   0xA801             ADD      R0,SP,#+4
   \   00000072   0x.... 0x....      BL       halCommonMemCompare
   \   00000076   0xB108             CBZ.N    R0,??networkManagementJoinCommand_2
    133              options |= EMBER_EXTENDED_PAN_ID_OPTION;
   \   00000078   0xF047 0x0704      ORR      R7,R7,#0x4
    134            }
    135          
    136            parameters.panId = (uint16_t)emberUnsignedCommandArgument(5);
   \                     ??networkManagementJoinCommand_2: (+1)
   \   0000007C   0x2005             MOVS     R0,#+5
   \   0000007E   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000082   0xF8AD 0x0034      STRH     R0,[SP, #+52]
    137            if (parameters.panId != 0xFFFF) {
   \   00000086   0xF64F 0x71FF      MOVW     R1,#+65535
   \   0000008A   0xF8BD 0x0034      LDRH     R0,[SP, #+52]
   \   0000008E   0x4288             CMP      R0,R1
   \   00000090   0xBF18             IT       NE 
   \   00000092   0xF047 0x0708      ORRNE    R7,R7,#0x8
    138              options |= EMBER_PAN_ID_OPTION;
    139            }
    140          
    141            joinKey = emberStringCommandArgument(6, &parameters.joinKeyLength);
   \   00000096   0xF10D 0x0159      ADD      R1,SP,#+89
   \   0000009A   0x2006             MOVS     R0,#+6
   \   0000009C   0x.... 0x....      BL       emberStringCommandArgument
    142            if (parameters.joinKeyLength > EMBER_ENCRYPTION_KEY_SIZE) {
   \   000000A0   0xF89D 0x2059      LDRB     R2,[SP, #+89]
   \   000000A4   0x2A11             CMP      R2,#+17
   \   000000A6   0xDB06             BLT.N    ??networkManagementJoinCommand_3
    143              emberAfAppPrintln("%p: %p", "ERR", "invalid join key");
   \   000000A8   0x.... 0x....      ADR.W    R3,?_15
   \                     ??networkManagementJoinCommand_0: (+1)
   \   000000AC   0x4632             MOV      R2,R6
   \   000000AE   0x4629             MOV      R1,R5
   \   000000B0   0x.... 0x....      BL       ??Subroutine7_0
    144              return;
   \                     ??CrossCallReturnLabel_26: (+1)
   \   000000B4   0xE00C             B.N      ??networkManagementJoinCommand_4
    145            } else if (parameters.joinKeyLength != 0) {
   \                     ??networkManagementJoinCommand_3: (+1)
   \   000000B6   0xB132             CBZ.N    R2,??networkManagementJoinCommand_5
    146              MEMCOPY(parameters.joinKey, joinKey, parameters.joinKeyLength);
   \   000000B8   0x4601             MOV      R1,R0
   \   000000BA   0xF10D 0x0049      ADD      R0,SP,#+73
   \   000000BE   0x.... 0x....      BL       halCommonMemMove
    147              options |= EMBER_JOIN_KEY_OPTION;
   \   000000C2   0xF447 0x7780      ORR      R7,R7,#0x100
    148            }
    149          
    150            emberJoinNetwork(&parameters, options, channelMask);
   \                     ??networkManagementJoinCommand_5: (+1)
   \   000000C6   0x4622             MOV      R2,R4
   \   000000C8   0x4639             MOV      R1,R7
   \   000000CA   0xA803             ADD      R0,SP,#+12
   \   000000CC   0x.... 0x....      BL       emberJoinNetwork
    151          }
   \                     ??networkManagementJoinCommand_4: (+1)
   \   000000D0   0xB017             ADD      SP,SP,#+92
   \   000000D2   0xBDF0             POP      {R4-R7,PC}       ;; return

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_22:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000010   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000020   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000030   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000040   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_23:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    152          
    153          // network-management commission <preferred channel:1> <fallback channel mask:4> <network id:0--16> <ula prefix> <extended pan id:8> <key:16> [<pan id:2> [<key sequence:4>]]

   \                                 In section .text, align 2, keep-with-next
    154          void networkManagementCommissionCommand(void)
    155          {
   \                     networkManagementCommissionCommand: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB08E             SUB      SP,SP,#+56
    156            uint8_t preferredChannel;
    157            uint32_t fallbackChannelMask;
    158            uint8_t *networkId;
    159            uint8_t networkIdLength;
    160            EmberPanId panId;
    161            EmberIpv6Prefix ulaPrefix;
    162            uint8_t extendedPanId[EXTENDED_PAN_ID_SIZE];
    163            uint8_t contentsLength;
    164            uint8_t *contents;
    165            EmberKeyData key;
    166            uint32_t keySequence;
    167          
    168            preferredChannel = (uint8_t)emberUnsignedCommandArgument(0);
   \   00000006   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_23: (+1)
   \   0000000A   0x.... 0x....      BL       ?Subroutine2
    169            fallbackChannelMask = emberUnsignedCommandArgument(1);
   \                     ??CrossCallReturnLabel_6: (+1)
   \   0000000E   0x4605             MOV      R5,R0
    170          
    171            networkId = emberStringCommandArgument(2, &networkIdLength);
   \   00000010   0xA905             ADD      R1,SP,#+20
   \   00000012   0x2002             MOVS     R0,#+2
   \   00000014   0x.... 0x....      BL       emberStringCommandArgument
   \   00000018   0x4680             MOV      R8,R0
    172            if (networkIdLength > EMBER_NETWORK_ID_SIZE) {
   \   0000001A   0xF89D 0x0014      LDRB     R0,[SP, #+20]
   \   0000001E   0x.... 0x....      ADR.W    R7,?_11
   \   00000022   0x2811             CMP      R0,#+17
   \   00000024   0x....             ADR.N    R6,??DataTable30  ;; "ERR"
   \   00000026   0xBFA8             IT       GE 
   \   00000028   0x.... 0x....      ADRGE.W  R3,?_13
    173              emberAfAppPrintln("%p: %p", "ERR", "invalid network id");
   \   0000002C   0xDA16             BGE.N    ??networkManagementCommissionCommand_0
    174              return;
    175            }
    176          
    177            if (!emberGetIpPrefixArgument(3, ulaPrefix.bytes)) {
   \   0000002E   0xA908             ADD      R1,SP,#+32
   \   00000030   0x2003             MOVS     R0,#+3
   \   00000032   0x.... 0x....      BL       emberGetIpPrefixArgument
   \   00000036   0xB910             CBNZ.N   R0,??networkManagementCommissionCommand_1
    178              emberAfAppPrintln("%p: %p", "ERR", "invalid ula prefix");
   \   00000038   0x.... 0x....      ADR.W    R3,?_14
   \   0000003C   0xE00E             B.N      ??networkManagementCommissionCommand_0
    179              return;
    180            }
    181          
    182            emberGetExtendedPanIdArgument(4, extendedPanId);
   \                     ??networkManagementCommissionCommand_1: (+1)
   \   0000003E   0xA906             ADD      R1,SP,#+24
   \   00000040   0x2004             MOVS     R0,#+4
   \   00000042   0x.... 0x....      BL       emberGetExtendedPanIdArgument
    183          
    184            contents = emberStringCommandArgument(5, &contentsLength);
   \   00000046   0xF10D 0x0115      ADD      R1,SP,#+21
   \   0000004A   0x2005             MOVS     R0,#+5
   \   0000004C   0x.... 0x....      BL       emberStringCommandArgument
    185            if (contentsLength != EMBER_ENCRYPTION_KEY_SIZE) {
   \   00000050   0xF89D 0x1015      LDRB     R1,[SP, #+21]
   \   00000054   0x2910             CMP      R1,#+16
   \   00000056   0xD006             BEQ.N    ??networkManagementCommissionCommand_2
    186              emberAfAppPrintln("%p: %p", "ERR", "invalid key");
   \   00000058   0x.... 0x....      ADR.W    R3,?_16
   \                     ??networkManagementCommissionCommand_0: (+1)
   \   0000005C   0x4632             MOV      R2,R6
   \   0000005E   0x4639             MOV      R1,R7
   \   00000060   0x.... 0x....      BL       ??Subroutine7_0
    187              return;
   \                     ??CrossCallReturnLabel_25: (+1)
   \   00000064   0xE027             B.N      ??networkManagementCommissionCommand_3
    188            }
    189            MEMCOPY(key.contents, contents, EMBER_ENCRYPTION_KEY_SIZE);
   \                     ??networkManagementCommissionCommand_2: (+1)
   \   00000066   0x4601             MOV      R1,R0
   \   00000068   0x2210             MOVS     R2,#+16
   \   0000006A   0xA80A             ADD      R0,SP,#+40
   \   0000006C   0x.... 0x....      BL       halCommonMemMove
    190          
    191            panId = 0xFFFF;
   \   00000070   0xF64F 0x77FF      MOVW     R7,#+65535
    192            keySequence = 0;
   \   00000074   0x2600             MOVS     R6,#+0
    193            if (emberCommandArgumentCount() > 6) {
   \   00000076   0x.... 0x....      BL       emberCommandArgumentCount
   \   0000007A   0x2807             CMP      R0,#+7
   \   0000007C   0xDB0B             BLT.N    ??networkManagementCommissionCommand_4
    194              panId = (EmberPanId)emberUnsignedCommandArgument(6);
   \   0000007E   0x2006             MOVS     R0,#+6
   \   00000080   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000084   0x4607             MOV      R7,R0
    195              if (emberCommandArgumentCount() > 7) {
   \   00000086   0x.... 0x....      BL       emberCommandArgumentCount
   \   0000008A   0x2808             CMP      R0,#+8
   \   0000008C   0xDB03             BLT.N    ??networkManagementCommissionCommand_4
    196                keySequence = emberUnsignedCommandArgument(7);
   \   0000008E   0x2007             MOVS     R0,#+7
   \   00000090   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000094   0x4606             MOV      R6,R0
    197              }
    198            }
    199          
    200            emberCommissionNetwork(preferredChannel,
    201                                   fallbackChannelMask,
    202                                   networkId,
    203                                   networkIdLength,
    204                                   panId,
    205                                   ulaPrefix.bytes,
    206                                   extendedPanId,
    207                                   &key,
    208                                   keySequence);
   \                     ??networkManagementCommissionCommand_4: (+1)
   \   00000096   0x9604             STR      R6,[SP, #+16]
   \   00000098   0xA80A             ADD      R0,SP,#+40
   \   0000009A   0x9003             STR      R0,[SP, #+12]
   \   0000009C   0xB2BF             UXTH     R7,R7
   \   0000009E   0xA806             ADD      R0,SP,#+24
   \   000000A0   0x9002             STR      R0,[SP, #+8]
   \   000000A2   0xA808             ADD      R0,SP,#+32
   \   000000A4   0x9001             STR      R0,[SP, #+4]
   \   000000A6   0x9700             STR      R7,[SP, #+0]
   \   000000A8   0x4642             MOV      R2,R8
   \   000000AA   0xF89D 0x3014      LDRB     R3,[SP, #+20]
   \   000000AE   0x4629             MOV      R1,R5
   \   000000B0   0xB2E0             UXTB     R0,R4
   \   000000B2   0x.... 0x....      BL       emberCommissionNetwork
    209          }
   \                     ??networkManagementCommissionCommand_3: (+1)
   \   000000B6   0xB00E             ADD      SP,SP,#+56
   \   000000B8   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine2: (+1)
   \   00000000   0x4604             MOV      R4,R0
   \   00000002   0x2001             MOVS     R0,#+1
   \   00000004   0x.... 0x....      B.W      emberUnsignedCommandArgument
    210          
    211          // network-management join-commissioned <power:1> <node type:1> [<require connectivity:1>]

   \                                 In section .text, align 2, keep-with-next
    212          void networkManagementJoinCommissionedCommand(void)
    213          {
   \                     networkManagementJoinCommissionedCommand: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    214            int8_t radioTxPower;
    215            EmberNodeType nodeType;
    216            bool requireConnectivity;
    217          
    218            radioTxPower = (int8_t)emberSignedCommandArgument(0);
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       emberSignedCommandArgument
   \   00000008   0x.... 0x....      BL       ?Subroutine2
    219            nodeType = (EmberNodeType)emberUnsignedCommandArgument(1);
   \                     ??CrossCallReturnLabel_5: (+1)
   \   0000000C   0x4605             MOV      R5,R0
    220            requireConnectivity = (emberCommandArgumentCount() > 2
    221                                   && (bool)emberUnsignedCommandArgument(2));
   \   0000000E   0x.... 0x....      BL       emberCommandArgumentCount
   \   00000012   0x2803             CMP      R0,#+3
   \   00000014   0xDB05             BLT.N    ??networkManagementJoinCommissionedCommand_0
   \   00000016   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_17: (+1)
   \   0000001A   0x0002             MOVS     R2,R0
   \   0000001C   0xD002             BEQ.N    ??networkManagementJoinCommissionedCommand_1
   \   0000001E   0x2201             MOVS     R2,#+1
   \   00000020   0xE000             B.N      ??networkManagementJoinCommissionedCommand_1
   \                     ??networkManagementJoinCommissionedCommand_0: (+1)
   \   00000022   0x2200             MOVS     R2,#+0
    222          
    223            emberJoinCommissioned(radioTxPower, nodeType, requireConnectivity);
   \                     ??networkManagementJoinCommissionedCommand_1: (+1)
   \   00000024   0xB2E9             UXTB     R1,R5
   \   00000026   0xB260             SXTB     R0,R4
   \   00000028   0xE8BD 0x4038      POP      {R3-R5,LR}
   \   0000002C   0xB2D2             UXTB     R2,R2
   \   0000002E   0x.... 0x....      B.W      emberJoinCommissioned
    224          }
    225          
    226          // network-management set-master-key <master key:16>

   \                                 In section .text, align 2, keep-with-next
    227          void networkManagementSetMasterKeyCommand(void)
    228          {
   \                     networkManagementSetMasterKeyCommand: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
    229            EmberSecurityParameters parameters = {0};
   \   00000004   0xA801             ADD      R0,SP,#+4
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x460B             MOV      R3,R1
   \   0000000C   0xC00E             STM      R0!,{R1-R3}
    230            uint8_t contentsLength;
    231            uint8_t *contents;
    232            EmberKeyData masterKey;
    233          
    234            contents = emberStringCommandArgument(0, &contentsLength);
   \   0000000E   0xA900             ADD      R1,SP,#+0
   \   00000010   0x4610             MOV      R0,R2
   \   00000012   0x.... 0x....      BL       emberStringCommandArgument
   \   00000016   0x4601             MOV      R1,R0
    235            if (contentsLength != EMBER_ENCRYPTION_KEY_SIZE) {
   \   00000018   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000001C   0x2810             CMP      R0,#+16
   \   0000001E   0xD004             BEQ.N    ??networkManagementSetMasterKeyCommand_0
    236              emberAfAppPrintln("%p: %p", "ERR", "invalid master key");
   \   00000020   0x.... 0x....      ADR.W    R3,?_17
   \   00000024   0x.... 0x....      BL       ??Subroutine0_0
    237              return;
   \                     ??CrossCallReturnLabel_29: (+1)
   \   00000028   0xE009             B.N      ??networkManagementSetMasterKeyCommand_1
    238            }
    239            MEMCOPY(masterKey.contents, contents, EMBER_ENCRYPTION_KEY_SIZE);
   \                     ??networkManagementSetMasterKeyCommand_0: (+1)
   \   0000002A   0x2210             MOVS     R2,#+16
   \   0000002C   0xA804             ADD      R0,SP,#+16
   \   0000002E   0x.... 0x....      BL       halCommonMemMove
    240            parameters.networkKey = &masterKey;
   \   00000032   0xA804             ADD      R0,SP,#+16
   \   00000034   0x9001             STR      R0,[SP, #+4]
    241          
    242            emberSetSecurityParameters(&parameters, EMBER_NETWORK_KEY_OPTION);
   \   00000036   0x2101             MOVS     R1,#+1
   \   00000038   0xA801             ADD      R0,SP,#+4
   \   0000003A   0x.... 0x....      BL       emberSetSecurityParameters
    243          }
   \                     ??networkManagementSetMasterKeyCommand_1: (+1)
   \   0000003E   0xB009             ADD      SP,SP,#+36
   \   00000040   0xBD00             POP      {PC}             ;; return

   \                                 In section .text, align 2, keep-with-next
   \                     ?Subroutine0: (+1)
   \   00000000   0x.... 0x....      ADR.W    R3,?_18
   \                     ??Subroutine0_0: (+1)
   \   00000004   0x.... 0x....      ADR.W    R1,?_11
   \   00000008   0x....             ADR.N    R2,??DataTable30  ;; "ERR"
   \   0000000A                      REQUIRE ??Subroutine7_0
   \   0000000A                      ;; // Fall through to label ??Subroutine7_0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_24:
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    244          
    245          // network-management set-join-key <join key:1--16> [<eui64:8>]

   \                                 In section .text, align 2, keep-with-next
    246          void networkManagementSetJoinKeyCommand(void)
    247          {
   \                     networkManagementSetJoinKeyCommand: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB084             SUB      SP,SP,#+16
    248            uint8_t joinKeyLength;
    249            uint8_t *joinKey;
    250            bool hasEui64;
    251            EmberEui64 eui64;
    252          
    253            joinKey = emberStringCommandArgument(0, &joinKeyLength);
   \   00000004   0xA900             ADD      R1,SP,#+0
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      BL       emberStringCommandArgument
   \   0000000C   0x4604             MOV      R4,R0
    254            if (joinKeyLength > EMBER_ENCRYPTION_KEY_SIZE) {
   \   0000000E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000012   0x2811             CMP      R0,#+17
   \   00000014   0xDB04             BLT.N    ??networkManagementSetJoinKeyCommand_0
    255              emberAfAppPrintln("%p: %p", "ERR", "invalid join key");
   \   00000016   0x.... 0x....      ADR.W    R3,?_15
   \   0000001A   0x.... 0x....      BL       ??Subroutine0_0
    256              return;
   \                     ??CrossCallReturnLabel_28: (+1)
   \   0000001E   0xBD1F             POP      {R0-R4,PC}
    257            }
    258          
    259            hasEui64 = (emberCommandArgumentCount() > 1);
   \                     ??networkManagementSetJoinKeyCommand_0: (+1)
   \   00000020   0x.... 0x....      BL       emberCommandArgumentCount
   \   00000024   0x2802             CMP      R0,#+2
   \   00000026   0xDB05             BLT.N    ??networkManagementSetJoinKeyCommand_1
    260            if (hasEui64) {
    261              emberGetEui64Argument(1, &eui64);
   \   00000028   0xA901             ADD      R1,SP,#+4
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x.... 0x....      BL       emberGetExtendedPanIdArgument
   \   00000030   0xA801             ADD      R0,SP,#+4
   \   00000032   0xE000             B.N      ??networkManagementSetJoinKeyCommand_2
    262            }
    263          
    264            emberSetJoinKey((hasEui64 ? &eui64 : NULL), joinKey, joinKeyLength);
   \                     ??networkManagementSetJoinKeyCommand_1: (+1)
   \   00000034   0x2000             MOVS     R0,#+0
   \                     ??networkManagementSetJoinKeyCommand_2: (+1)
   \   00000036   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   0000003A   0x4621             MOV      R1,R4
   \   0000003C   0x.... 0x....      BL       emberSetJoinKey
    265          }
   \   00000040   0xBD1F             POP      {R0-R4,PC}       ;; return
    266          
    267          // network-management commissioning start <commissioner id>

   \                                 In section .text, align 2, keep-with-next
    268          void networkManagementCommissioningStartCommand(void)
    269          {
   \                     networkManagementCommissioningStartCommand: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    270            uint8_t commissionerIdLength;
    271            uint8_t *commissionerId;
    272          
    273            commissionerId = emberStringCommandArgument(0, &commissionerIdLength);
   \   00000002   0xA900             ADD      R1,SP,#+0
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x.... 0x....      BL       emberStringCommandArgument
    274          
    275            emberBecomeCommissioner(commissionerId, commissionerIdLength);
   \   0000000A   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   0000000E   0x.... 0x....      BL       emberBecomeCommissioner
    276          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
    277          
    278          // network-management set-joining-mode <mode:1> <length:1>

   \                                 In section .text, align 2, keep-with-next
    279          void networkManagementSetJoiningModeCommand(void)
    280          {
   \                     networkManagementSetJoiningModeCommand: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    281            EmberJoiningMode mode;
    282            uint8_t length;
    283          
    284            mode = (EmberJoiningMode)emberUnsignedCommandArgument(0);
   \   00000002   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_22: (+1)
   \   00000006   0x.... 0x....      BL       ?Subroutine2
    285          
    286            length = (uint8_t)emberUnsignedCommandArgument(1);
    287          
    288            emberSetJoiningMode(mode, length);
   \                     ??CrossCallReturnLabel_4: (+1)
   \   0000000A   0xB2C1             UXTB     R1,R0
   \   0000000C   0xB2E0             UXTB     R0,R4
   \   0000000E   0xE8BD 0x4010      POP      {R4,LR}
   \   00000012   0x.... 0x....      B.W      emberSetJoiningMode
    289          }
    290          
    291          // network-management steering add <eui64:8>

   \                                 In section .text, align 2, keep-with-next
    292          void networkManagementSteeringAddCommand(void)
    293          {
   \                     networkManagementSteeringAddCommand: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
    294            EmberEui64 eui64;
    295          
    296            emberGetEui64Argument(0, &eui64);
   \   00000004   0xA900             ADD      R1,SP,#+0
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      BL       emberGetExtendedPanIdArgument
    297          
    298            emberAddSteeringEui64(&eui64);
   \   0000000C   0xA800             ADD      R0,SP,#+0
   \   0000000E   0x.... 0x....      BL       emberAddSteeringEui64
    299          }
   \   00000012   0xBD07             POP      {R0-R2,PC}       ;; return
    300          
    301          // network-management scan active [<channel:1> [<duration:1>]]
    302          // network-management scan energy [<channel:1> [<duration:1>]]

   \                                 In section .text, align 2, keep-with-next
    303          void networkManagementScanCommand(void)
    304          {
   \                     networkManagementScanCommand: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    305            EmberNetworkScanType scanType;
    306            uint8_t channel;
    307            uint32_t channelMask;
    308            uint8_t duration;
    309          
    310            scanType = (emberStringCommandArgument(-1, NULL)[0] == 'a'
    311                        ? EMBER_ACTIVE_SCAN
    312                        : EMBER_ENERGY_SCAN);
   \   00000002   0x2100             MOVS     R1,#+0
   \   00000004   0xF04F 0x30FF      MOV      R0,#-1
   \   00000008   0x.... 0x....      BL       emberStringCommandArgument
   \   0000000C   0x7800             LDRB     R0,[R0, #+0]
   \   0000000E   0x2861             CMP      R0,#+97
   \   00000010   0xBF0C             ITE      EQ 
   \   00000012   0x2401             MOVEQ    R4,#+1
   \   00000014   0x2400             MOVNE    R4,#+0
    313          
    314            channel = (emberCommandArgumentCount() > 0
    315                       ? (uint8_t)emberUnsignedCommandArgument(0)
    316                       : 0);
   \   00000016   0x.... 0x....      BL       emberCommandArgumentCount
   \   0000001A   0xB118             CBZ.N    R0,??networkManagementScanCommand_0
   \   0000001C   0x.... 0x....      BL       ?Subroutine6
    317            channelMask = (channel == 0
    318                           ? EMBER_ALL_802_15_4_CHANNELS_MASK
    319                           : BIT32(channel));
   \                     ??CrossCallReturnLabel_21: (+1)
   \   00000020   0xB2C0             UXTB     R0,R0
   \   00000022   0xB908             CBNZ.N   R0,??networkManagementScanCommand_1
   \                     ??networkManagementScanCommand_0: (+1)
   \   00000024   0x....             LDR.N    R5,??DataTable30_1  ;; 0x7fff800
   \   00000026   0xE002             B.N      ??networkManagementScanCommand_2
   \                     ??networkManagementScanCommand_1: (+1)
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0xFA01 0xF500      LSL      R5,R1,R0
    320          
    321            duration = (emberCommandArgumentCount() > 1
    322                        ? (uint8_t)emberUnsignedCommandArgument(1)
    323                        : DEFAULT_SCAN_DURATION);
   \                     ??networkManagementScanCommand_2: (+1)
   \   0000002E   0x.... 0x....      BL       emberCommandArgumentCount
   \   00000032   0x2802             CMP      R0,#+2
   \   00000034   0xDB03             BLT.N    ??networkManagementScanCommand_3
   \   00000036   0x2001             MOVS     R0,#+1
   \   00000038   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   0000003C   0xE000             B.N      ??networkManagementScanCommand_4
   \                     ??networkManagementScanCommand_3: (+1)
   \   0000003E   0x2005             MOVS     R0,#+5
    324          
    325            emberStartScan(scanType, channelMask, duration);
   \                     ??networkManagementScanCommand_4: (+1)
   \   00000040   0xB2C2             UXTB     R2,R0
   \   00000042   0x4629             MOV      R1,R5
   \   00000044   0x4620             MOV      R0,R4
   \   00000046   0xE8BD 0x4038      POP      {R3-R5,LR}
   \   0000004A   0x.... 0x....      B.W      emberStartScan
    326          }
    327          
    328          // network-management gateway <border router flags:1> <prefix> <domain id:1> <preferred lifetime:4> <valid lifetime:4>

   \                                 In section .text, align 2, keep-with-next
    329          void networkManagementConfigureGatewayCommand(void)
    330          {
   \                     networkManagementConfigureGatewayCommand: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB086             SUB      SP,SP,#+24
    331            uint8_t borderRouterFlags;
    332            uint8_t prefixLength;
    333            EmberIpv6Prefix prefix;
    334            uint8_t domainId;
    335            uint32_t preferredLifetimeS;
    336            uint32_t validLifetimeS;
    337          
    338            borderRouterFlags = (uint8_t)emberUnsignedCommandArgument(0);
   \   00000004   0x.... 0x....      BL       ?Subroutine6
   \                     ??CrossCallReturnLabel_20: (+1)
   \   00000008   0x4604             MOV      R4,R0
    339          
    340            emberStringCommandArgument(1, &prefixLength);
   \   0000000A   0xA902             ADD      R1,SP,#+8
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0x.... 0x....      BL       emberStringCommandArgument
    341            if (prefixLength != 0 && !emberGetIpPrefixArgument(1, prefix.bytes)) {
   \   00000012   0xF89D 0x0008      LDRB     R0,[SP, #+8]
   \   00000016   0xB138             CBZ.N    R0,??networkManagementConfigureGatewayCommand_0
   \   00000018   0xA903             ADD      R1,SP,#+12
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x.... 0x....      BL       emberGetIpPrefixArgument
   \   00000020   0xB910             CBNZ.N   R0,??networkManagementConfigureGatewayCommand_0
    342              emberAfAppPrintln("%p: %p", "ERR", "invalid prefix");
   \   00000022   0x.... 0x....      BL       ?Subroutine0
    343              return;
   \                     ??CrossCallReturnLabel_31: (+1)
   \   00000026   0xE015             B.N      ??networkManagementConfigureGatewayCommand_1
    344            }
    345          
    346            domainId = (uint8_t)emberUnsignedCommandArgument(2);
   \                     ??networkManagementConfigureGatewayCommand_0: (+1)
   \   00000028   0x.... 0x....      BL       ?Subroutine5
   \                     ??CrossCallReturnLabel_16: (+1)
   \   0000002C   0x4605             MOV      R5,R0
    347          
    348            preferredLifetimeS = emberUnsignedCommandArgument(3);
   \   0000002E   0x2003             MOVS     R0,#+3
   \   00000030   0x.... 0x....      BL       emberUnsignedCommandArgument
   \   00000034   0x4606             MOV      R6,R0
    349            validLifetimeS = emberUnsignedCommandArgument(4);
   \   00000036   0x2004             MOVS     R0,#+4
   \   00000038   0x.... 0x....      BL       emberUnsignedCommandArgument
    350          
    351            emberConfigureGateway(borderRouterFlags,
    352                                  (prefixLength == 0 ? NULL : prefix.bytes),
    353                                  prefixLength,
    354                                  domainId,
    355                                  preferredLifetimeS,
    356                                  validLifetimeS);
   \   0000003C   0xF89D 0x1008      LDRB     R1,[SP, #+8]
   \   00000040   0xB101             CBZ.N    R1,??networkManagementConfigureGatewayCommand_2
   \   00000042   0xA903             ADD      R1,SP,#+12
   \                     ??networkManagementConfigureGatewayCommand_2: (+1)
   \   00000044   0x9001             STR      R0,[SP, #+4]
   \   00000046   0x9600             STR      R6,[SP, #+0]
   \   00000048   0xB2EB             UXTB     R3,R5
   \   0000004A   0xF89D 0x2008      LDRB     R2,[SP, #+8]
   \   0000004E   0xB2E0             UXTB     R0,R4
   \   00000050   0x.... 0x....      BL       emberConfigureGateway
    357          }
   \                     ??networkManagementConfigureGatewayCommand_1: (+1)
   \   00000054   0xB006             ADD      SP,SP,#+24
   \   00000056   0xBD70             POP      {R4-R6,PC}       ;; return
    358          
    359          // network-management global-addresses [prefix]

   \                                 In section .text, align 2, keep-with-next
    360          void networkManagementGetGlobalAddressesCommand(void)
    361          {
   \                     networkManagementGetGlobalAddressesCommand: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
    362            if (emberCommandArgumentCount() > 0) {
   \   00000004   0x.... 0x....      BL       emberCommandArgumentCount
   \   00000008   0xB190             CBZ.N    R0,??networkManagementGetGlobalAddressesCommand_0
    363              EmberIpv6Prefix prefix = {{0}};
   \   0000000A   0x.... 0x....      ADR.W    R0,?_25
    364              if (!emberGetIpPrefixArgument(0, prefix.bytes)) {
   \   0000000E   0xA900             ADD      R1,SP,#+0
   \   00000010   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   00000014   0xE9CD 0x2300      STRD     R2,R3,[SP, #+0]
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x.... 0x....      BL       emberGetIpPrefixArgument
   \   0000001E   0xB910             CBNZ.N   R0,??networkManagementGetGlobalAddressesCommand_1
    365                emberAfAppPrintln("%p: %p", "ERR", "invalid prefix");
   \   00000020   0x.... 0x....      BL       ?Subroutine0
    366                return;
   \                     ??CrossCallReturnLabel_30: (+1)
   \   00000024   0xBD07             POP      {R0-R2,PC}
    367              }
    368              emberGetGlobalAddresses(prefix.bytes, sizeof(EmberIpv6Prefix));
   \                     ??networkManagementGetGlobalAddressesCommand_1: (+1)
   \   00000026   0x2108             MOVS     R1,#+8
   \   00000028   0xA800             ADD      R0,SP,#+0
   \   0000002A   0x.... 0x....      BL       emberGetGlobalAddresses
   \   0000002E   0xBD07             POP      {R0-R2,PC}
    369            } else {
    370              emberGetGlobalAddresses(NULL, 0);
   \                     ??networkManagementGetGlobalAddressesCommand_0: (+1)
   \   00000030   0x2100             MOVS     R1,#+0
   \   00000032   0x.... 0x....      BL       emberGetGlobalAddresses
    371            }
    372          }
   \   00000036   0xBD07             POP      {R0-R2,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ?_25:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30:
   \   00000000   0x45 0x52          DC8      "ERR"
   \              0x52 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_1:
   \   00000000   0x07FFF800         DC32     0x7fff800

   \                                 In section .rodata, align 1, keep-with-next
   \                     ?_2:
   \   00000000   0x00               DC8 ""

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x45 0x52          DC8 "ERR"
   \              0x52 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x6E 0x65          DC8 "network status: 0x%x"
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x73 0x74    
   \              0x61 0x74    
   \              0x75 0x73    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x78    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x65 0x75          DC8 "eui64: "
   \              0x69 0x36    
   \              0x34 0x3A    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x6E 0x65          DC8 "network id: %s"
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x69 0x64    
   \              0x3A 0x20    
   \              0x25 0x73    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x6E 0x6F          DC8 "node type: 0x%x"
   \              0x64 0x65    
   \              0x20 0x74    
   \              0x79 0x70    
   \              0x65 0x3A    
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x78 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x65 0x78          DC8 "extended pan id: "
   \              0x74 0x65    
   \              0x6E 0x64    
   \              0x65 0x64    
   \              0x20 0x70    
   \              0x61 0x6E    
   \              0x20 0x69    
   \              0x64 0x3A    
   \              0x20 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x70 0x61          DC8 "pan id: 0x%2x"
   \              0x6E 0x20    
   \              0x69 0x64    
   \              0x3A 0x20    
   \              0x30 0x78    
   \              0x25 0x32    
   \              0x78 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x63 0x68          DC8 "channel: %u"
   \              0x61 0x6E    
   \              0x6E 0x65    
   \              0x6C 0x3A    
   \              0x20 0x25    
   \              0x75 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x72 0x61          DC8 "radio tx power: %d dBm "
   \              0x64 0x69    
   \              0x6F 0x20    
   \              0x74 0x78    
   \              0x20 0x70    
   \              0x6F 0x77    
   \              0x65 0x72    
   \              0x3A 0x20    
   \              0x25 0x64    
   \              0x20 0x64    
   \              0x42 0x6D    
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x75 0x6C          DC8 "ula prefix: "
   \              0x61 0x20    
   \              0x70 0x72    
   \              0x65 0x66    
   \              0x69 0x78    
   \              0x3A 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x6C 0x6F          DC8 "local ip %u: "
   \              0x63 0x61    
   \              0x6C 0x20    
   \              0x69 0x70    
   \              0x20 0x25    
   \              0x75 0x3A    
   \              0x20 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x25 0x70          DC8 "%p: %p"
   \              0x3A 0x20    
   \              0x25 0x70    
   \              0x00         
   \   00000007   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x69 0x6E          DC8 "invalid network id"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x6E 0x65    
   \              0x74 0x77    
   \              0x6F 0x72    
   \              0x6B 0x20    
   \              0x69 0x64    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_14:
   \   00000000   0x69 0x6E          DC8 "invalid ula prefix"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x75 0x6C    
   \              0x61 0x20    
   \              0x70 0x72    
   \              0x65 0x66    
   \              0x69 0x78    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_15:
   \   00000000   0x69 0x6E          DC8 "invalid join key"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x6A 0x6F    
   \              0x69 0x6E    
   \              0x20 0x6B    
   \              0x65 0x79    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_16:
   \   00000000   0x69 0x6E          DC8 "invalid key"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x6B 0x65    
   \              0x79 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_17:
   \   00000000   0x69 0x6E          DC8 "invalid master key"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x6D 0x61    
   \              0x73 0x74    
   \              0x65 0x72    
   \              0x20 0x6B    
   \              0x65 0x79    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_18:
   \   00000000   0x69 0x6E          DC8 "invalid prefix"
   \              0x76 0x61    
   \              0x6C 0x69    
   \              0x64 0x20    
   \              0x70 0x72    
   \              0x65 0x66    
   \              0x69 0x78    
   \              0x00         
   \   0000000F   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      80   networkManagementCommissionCommand
        80   -> emberAfPrintln
        80   -> emberCommandArgumentCount
        80   -> emberCommissionNetwork
        80   -> emberGetExtendedPanIdArgument
        80   -> emberGetIpPrefixArgument
        80   -> emberStringCommandArgument
        80   -> emberUnsignedCommandArgument
        80   -> halCommonMemMove
       8   networkManagementCommissioningStartCommand
         8   -> emberBecomeCommissioner
         8   -> emberStringCommandArgument
      40   networkManagementConfigureGatewayCommand
        40   -> emberAfPrintln
        40   -> emberConfigureGateway
        40   -> emberGetIpPrefixArgument
        40   -> emberStringCommandArgument
        40   -> emberUnsignedCommandArgument
     104   networkManagementFormCommand
       104   -> __aeabi_memclr4
       104   -> emberAfPrintln
       104   -> emberCommandArgumentCount
       104   -> emberFormNetwork
       104   -> emberGetIpPrefixArgument
       104   -> emberSignedCommandArgument
       104   -> emberStringCommandArgument
       104   -> emberUnsignedCommandArgument
       104   -> halCommonMemMove
      16   networkManagementGetGlobalAddressesCommand
        16   -> emberAfPrintln
        16   -> emberCommandArgumentCount
        16   -> emberGetGlobalAddresses
        16   -> emberGetIpPrefixArgument
     136   networkManagementInfoCommand
       136   -> __aeabi_memclr4
       136   -> emberAfPrint
       136   -> emberAfPrintBigEndianEui64
       136   -> emberAfPrintEnabled
       136   -> emberAfPrintExtendedPanId
       136   -> emberAfPrintIpv6Address
       136   -> emberAfPrintIpv6Prefix
       136   -> emberAfPrintln
       136   -> emberEui64
       136   -> emberGetLocalIpAddress
       136   -> emberGetNetworkParameters
       136   -> emberNetworkStatus
       136   -> halCommonMemMove
     112   networkManagementJoinCommand
       112   -> __aeabi_memclr4
       112   -> emberAfPrintln
       112   -> emberGetExtendedPanIdArgument
       112   -> emberJoinNetwork
       112   -> emberSignedCommandArgument
       112   -> emberStringCommandArgument
       112   -> emberUnsignedCommandArgument
       112   -> halCommonMemCompare
       112   -> halCommonMemMove
      16   networkManagementJoinCommissionedCommand
        16   -> emberCommandArgumentCount
         0   -> emberJoinCommissioned
        16   -> emberSignedCommandArgument
        16   -> emberUnsignedCommandArgument
      16   networkManagementScanCommand
        16   -> emberCommandArgumentCount
         0   -> emberStartScan
        16   -> emberStringCommandArgument
        16   -> emberUnsignedCommandArgument
      24   networkManagementSetJoinKeyCommand
        24   -> emberAfPrintln
        24   -> emberCommandArgumentCount
        24   -> emberGetExtendedPanIdArgument
        24   -> emberSetJoinKey
        24   -> emberStringCommandArgument
       8   networkManagementSetJoiningModeCommand
         0   -> emberSetJoiningMode
         8   -> emberUnsignedCommandArgument
      40   networkManagementSetMasterKeyCommand
        40   -> emberAfPrintln
        40   -> emberSetSecurityParameters
        40   -> emberStringCommandArgument
        40   -> halCommonMemMove
      16   networkManagementSteeringAddCommand
        16   -> emberAddSteeringEui64
        16   -> emberGetExtendedPanIdArgument


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable29
       4  ??DataTable30
       4  ??DataTable30_1
       6  ??Subroutine7_0
      10  ?Subroutine0
       8  ?Subroutine1
       8  ?Subroutine2
       6  ?Subroutine3
       6  ?Subroutine4
       6  ?Subroutine5
       6  ?Subroutine6
      24  ?_0
       8  ?_1
      16  ?_10
       8  ?_11
       4  ?_12
      20  ?_13
      20  ?_14
      20  ?_15
      12  ?_16
      20  ?_17
      16  ?_18
      80  ?_19
       1  ?_2
      20  ?_20
      80  ?_21
      80  ?_22
       8  ?_23
      12  ?_24
       8  ?_25
      16  ?_3
      16  ?_4
      20  ?_5
      16  ?_6
      12  ?_7
      24  ?_8
      16  ?_9
     188  networkManagementCommissionCommand
      20  networkManagementCommissioningStartCommand
      88  networkManagementConfigureGatewayCommand
     150  networkManagementFormCommand
      56  networkManagementGetGlobalAddressesCommand
     248  networkManagementInfoCommand
     212  networkManagementJoinCommand
      50  networkManagementJoinCommissionedCommand
      78  networkManagementScanCommand
      66  networkManagementSetJoinKeyCommand
      22  networkManagementSetJoiningModeCommand
      66  networkManagementSetMasterKeyCommand
      20  networkManagementSteeringAddCommand

 
   285 bytes in section .rodata
 1 624 bytes in section .text
 
 1 624 bytes of CODE  memory
   285 bytes of CONST memory

Errors: none
Warnings: none
